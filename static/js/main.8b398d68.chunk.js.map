{"version":3,"sources":["logo.svg","SheetWriter.js","Store.js","Graphs.js","PersonalSpace.js","Selector.js","Input.js","YourWorkout.js","UserRadio.js","Checkbox.js","CheckBoxContainer.js","VersusSpace.js","Statistics.js","DynamicSpreadsheet.js","Field.js","ApiForm.js","SheetAccess.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SheetWriter_WriteSingleCell","props","body","values","value","window","gapi","client","sheets","spreadsheets","update","spreadsheetId","apiKey","SheetID","range","valueInputOption","resource","then","response","result","console","log","concat","updatedCells","userData","key","Object","NODE_ENV","PUBLIC_URL","KEY","SHEET_ID","Client-ID","CLIENT_ID","getCell","user","scope","map","id","name","sheetScope","Store_workoutName","dateTable","Squat","Deadlift","Press","BenchPress","Bent-Over Barbell Row","PowerClean","dataSheets","getCellIndex","workout","date","index","filter","cell","i","Store_fillWorkoutDates","workoutName","today","moment_default","tupel","keys","length","push","sort","a","b","first","second","duration","diff","asDays","lastEntry","format","pop","Store_fillVersusData","versusData","time","entry","username","versusname","weight","versusworkout","includes","entryName","assign","_defineProperty","e","sortable","slice","Store_data","styles","outer","paddingTop","paddingBottom","position","height","inner","top","left","width","colors","colorChanger","Graphs_ChartComponent","data","react_default","createElement","style","lib","barGraph","Graphs_BarGraph","workoutNames","otherGraph","Graphs_LineGraph","graphOption","this","option","label","fontSize","dataKey","fill","strokeDasharray","wrapperStyle","bottom","element","react","connectNulls","type","stroke","margin","right","PersonalSpace_PersonalSpace","_Component","PersonalSpace","_getPrototypeOf2","_temp","_this","PersonalSpace_classCallCheck","_len","arguments","args","Array","_key","PersonalSpace_possibleConstructorReturn","PersonalSpace_getPrototypeOf","call","apply","state","dataSet","Store_fillData","setState","row","PersonalSpace_inherits","Selector_DropDown","DropDown","Selector_classCallCheck","Selector_possibleConstructorReturn","Selector_getPrototypeOf","currentSelection","title","onUpdate","options","es","eventKey","error","bsStyle","onSelect","Selector_inherits","Input_InputComponent","InputComponent","Input_classCallCheck","Input_possibleConstructorReturn","Input_getPrototypeOf","selName","set","selDate","_this$state","refs","maxWeight","submitted","parseFloat","reps","selWorkout","prevProps","_this2","ref","placeholder","onClick","handleButtonAddSet","handleButton","Input_inherits","YourWorkout_WorkoutTab","WorkoutTab","YourWorkout_classCallCheck","YourWorkout_possibleConstructorReturn","YourWorkout_getPrototypeOf","lodash_default","forEach","lastElem","hasOwnProperty","test","getWeightsFor","YourWorkout_bundleWriter","YourWorkout_inherits","writeDate","substr","indexOf","writeWeight","writeSet","String","fromCharCode","charCodeAt","UserRadio_UserRadio","UserRadio","UserRadio_classCallCheck","UserRadio_possibleConstructorReturn","UserRadio_getPrototypeOf","onChange","choiceEvent","RadioOptions","react_radio_buttons_lib","iconSize","iconInnerSize","padding","UserRadio_inherits","Checkbox_Checkbox","_ref","_ref$type","_ref$checked","checked","prototype","prop_types_default","string","isRequired","bool","func","CheckBoxContainer_CheckBoxContainer","CheckBoxContainer","CheckBoxContainer_classCallCheck","CheckBoxContainer_getPrototypeOf","checkedItems","Map","handleChange","bind","CheckBoxContainer_assertThisInitialized","item","target","isChecked","prevState","returnArray","CheckBoxOptions","get","Fragment","CheckBoxContainer_inherits","VersusSpace_ColoredLine","color","backgroundColor","VersusSpace_VersusTab","VersusTab","VersusSpace_classCallCheck","VersusSpace_possibleConstructorReturn","VersusSpace_getPrototypeOf","VersusSpace_objectSpread","graphStyle","returnVal","handleNameChoice","userNames","handleWorkoutChoice","handleGraphChoice","VersusSpace_inherits","Statistics_StatisticPage","StatisticPage","Statistics_classCallCheck","Statistics_possibleConstructorReturn","Statistics_getPrototypeOf","statistic","mapValues","replace","rep","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","v","err","return","j","val","Statistics_inherits","DynamicSpreadsheet_MyData","tableName","currentDate","workoutObject","_objectSpread","fillOfflineSheet","content","DynamicSpreadsheet_SimpleGSheet","index_es","_ref2","loading","JSON","stringify","DynamicSpreadsheet","parse","handleSubmit","event","preventDefault","DynamicSpreadsheet_defineProperty","sheetId","sheetRange","src_Field","htmlFor","Component","src_ApiForm","init","clientId","onSubmit","ApiForm_defineProperty","SheetAccess_SheetsDemo","scopes","authorize","apiLoading","signout","signedIn","loggedIn","signin","SheetAccess_getProfile","profile","auth2","getAuthInstance","currentUser","getBasicProfile","newUser","reduce","prevVal","curVal","getId","newUserNumber","getName","writeID","writeName","writeScope","Store_profileChecker","SheetAccess_SheetExtractor","SheetExtractor","SheetAccess_classCallCheck","SheetAccess_possibleConstructorReturn","SheetAccess_getPrototypeOf","snapshot","accepted","signedin","SheetAccess_inherits","App_styles","thumbnail","App_App","credentials","Sheet","image","getImageUrl","className","App_HeaderComponent","App_Navigation","logOut","App_Routing","_this3","Route","path","render","creds","src","logo_default","alt","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","pullLeft","react_router_bootstrap_lib","Text","pullRight","href","circle","responsive","src_App_0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","react_dom_default","BrowserRouter","basename","document","getElementById","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8b398d68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// import apiKey from './apiKey.json';\nimport {apiKey}from './Store';\n\nexport const WriteSingleCell = (props) => {\n    let values = [\n        [\n            props.value\n        ],\n    ];\n    let body = {\n        values: values\n    };\n    window.gapi.client.sheets.spreadsheets.values.update({\n        spreadsheetId: apiKey.SheetID,\n        range: props.range,\n        valueInputOption: \"USER_ENTERED\",\n        resource: body\n    }).then((response) => {\n        let result = response.result;\n        console.log(`${result.updatedCells} cells updated.`);\n    });\n}","import moment from 'moment';\nimport { WriteSingleCell } from './SheetWriter';\nimport _ from 'lodash';\n\nconst sheetUserJump = 4;\nexport const userData = {\n};\n\nexport const apiKey = {\n        \"key\": process.env.KEY,\n        \"SheetID\": process.env.SHEET_ID,\n        \"Client-ID\": process.env.CLIENT_ID\n    }\n\nexport let getNames = () => {\n    return Object.values(userData).map(user => user.name);\n}\n\nexport let getCell = (user) => {\n    let scope;\n    Object.values(userData).map(id => {\n        if (id.name === user) {\n            scope = id.sheetScope;\n        } return null;\n    })\n    return scope;\n}\nexport let workoutName = [\"Squat\", \"Deadlift\", \"Press\", \"BenchPress\", \"Bent-Over Barbell Row\", \"PowerClean\"];\nlet dateTable = { \"Squat\": [], \"Deadlift\": [], \"Press\": [], \"BenchPress\": [], \"Bent-Over Barbell Row\": [], \"PowerClean\": [], };\nlet dataSheets = {}\n\n\nexport const getDateTable = (workoutName) => {\n    return dateTable[workoutName];\n}\nexport const getCellIndex = (workout, date) => {\n    let index;\n    dateTable[workout].filter((cell, i) => {\n        if (cell === date) {\n            index = i + 3;\n        } return null\n    });\n    return index;\n}\nexport const fillOfflineSheet = (dataSet, tableName) => {\n    if (tableName !== \"UserRegister\") {\n        let currentDate = \"\";\n        dataSet.slice(2).map((row, i) => {\n            row.map((cell, j) => {\n                if (cell !== \"\") {\n                    if (j === 0) {\n                        if (!Object.keys(dataSheets).includes(cell)) {\n                            let workoutObject = {};\n                            for (let i = 0; i < workoutName.length; i++) {\n                                workoutObject = Object.assign({ [workoutName[i]]: {} }, workoutObject);\n                            }\n                            dataSheets[cell] = { ...workoutObject };\n                        }\n                        currentDate = cell;\n                    } else if ((j - 2) % 4 === 0) {\n                        if (userData.hasOwnProperty(j)) {\n                            const weight = parseFloat(cell.replace(/[^\\d,.]/g, \"\").replace(/,/g, \".\"));\n                            dataSheets[currentDate][tableName] = Object.assign({ [userData[j].name]: { weight } }, dataSheets[currentDate][tableName]);\n                        }\n                    }\n                    if (j > 4 && ((j - 1) % 4 === 0)) {\n                        if (userData.hasOwnProperty(j - 3)) {\n                            dataSheets[currentDate][tableName][userData[j - 3].name] = {\n                                ...dataSheets[currentDate][tableName][userData[j - 3].name],\n                                \"set\": cell,\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n            );\n            return null;\n        })\n        fillWorkoutDates(tableName);\n    } else if (tableName === 'UserRegister') {\n        dataSet.slice(1).map((row, i) => {\n            row.map((cell, j) => {\n                switch (j) {\n                    case 0:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"id\": cell,\n                        };\n                        break;\n                    case 1:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"name\": cell,\n                        };\n                        break;\n                    case 2:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"sheetScope\": cell,\n                        };\n                        break;\n\n                    default:\n                        break;\n                }\n                return null;\n            })\n            return null;\n        })\n    }\n    return null;\n}\n\nexport function getWeightsFor(workout, username) {\n    if (workout !== \"none\" && username !== \"none\") {\n        var sortable = [];\n        _.forEach(dataSheets, (value, key) => {\n            sortable.push([key, dataSheets[key]]);\n        })\n        sortable.sort(function (a, b) {\n            let first = moment(a[0], 'DD.MM.YY');\n            let second = moment(b[0], 'DD.MM.YY');\n            let diff = moment.duration(first.diff(second));\n            return diff.asDays();\n        });\n        let lastElem = sortable.pop();\n        while (!lastElem[1][workout].hasOwnProperty(username) && sortable.length !== 0) {\n            lastElem = sortable.pop();\n        }\n        if (lastElem[1][workout].hasOwnProperty(username)) {\n            let test = `Weight: ${lastElem[1][workout][username].weight}, Set: ${lastElem[1][workout][username].set}`;\n            return test;\n        }\n    }\n    return null;\n}\n\nconst fillWorkoutDates = (workoutName) => {\n    let today = moment();\n    dateTable[workoutName] = [];\n    Object.values(dataSheets).map((tupel, i) => {\n        if (Object.keys(tupel[workoutName]).length > 0) {\n            dateTable[workoutName].push(Object.keys(dataSheets)[i]);\n            return null;\n        }\n        return null;\n    })\n    dateTable[workoutName].sort(function (a, b) {\n        let first = moment(a, 'DD.MM.YY');\n        let second = moment(b, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    let lastEntry = moment(dateTable[workoutName][dateTable[workoutName].length - 1], 'DD.MM.YY');\n    let differ = moment.duration(today.diff(lastEntry)).asDays();\n    if (differ >= 1) {  // >= 1 because hours are irrelevant \n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    } else {\n        dateTable[workoutName].pop();\n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    }\n}\n\nexport const getStatistics = (username) => {\n    let statistic;\n    _.mapValues(dateTable, (value, name) => {\n        statistic = {\n            ...statistic,\n            [name]: 0,\n        };\n        return _.forEach(value, (date) => {\n            date = date.replace(/[^\\d.]/g, \"\");\n            if(!dataSheets.hasOwnProperty(date)){\n                return 0;\n            }else if (dataSheets[date][name].hasOwnProperty(username)) {\n                let set = dataSheets[date][name][username].set;\n                if (typeof (set) !== 'undefined') {\n                    let index = 0;\n                    let rep = [''];\n                    for (var v of set) {\n                        if (v === '-') {\n                            index++;\n                            rep[index] = '';\n                        } else {\n                            rep[index] = rep[index].concat(v);\n                        }\n                    }\n                    for (let j = 0; j < rep.length; j++) {\n                        statistic[name] += ((dataSheets[date][name][username].weight * 2) + 20) * rep[j];\n                    }\n                }\n            }\n            return value;\n        });\n\n    })\n    return statistic;\n}\n\nexport const fillData = (username) => {\n    data = [];\n    Object.keys(dataSheets).map(date => {\n        data.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                Object.values(dataSheets[data[i].time][entry][username]).map(weight => {\n                    data[i] = Object.assign({ [entry]: weight }, data[i]);\n                    return null;\n                });\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in data) {\n        sortable.push([date, data[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let test = moment.duration(first.diff(second));\n        let testDays = test.asDays();\n        return testDays;\n    });\n    data = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => data[i] = Object.assign(cell, data[i])) });\n    return null;\n}\n\nexport const fillVersusData = (props) => {\n    versusData = [];\n    Object.keys(dataSheets).map(date => {\n        versusData.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                if (props.username !== props.versusname) {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `Your ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                    Object.values(dataSheets[versusData[i].time][entry][props.versusname]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `${props.versusname}'s ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                } else {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        versusData[i] = Object.assign({ [entry]: weight }, versusData[i]);\n                        return null;\n                    });\n                }\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in versusData) {\n        sortable.push([date, versusData[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    versusData = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => versusData[i] = Object.assign(cell, versusData[i])) });\n    return versusData;\n}\n\n\nexport const profileChecker = (profile) => {\n    let newUser = true;\n    if (userData.length) {\n        Object.values(userData).reduce((prevVal, curVal, i) => {\n            let id = profile.getId();\n            if (curVal.id === id) {\n                newUser = false;\n            }\n            return null;\n        })\n        if (newUser) {\n            let newUserNumber = (sheetUserJump * Object.keys(userData).length) + 2;\n            userData[newUserNumber] = {\n                \"id\": profile.getId(),\n                \"name\": profile.getName(),\n                \"sheetScope\": String.fromCharCode((\"A\").charCodeAt(0) + newUserNumber),\n            };\n            let writeID = {\n                value: userData[newUserNumber][\"id\"],\n                range: `UserRegister!A${Object.keys(userData).length + 1}`,\n            }\n            let writeName = {\n                value: userData[newUserNumber][\"name\"],\n                range: `UserRegister!B${Object.keys(userData).length + 1}`,\n            }\n            let writeScope = {\n                value: userData[newUserNumber][\"sheetScope\"],\n                range: `UserRegister!C${Object.keys(userData).length + 1}`,\n            }\n            WriteSingleCell(writeID);\n            WriteSingleCell(writeName);\n            WriteSingleCell(writeScope);\n        }\n    }\n}\n\n\nexport let versusData = [];\nexport let data = [];\n\nexport let workoutData = {\n}","import React, { Component } from 'react';\nimport { Brush, BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, LineChart } from 'recharts/lib';\n\nconst styles = {\n  outer: {\n    paddingTop: '10%',\n    paddingBottom: '10%',\n    position: 'relative',\n    height: 400\n  },\n  inner: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%'\n  }\n}\nconst colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\nconst colorChanger = (i) => {\n  return colors[i % colors.length];\n}\n\n\nexport const ChartComponent = (props) => {\n  let data = props.data;\n  return (\n    <div style={styles.outer} >\n      <div style={styles.inner}>\n        <ResponsiveContainer>\n          {props.barGraph ? <BarGraph workoutNames={props.workoutNames} data={data} /> : props.otherGraph ? <LineGraph workoutNames={props.workoutNames} data={data} /> : <p>Please define a graph type</p>}\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n\nclass BarGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Bar key={`Option_${option}`} label={{ position: 'top', fontSize: 11 }} dataKey={option} fill={colorChanger(i)} />;\n    });\n    return (\n      <ResponsiveContainer>\n        <BarChart data={this.props.data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\n\nclass LineGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Line key={`Option_${option}`} connectNulls={true} label={{ position: 'top', fontSize: 11 }} type=\"monotone\" dataKey={option} stroke={colorChanger(i)} />\n    });\n    return (\n      <ResponsiveContainer>\n        <LineChart data={this.props.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { data, fillData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\n\nexport class PersonalSpace extends Component {\n  state = {\n    dataSet: data\n  }\n  componentDidMount(){\n    fillData(this.props.username);\n    this.setState({\n      dataSet: data\n    })\n  }\n  \n  render() {\n    const { dataSet} = this.state;\n    const FilterData=()=>{\n      return dataSet.filter(row=>{\n        if(Object.keys(row).length >1){\n          return row;\n        }return null;\n      }).map(row=>row);\n    }\n    return (\n      <div>\n        <ChartComponent workoutNames={workoutName} otherGraph={true} data={FilterData()} />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\n\nexport class DropDown extends Component {\n  state = {\n    currentSelection: this.props.title,\n  }\n  update = (e) => {\n    this.props.onUpdate(e);\n    this.setState({currentSelection: e});\n  }\n  render() {\n    let options;\n      try {\n        options = this.props.options.map((name) => {\n          return <MenuItem key={`keyItem_${name}`} eventKey={name} >{name}</MenuItem>;\n        });\n      } catch (error) {\n        console.log(error);\n        options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n      }\n    return (\n      <DropdownButton\n        title={this.state.currentSelection}\n        bsStyle=\"default\"\n        key={`dropdown_${this.props.title}`}\n        id={`dropdown_workout`}\n        onSelect={this.update}\n      >\n        {options}\n      </DropdownButton>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport class InputComponent extends Component {\n  state = {\n    name: this.props.selName,\n    workout: \"WorkoutName\",\n    set: \" \",\n    weight: 0,\n    date: this.props.selDate,\n  }\n  handleButton() {\n    let { name, workout } = this.state;\n    this.setState({ weight: this.refs.maxWeight.value });\n    this.props.submitted({\n      name: name,\n      workout: workout,\n      weight: this.state.weight,\n      set: this.state.set,\n      date: this.state.date\n    });\n  }\n  handleButtonAddSet() {\n    if (parseFloat(this.refs.maxWeight.value) !== this.state.weight) {\n      this.setState({\n        weight: parseFloat(this.refs.maxWeight.value),\n        set: `${this.refs.reps.value}`\n      })\n    }else {\n      this.setState({\n        set: `${this.state.set}-${this.refs.reps.value}`\n      })\n    }\n  }\n  componentDidMount() {\n    this.setState({\n      name: this.props.selName,\n      workout: this.props.selWorkout,\n      date: this.props.selDate,\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.selName !== prevProps.selName) {\n      this.setState({\n        name: this.props.selName\n      });\n    }\n    if (this.props.selWorkout !== prevProps.selWorkout) {\n      this.setState({\n        workout: this.props.selWorkout\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <input ref=\"maxWeight\" type=\"number\" placeholder=\"Kg\" />\n          <input ref=\"reps\" type=\"number\" placeholder=\"Amount\" />\n          <Button bsStyle=\"primary\" onClick={(e) => { this.handleButtonAddSet(); }}>Add Set</Button>\n          <p>{`Your current Weight: ${this.state.weight} Set: ${this.state.set}`}</p>\n        </div>\n        <Button bsStyle=\"primary\" onClick={(e) => { this.handleButton(); }}>Submit</Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { DropDown } from './Selector';\nimport { workoutName, getCell, getDateTable, getCellIndex, getWeightsFor } from './Store';\nimport { InputComponent } from './Input';\nimport { WriteSingleCell } from './SheetWriter'\n\nexport class WorkoutTab extends Component {\n    state = {\n        username: \"none\",\n        workout: \"none\",\n        date: ''\n    }\n    componentDidMount() {\n        this.setState({\n            username: this.props.username\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.username !== prevProps.username) {\n            this.setState({\n                username: this.props.username\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <DropDown options={workoutName} title='workout' onUpdate={(e) => { this.setState({ workout: e }); }} />\n                    <DropDown options={getDateTable(this.state.workout)} title='date' onUpdate={(e) => { this.setState({ date: e }); }} />\n                </div>\n                <div>\n                    <h4>Last completed weights: </h4>\n                    {getWeightsFor(this.state.workout, this.state.username)}\n                </div>\n                <h4>Enter your workout</h4>\n                <InputComponent selName={this.state.username} selDate={this.state.date} selWorkout={this.state.workout} submitted={(props) => { props.date = this.state.date; bundleWriter(props) }} />\n            </div>\n        );\n    }\n}\n\nconst bundleWriter = (props) => {\n    let date = props.date;\n    date = date.substr(0, (date + \" \").indexOf(\" \"));\n    let writeDate = {\n        value: date,\n        range: `${props.workout}!A${getCellIndex(props.workout, props.date)}`,\n    }\n    let writeWeight = {\n        value: props.weight,\n        range: `${props.workout}!${getCell(props.name)}${getCellIndex(props.workout, props.date)}`,\n    }\n    let writeSet = {\n        value: props.set,\n        range: `${props.workout}!${String.fromCharCode(getCell(props.name).charCodeAt(0) + 3)}${getCellIndex(props.workout, props.date)}`,\n    }\n    WriteSingleCell(writeDate);\n    WriteSingleCell(writeWeight);\n    WriteSingleCell(writeSet);\n}","import React, { Component } from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nconst sizeIcon = 4;\nconst pad = 10;\n\nexport class UserRadio extends Component {\n    onChange = (e) => {\n        this.props.choiceEvent(e);\n    }\n    render() {\n        let RadioOptions = this.props.options.map((option) => {\n            return <RadioButton iconSize={sizeIcon} iconInnerSize={sizeIcon} padding={pad} key={`Option_${option}`} value={option}>{option}</RadioButton>;\n        });\n        return (\n            <RadioGroup onChange={this.onChange} >\n                {RadioOptions.map(name => name)}\n            </RadioGroup>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Checkbox = ({ type = 'checkbox', name, checked = false, onChange }) =>(\n    <input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nCheckbox.prototype = {\n    type: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n}","import React, { Component } from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport class CheckBoxContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state !== prevState) {\n            let returnArray = [];\n            this.state.checkedItems.forEach((value, key) => {\n                if (value === true) {\n                    if (returnArray.length === 0) {\n                        returnArray[0] = key;\n                    } else {\n                        returnArray.push(key);\n                    }\n\n                }\n            })\n            this.props.choiceEvent(returnArray);\n        }\n    }\n\n    render() {\n        const CheckBoxOptions = this.props.options.map(option => {\n            return <label key={`checkBoxOption_${option}`}>\n                {option}\n                <Checkbox name={option} checked={this.state.checkedItems.get(option)} onChange={this.handleChange} />\n            </label>\n        })\n        return (\n            <React.Fragment>\n                {CheckBoxOptions.map(option => option)}\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { versusData, fillVersusData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\nimport { UserRadio } from './UserRadio';\nimport { CheckBoxContainer } from './CheckBoxContainer';\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\n\nexport class VersusTab extends Component {\n    state = {\n        props: {\n            username: this.props.username,\n            versusname: this.props.username,\n            versusworkout: [],\n        },\n        versusData: versusData,\n        otherGraph: false,\n        barGraph: true,\n    }\n    componentDidMount() {\n\n        this.setState({\n            props: {\n                username: this.props.username,\n                versusname: this.props.username,\n                versusworkout: [],\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleNameChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusname: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleWorkoutChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusworkout: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleGraphChoice(e) {\n        switch (e) {\n            case 'Bar Graph':\n            this.setState({\n                barGraph: true,\n                otherGraph: false,\n            });\n                break;\n            case 'Other Graph':\n            this.setState({\n                barGraph: false,\n                otherGraph: true,\n            });\n                break;\n        \n            default:\n                break;\n        }\n        this.setState({\n            graphStyle: e\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.props !== prevState.props) {\n            this.setState({\n                versusData: fillVersusData(this.state.props),\n            });\n        }\n    }\n    render() {\n        const filterNameOptions = () => {\n            return this.props.userNames.filter(name => { if (name !== this.props.username) { return true; } return false; }).map(name => name);\n        }\n        const FilterData = () => {\n            return this.state.versusData.filter(row => {\n                if (Object.keys(row).length > 1) {\n                    return row;\n                } return null;\n            }).map(row => {\n                return row;\n            });\n        }\n        const GetOptionNames = () => {\n            let returnVal = [];\n            workoutName.filter(name => {\n                if ((this.state.props.versusworkout).includes(name)) {\n                    return true;\n                } return false;\n            }).map(option => {\n                returnVal.push(`Your ${option}`);\n                returnVal.push(`${this.state.props.versusname}'s ${option}`);\n                return null;\n            });\n            return returnVal;\n        }\n        return (\n            <div>\n                <div>\n                    <UserRadio choiceEvent={(e) => { this.handleNameChoice(e) }} options={filterNameOptions()} />\n                </div>\n                <ColoredLine color=\"Grey\" />\n                <div>\n                    <CheckBoxContainer choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames} />\n                </div>\n                <ChartComponent workoutNames={GetOptionNames()} otherGraph={this.state.otherGraph} barGraph={this.state.barGraph} data={FilterData()} />\n                <UserRadio choiceEvent={(e) => { this.handleGraphChoice(e) }} options={['Bar Graph', 'Other Graph']} />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport {getStatistics} from './Store';\nimport _ from 'lodash';\n\nexport class StatisticPage extends Component{\n    render(){\n        const getData = () =>{\n            let test = \"\";\n            test = _.map(getStatistics(this.props.username), (val, key)=> {\n                return <p key={`stat_${key}`}>{`${key}: ${val}`}</p>;\n            });\n            return test;\n        }\n        return (\n            <div>\n                <h2>Statistics</h2>\n            {getData()}\n            </div>\n        );\n    }\n}","\nimport React, {Component} from 'react';\nimport { GoogleSheet } from '@lourd/react-google-sheet';\n// import apiKey from './apiKey.json';\nimport {apiKey, fillOfflineSheet} from './Store';\n\nconst MyData = ({ data, content }) => {\n  fillOfflineSheet(data, content);\n  return null;\n}\n\n// Wraps the GoogleSheet component to provide some basic components\n// for display loading & error states\nconst SimpleGSheet = props => (\n  <GoogleSheet id={props.id} range={props.range}>\n    {({ error, data, loading }) =>\n      loading ? (\n        'Getting data...'\n      ) : error ? (\n        JSON.stringify(error, null, 2)\n      ) : data ? (\n        <MyData data={data} content={props.content}/>\n      ) : null\n    }\n  </GoogleSheet>\n)\n\nclass DataFetcher extends Component {\n  state = {\n    id: JSON.parse(JSON.stringify(apiKey.SheetID)),\n    range: '',\n    submitted: null,\n  }\n\n  componentDidMount(){\n    this.setState({\n        submitted: {\n          id: this.props.sheetId,\n          range: this.props.sheetRange\n        },\n      })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      submitted: {\n        id: this.state.id,\n        range: this.state.range,\n      },\n    })\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <div>\n        {this.state.submitted && (\n          <SimpleGSheet\n            id={this.state.submitted.id}\n            range={this.state.submitted.range}\n            content={this.props.content}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DataFetcher","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Field extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.any,\n    label: PropTypes.string\n  };\n\n  handleChange = event => {\n    this.props.onChange(this.props.name, event.target.value);\n  };\n\n  render() {\n    const label = this.props.label || this.props.name;\n    return (\n      <div>\n        <label htmlFor={this.props.name}>{label}</label>\n        <div>\n          <input\n            id={this.props.name}\n            value={this.props.value}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Field;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Field from './Field'\n\nclass ApiForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  state = {\n    apiKey: this.props.init.apiKey,\n    clientId: this.props.init.clientId,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.onSubmit(this.state)\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Field\n          name=\"apiKey\"\n          label=\"Google Developer API Key\"\n          value={this.state.apiKey}\n          onChange={this.handleChange}\n        />\n        <Field\n          name=\"clientId\"\n          label=\"Application Client ID\"\n          value={this.state.clientId}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default ApiForm","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleSheetsApi } from '@lourd/react-google-sheet';\nimport DataFetcher from './DynamicSpreadsheet';\nimport ApiForm from './ApiForm';\n// import apiKey from './apiKey.json';\nimport { apiKey, profileChecker } from './Store';\nimport { Button } from 'react-bootstrap';\n\nconst range = \"!A:Q\";\n\n\nconst SheetsDemo = props => (\n    <GoogleSheetsApi clientId={props.clientId} apiKey={props.apiKey} scopes={[\"https://www.googleapis.com/auth/spreadsheets\"]}>\n        {({ authorize, loading: apiLoading, signout, signedIn, error }) => (\n            <div>\n                {apiLoading ? (\n                    <div>Loading...</div>\n                ) : error ? (\n                    JSON.stringify(error, null, 2)\n                ) : signedIn ? (\n                    props.loggedIn ? <Button bsStyle=\"danger\" onClick={signout}>Sign Out</Button> : <Button bsStyle=\"success\" onClick={() => { props.signin(true, getProfile()) }}>Sign In</Button>\n                ) : (\n                                <Button bsStyle=\"primary\" onClick={authorize}>Authorize</Button>\n                            )}\n                {signedIn && <DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" />}\n                {signedIn && <DataFetcher sheetRange={`PowerClean${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"PowerClean\" />}\n                {signedIn && <DataFetcher sheetRange={`Squat${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Squat\" />}\n                {signedIn && <DataFetcher sheetRange={`Press${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Press\" />}\n                {signedIn && <DataFetcher sheetRange={`BenchPress${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"BenchPress\" />}\n                {signedIn && <DataFetcher sheetRange={`Deadlift${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Deadlift\" />}\n                {signedIn && <DataFetcher sheetRange={`Bent-Over Barbell Row${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Bent-Over Barbell Row\" />}\n            </div>\n        )}\n    </GoogleSheetsApi >\n)\nSheetsDemo.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    apiKey: PropTypes.string.isRequired,\n    loggedIn: PropTypes.bool.isRequired,\n}\n\nconst getProfile = () => {\n    let auth = window.gapi.auth2.getAuthInstance();\n    let profile = auth.currentUser.get().getBasicProfile();\n    profileChecker(profile);\n    return profile;\n}\n\nexport class SheetExtractor extends Component {\n    state = {\n        apiKey: JSON.parse(JSON.stringify(apiKey.key)),\n        clientId:\n            JSON.parse(JSON.stringify(apiKey['Client-ID'])),\n        range: \"\",\n    }\n    componentDidMount() {\n        this.setState({\n            range: this.props.range\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.range !== this.props.range) {\n            this.setState({\n                range: this.props.range\n            })\n            return true;\n        } return false;\n    }\n\n    handleSubmit = state => this.setState(state)\n    render() {\n        return (\n            <div>\n                {this.state.apiKey ? (\n                    <SheetsDemo\n                        apiKey={this.state.apiKey}\n                        clientId={this.state.clientId}\n                        loggedIn={this.props.loggedIn}\n                        signin={(accepted, profile) => { this.props.signedin(accepted, profile) }}\n                    />\n                ) : (\n                        <ApiForm onSubmit={this.handleSubmit} init={this.state} />\n                    )}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Navbar, NavItem, Nav, Image } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport { PersonalSpace } from './PersonalSpace';\nimport { WorkoutTab } from './YourWorkout';\nimport { VersusTab } from './VersusSpace';\nimport { StatisticPage } from './Statistics';\nimport { getNames, workoutName } from './Store';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { SheetExtractor } from './SheetAccess';\n\nconst styles = {\n  thumbnail: {\n    width: 50,\n    height: 50\n  },\n}\n\nclass App extends Component {\n  state = {\n    credentials: \"User\",\n    accepted: false,\n  }\n\n  render() {\n    const Sheet = (props) => {\n      return <SheetExtractor loggedIn={props.loggedIn} signedin={(accepted, user) => { this.setState({ accepted: accepted, credentials: user.getName(), image: user.getImageUrl() }); }} />\n    }\n    if (this.state.accepted === false) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Sheet loggedIn={false} />\n        </div>\n      );\n    } else if (this.state.accepted === true) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Navigation image={this.state.image} credentials={this.state.credentials} logOut={(e) => { this.setState({ accepted: e }); }} />\n          <Sheet loggedIn={true} />\n        </div>\n      );\n    }\n  }\n}\n\nclass Routing extends Component {\n  render() {\n    return (\n      <div>\n        <Route path=\"/Statistics\" render={(props) => <StatisticPage {...props} username={this.props.creds} />} />\n        <Route path=\"/PersonalSpace\" render={(props) => <PersonalSpace {...props} username={this.props.creds} />} />\n        <Route path=\"/YourWorkout\" render={(props) => <WorkoutTab {...props} username={this.props.creds} />} />\n        <Route path=\"/VersusSpace\" render={(props) => <VersusTab {...props} username={this.props.creds} userNames={getNames()} workoutNames={workoutName} />} />\n      </div>\n    );\n  }\n}\n\nconst HeaderComponent = () => {\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1 className=\"App-title\">Fitness Applet</h1>\n    </header>\n  );\n}\n\nconst Navigation = (props) => {\n  return (\n    <div className=\"App container\">\n      <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/Statistics\">Fitness-Applet</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullLeft>\n            <LinkContainer to=\"/PersonalSpace\">\n              <NavItem>Personal-Space</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/YourWorkout\">\n              <NavItem>Your Workout</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/VersusSpace\">\n              <NavItem>Versus-Space</NavItem>\n            </LinkContainer>\n          </Nav>\n          <Navbar.Collapse>\n            <Navbar.Text pullRight>\n              Signed in as: <Navbar.Link href=\"#\">{props.credentials}</Navbar.Link>\n              <label style={styles.thumbnail}>\n                <Image thumbnail circle responsive src={props.image} />\n              </label>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar.Collapse>\n      </Navbar>\n      <Routing creds={props.credentials} />\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter} from 'react-router-dom';\nrequire('babel-polyfill');\n// basename={process.env.PUBLIC_URL}\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
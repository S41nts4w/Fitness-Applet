{"version":3,"sources":["SheetWriter.js","Store.js","Graphs.js","PersonalSpace.js","Selector.js","Progress.js","Input.js","YourWorkout.js","UserRadio.js","CheckBoxContainer.js","VersusSpace.js","Statistics.js","DynamicSpreadsheet.js","Field.js","ApiForm.js","Avatar.js","SheetAccess.js","App.js","registerServiceWorker.js","index.js"],"names":["SheetWriter_WriteSingleCell","props","callback","arguments","length","undefined","body","values","value","window","gapi","client","sheets","spreadsheets","update","spreadsheetId","apiKey","SheetID","range","valueInputOption","resource","then","response","result","console","log","concat","updatedCells","timeStamp","userData","changeFlag","Object","NODE_ENV","PUBLIC_URL","KEY","SHEET_ID","CLIENT_ID","getCell","user","scope","map","id","name","sheetScope","Store_workoutName","dateTable","Squat","Deadlift","Press","BenchPress","Bent-Over Barbell Row","PowerClean","dataSheets","getWeightsFor","workout","username","sortable","lodash_default","a","forEach","key","push","sort","b","first","moment_default","second","duration","diff","asDays","lastElem","pop","hasOwnProperty","lastWeight","weight","lastSet","set","Store_fillWorkoutDates","workoutName","today","tupel","i","keys","lastEntry","format","Store_fillVersusData","versusData","date","time","entry","versusname","versusworkout","includes","entryName","assign","_defineProperty","e","slice","cell","Store_data","Graphs_styles","outer","paddingTop","paddingBottom","position","height","inner","top","left","width","colors","colorChanger","Graphs_ChartComponent","data","react_default","createElement","style","lib","barGraph","Graphs_BarGraph","workoutNames","otherGraph","Graphs_LineGraph","graphOption","this","option","label","fontSize","dataKey","fill","strokeDasharray","wrapperStyle","bottom","element","react","connectNulls","type","stroke","margin","right","PersonalSpace_PersonalSpace","_Component","PersonalSpace","_getPrototypeOf2","_temp","_this","PersonalSpace_classCallCheck","_len","args","Array","_key","PersonalSpace_possibleConstructorReturn","PersonalSpace_getPrototypeOf","call","apply","state","dataSet","Store_fillData","setState","filter","row","PersonalSpace_inherits","Selector_DropDown","currentSelection","title","open","handleChange","event","onUpdate","target","handleClose","handleOpen","options","_this$props","classes","MenuItem_default","error","eventKey","FormControl_default","className","formControl","InputLabel_default","htmlFor","Select_default","autoWidth","onClose","onOpen","onChange","inputProps","Component","Selector","core_styles","theme","button","display","marginTop","spacing","unit","minWidth","Progress_CircularIntegration","timer","loading","success","handleButtonClick","onClick","setTimeout","clearTimeout","prevProps","prevState","changed","buttonClassname","classnames_default","buttonSuccess","root","Button_default","variant","color","Check_default","Save_default","Progress","alignItems","wrapper","backgroundColor","green_default","&:hover","fabProgress","zIndex","buttonProgress","marginLeft","Input_InputComponent","selName","rep","selDate","_this$state","submitted","selWorkout","_this2","TextField_default","InputLabelProps","shrink","placeholder","helperText","prevWeight","prevSet","IconButton_default","mini","handleButtonAddSet","Add_default","handleButtonDeleteSet","Delete_default","handleButton","Input","leftIcon","marginRight","rightIcon","iconSmall","YourWorkout_WorkoutTab","WorkoutTab","YourWorkout_classCallCheck","YourWorkout_possibleConstructorReturn","YourWorkout_getPrototypeOf","reverse","DateOptions","YourWorkout_bundleWriter","YourWorkout_inherits","cellIndex","index","getCellIndex","replace","writeDate","substr","indexOf","writeWeight","writeSet","String","fromCharCode","charCodeAt","UserRadio_UserRadio","UserRadio","UserRadio_classCallCheck","UserRadio_possibleConstructorReturn","UserRadio_getPrototypeOf","choiceEvent","RadioOptions","react_radio_buttons_lib","iconSize","iconInnerSize","padding","UserRadio_inherits","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","CheckBoxContainer_MultipleSelect","multiple","input","Input_default","renderValue","selected","chips","Chip_default","chip","fontWeight","typography","fontWeightRegular","fontWeightMedium","CheckBoxContainer","flexWrap","maxWidth","withTheme","VersusSpace_ColoredLine","_ref","VersusSpace_VersusTab","VersusTab","VersusSpace_classCallCheck","VersusSpace_possibleConstructorReturn","VersusSpace_getPrototypeOf","VersusSpace_objectSpread","graphStyle","returnVal","handleNameChoice","userNames","FilterNameOptions","handleWorkoutChoice","handleGraphChoice","VersusSpace_inherits","Statistics_StatisticPage","StatisticPage","Statistics_classCallCheck","Statistics_possibleConstructorReturn","Statistics_getPrototypeOf","statistic","mapValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","v","err","return","j","val","Statistics_inherits","DynamicSpreadsheet_MyData","tableName","currentDate","workoutObject","_objectSpread","parseFloat","stamp","JSON","stringify","fillOfflineSheet","content","DynamicSpreadsheet_SimpleGSheet","index_es","_ref2","DynamicSpreadsheet","parse","handleSubmit","preventDefault","DynamicSpreadsheet_defineProperty","sheetId","sheetRange","src_Field","src_ApiForm","init","clientId","onSubmit","ApiForm_defineProperty","Avatar_MenuAppBar","anchorEl","handleMenu","currentTarget","handleLogout","loggedOut","Boolean","aria-owns","aria-haspopup","Avatar_default","alt","src","image","avatar","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","src_Avatar","SheetAccess_SheetsDemo","scopes","authorize","apiLoading","signout","signedIn","size","loadSheets","SheetAccess_SheetExtractor","SheetExtractor","SheetAccess_classCallCheck","SheetAccess_possibleConstructorReturn","SheetAccess_getPrototypeOf","snapshot","signin","accepted","profile","signedin","SheetAccess_inherits","TabContainer","children","dir","Typography_default","align","component","App_FullWidthTabs","credentials","handleChangeIndex","AppBar_default","Tabs_default","indicatorColor","textColor","fullWidth","Tab_default","react_swipeable_views_lib_default","axis","direction","onChangeIndex","form","src_App","palette","background","paper","layout","breakpoints","up","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","__webpack_require__","react_dom_default","render","BrowserRouter","basename","document","getElementById","URL","origin","addEventListener","fetch","status","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06508ea0.chunk.js","sourcesContent":["import apiKey from './apiKey.json'; \n\nexport const WriteSingleCell = (props, callback = 0) => {\n    let values = [\n        [\n            props.value\n        ],\n    ];\n    let body = {\n        values: values\n    };\n    window.gapi.client.sheets.spreadsheets.values.update({\n        spreadsheetId: apiKey.SheetID,\n        range: props.range,\n        valueInputOption: \"USER_ENTERED\",\n        resource: body\n    }).then((response) => {\n        let result = response.result;\n        console.log(`${result.updatedCells} cells updated.`);\n        if (callback !== 0) {\n            callback(response);\n        }\n    });\n    // if (!props.range.includes('changedFlag')) {\n    //     WriteChangedFlag({ value: true, range: `changedFlag!A1` });\n    //     WriteChangedFlag({ value: true, range: `changedFlag!A2` });\n    //     WriteChangedFlag({ value: true, range: `changedFlag!A3` });\n    // }\n}\n\n// const WriteChangedFlag = (props) => {\n//     let values = [\n//         [\n//             props.value\n//         ],\n//     ];\n//     let body = {\n//         values: values\n//     };\n//     window.gapi.client.sheets.spreadsheets.values.update({\n//         spreadsheetId: apiKey.SheetID,\n//         range: props.range,\n//         valueInputOption: \"USER_ENTERED\",\n//         resource: body\n//     }).then((response) => {\n//         let result = response.result;\n//         console.log(`${result.updatedCells} flag updated.`);\n//     });\n// }","import moment from 'moment';\nimport { WriteSingleCell } from './SheetWriter';\nimport _ from 'lodash';\n\nconst sheetUserJump = 4;\nexport const userData = {\n};\n\nexport const apiKey = {\n    \"key\": process.env.KEY,\n    \"SheetID\": process.env.SHEET_ID,\n    \"Client-ID\": process.env.CLIENT_ID\n}\nexport let changeFlag = true;                          // Debugging without fetching data from the server\nexport let getNames = () => {\n    return Object.values(userData).map(user => user.name);\n}\nlet timeStamp;\n\nexport let getCell = (user) => {\n    let scope;\n    Object.values(userData).map(id => {\n        if (id.name === user) {\n            scope = id.sheetScope;\n        } return null;\n    })\n    return scope;\n}\nexport let workoutName = [\"Squat\", \"BenchPress\", \"Bent-Over Barbell Row\", \"Deadlift\", \"Press\", \"PowerClean\"];\nlet dateTable = { \"Squat\": [], \"Deadlift\": [], \"Press\": [], \"BenchPress\": [], \"Bent-Over Barbell Row\": [], \"PowerClean\": [], };\nlet dataSheets = {}\n\n\nexport const getDateTable = (workoutName) => {\n    return dateTable[workoutName];\n}\nexport const getCellIndex = (workout, date) => {\n    let index;\n    dateTable[workout].filter((cell, i) => {\n        if (cell === date) {\n            index = i + 3;\n        } return null\n    });\n    return index;\n}\nexport const fillOfflineSheet = (dataSet, tableName) => {\n    if (tableName !== \"UserRegister\" && tableName !== \"changedFlag\") {\n        let currentDate = \"\";\n        dataSet.slice(2).map((row, i) => {\n            row.map((cell, j) => {\n                if (cell !== \"\") {\n                    if (j === 0) {\n                        if (!Object.keys(dataSheets).includes(cell)) {\n                            let workoutObject = {};\n                            for (let i = 0; i < workoutName.length; i++) {\n                                workoutObject = Object.assign({ [workoutName[i]]: {} }, workoutObject);\n                            }\n                            dataSheets[cell] = { ...workoutObject };\n                        }\n                        currentDate = cell;\n                    } else if ((j - 2) % 4 === 0) {\n                        if (userData.hasOwnProperty(j)) {\n                            const weight = parseFloat(cell.replace(/[^\\d,.]/g, \"\").replace(/,/g, \".\"));\n                            dataSheets[currentDate][tableName] = Object.assign({ [userData[j].name]: { weight } }, dataSheets[currentDate][tableName]);\n                        }\n                    }\n                    if (j > 4 && ((j - 1) % 4 === 0)) {\n                        if (userData.hasOwnProperty(j - 3)) {\n                            dataSheets[currentDate][tableName][userData[j - 3].name] = {\n                                ...dataSheets[currentDate][tableName][userData[j - 3].name],\n                                \"set\": cell,\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n            );\n            return null;\n        })\n        fillWorkoutDates(tableName);\n    } else if (tableName === 'UserRegister') {\n        dataSet.slice(1).map((row, i) => {\n            row.map((cell, j) => {\n                switch (j) {\n                    case 0:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"id\": cell,\n                        };\n                        break;\n                    case 1:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"name\": cell,\n                        };\n                        break;\n                    case 2:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"sheetScope\": cell,\n                        };\n                        break;\n\n                    default:\n                        break;\n                }\n                return null;\n            })\n            return null;\n        })\n    }else if(tableName === 'changedFlag'){\n        let stamp = JSON.stringify(dataSet);\n            if(stamp !== timeStamp){\n                changeFlag = true;       // commenting for debugging\n                timeStamp = stamp;\n            }else{\n                changeFlag = false;\n            }\n    }\n    return null;\n}\n\nexport function getWeightsFor(workout, username) {\n    if (workout !== \"none\" && username !== \"none\") {\n        var sortable = [];\n        _.forEach(dataSheets, (value, key) => {\n            sortable.push([key, dataSheets[key]]);\n        })\n        sortable.sort(function (a, b) {\n            let first = moment(a[0], 'DD.MM.YY');\n            let second = moment(b[0], 'DD.MM.YY');\n            let diff = moment.duration(first.diff(second));\n            return diff.asDays();\n        });\n        let lastElem = sortable.pop();\n        while (!lastElem[1][workout].hasOwnProperty(username) && sortable.length !== 0) {\n            lastElem = sortable.pop();\n        }\n        if (lastElem[1][workout].hasOwnProperty(username)) {\n            return {\n                \"lastWeight\": lastElem[1][workout][username].weight,\n                \"lastSet\": lastElem[1][workout][username].set\n            };\n        }\n    }\n    return {\n        \"lastWeight\": 0,\n        \"lastSet\": \" \"\n    };\n}\n\nconst fillWorkoutDates = (workoutName) => {\n    let today = moment();\n    dateTable[workoutName] = [];\n    Object.values(dataSheets).map((tupel, i) => {\n        if (Object.keys(tupel[workoutName]).length > 0) {\n            dateTable[workoutName].push(Object.keys(dataSheets)[i]);\n            return null;\n        }\n        return null;\n    })\n    dateTable[workoutName].sort(function (a, b) {\n        let first = moment(a, 'DD.MM.YY');\n        let second = moment(b, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    let lastEntry = moment(dateTable[workoutName][dateTable[workoutName].length - 1], 'DD.MM.YY');\n    let differ = moment.duration(today.diff(lastEntry)).asDays();\n    if (differ >= 1) {  // >= 1 because hours are irrelevant \n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    } else {\n        dateTable[workoutName].pop();\n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    }\n}\n\nexport const getStatistics = (username) => {\n    let statistic;\n    _.mapValues(dateTable, (value, name) => {\n        statistic = {\n            ...statistic,\n            [name]: 0,\n        };\n        return _.forEach(value, (date) => {\n            date = date.replace(/[^\\d.]/g, \"\");\n            if (!dataSheets.hasOwnProperty(date)) {\n                return 0;\n            } else if (dataSheets[date][name].hasOwnProperty(username)) {\n                let set = dataSheets[date][name][username].set;\n                if (typeof (set) !== 'undefined') {\n                    let index = 0;\n                    let rep = [''];\n                    for (var v of set) {\n                        if (v === '-') {\n                            index++;\n                            rep[index] = '';\n                        } else {\n                            rep[index] = rep[index].concat(v);\n                        }\n                    }\n                    for (let j = 0; j < rep.length; j++) {\n                        statistic[name] += ((dataSheets[date][name][username].weight * 2) + 20) * rep[j];\n                    }\n                }\n            }\n            return value;\n        });\n\n    })\n    return statistic;\n}\n\nexport const fillData = (username) => {\n    data = [];\n    Object.keys(dataSheets).map(date => {\n        data.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                Object.values(dataSheets[data[i].time][entry][username]).map(weight => {\n                    data[i] = Object.assign({ [entry]: weight }, data[i]);\n                    return null;\n                });\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in data) {\n        sortable.push([date, data[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let test = moment.duration(first.diff(second));\n        let testDays = test.asDays();\n        return testDays;\n    });\n    data = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => data[i] = Object.assign(cell, data[i])) });\n    return null;\n}\n\nexport const fillVersusData = (props) => {\n    versusData = [];\n    Object.keys(dataSheets).map(date => {\n        versusData.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                if (props.username !== props.versusname) {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `Your ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                    Object.values(dataSheets[versusData[i].time][entry][props.versusname]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `${props.versusname}'s ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                } else {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        versusData[i] = Object.assign({ [entry]: weight }, versusData[i]);\n                        return null;\n                    });\n                }\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in versusData) {\n        sortable.push([date, versusData[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    versusData = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => versusData[i] = Object.assign(cell, versusData[i])) });\n    return versusData;\n}\n\n\nexport const profileChecker = (profile) => {\n    let newUser = true;\n    if (userData.length) {\n        Object.values(userData).reduce((prevVal, curVal, i) => {\n            let id = profile.getId();\n            if (curVal.id === id) {\n                newUser = false;\n            }\n            return null;\n        })\n        if (newUser) {\n            let newUserNumber = (sheetUserJump * Object.keys(userData).length) + 2;\n            userData[newUserNumber] = {\n                \"id\": profile.getId(),\n                \"name\": profile.getName(),\n                \"sheetScope\": String.fromCharCode((\"A\").charCodeAt(0) + newUserNumber),\n            };\n            let writeID = {\n                value: userData[newUserNumber][\"id\"],\n                range: `UserRegister!A${Object.keys(userData).length + 1}`,\n            }\n            let writeName = {\n                value: userData[newUserNumber][\"name\"],\n                range: `UserRegister!B${Object.keys(userData).length + 1}`,\n            }\n            let writeScope = {\n                value: userData[newUserNumber][\"sheetScope\"],\n                range: `UserRegister!C${Object.keys(userData).length + 1}`,\n            }\n            WriteSingleCell(writeID);\n            WriteSingleCell(writeName);\n            WriteSingleCell(writeScope);\n        }\n    }\n}\n\n\nexport let versusData = [];\nexport let data = [];\n\nexport let workoutData = {\n}","import React, { Component } from 'react';\nimport { Brush, BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, LineChart } from 'recharts/lib';\n\nconst styles = {\n  outer: {\n    paddingTop: '10%',\n    paddingBottom: '10%',\n    position: 'relative',\n    height: 400\n  },\n  inner: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%'\n  }\n}\nconst colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\nconst colorChanger = (i) => {\n  return colors[i % colors.length];\n}\n\n\nexport const ChartComponent = (props) => {\n  let data = props.data;\n  return (\n    <div style={styles.outer} >\n      <div style={styles.inner}>\n        <ResponsiveContainer>\n          {props.barGraph ? <BarGraph workoutNames={props.workoutNames} data={data} /> : props.otherGraph ? <LineGraph workoutNames={props.workoutNames} data={data} /> : <p>Please define a graph type</p>}\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n\nclass BarGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Bar key={`Option_${option}`} label={{ position: 'top', fontSize: 11 }} dataKey={option} fill={colorChanger(i)} />;\n    });\n    return (\n      <ResponsiveContainer>\n        <BarChart data={this.props.data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\n\nclass LineGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Line key={`Option_${option}`} connectNulls={true} label={{ position: 'top', fontSize: 11 }} type=\"monotone\" dataKey={option} stroke={colorChanger(i)} />\n    });\n    return (\n      <ResponsiveContainer>\n        <LineChart data={this.props.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { data, fillData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\n\nexport class PersonalSpace extends Component {\n  state = {\n    dataSet: data\n  }\n  componentDidMount(){\n    fillData(this.props.username);\n    this.setState({\n      dataSet: data\n    })\n  }\n  \n  render() {\n    const { dataSet} = this.state;\n    const FilterData=()=>{\n      return dataSet.filter(row=>{\n        if(Object.keys(row).length >1){\n          return row;\n        }return null;\n      }).map(row=>row);\n    }\n    return (\n      <div>\n        <ChartComponent workoutNames={workoutName} otherGraph={true} data={FilterData()} />\n      </div>\n    );\n  }\n}","// import React, { Component } from 'react';\n// import { DropdownButton, MenuItem } from 'react-bootstrap';\n\n// export class DropDown extends Component {\n//   state = {\n//     currentSelection: this.props.title,\n//   }\n//   update = (e) => {\n//     this.props.onUpdate(e);\n//     this.setState({currentSelection: e});\n//   }\n//   render() {\n//     let options;\n//       try {\n//         options = this.props.options.map((name) => {\n//           return <MenuItem key={`keyItem_${name}`} eventKey={name} >{name}</MenuItem>;\n//         });\n//       } catch (error) {\n//         console.log(error);\n//         options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n//       }\n//     return (\n//       <DropdownButton\n//         title={this.state.currentSelection}\n//         bsStyle=\"default\"\n//         key={`dropdown_${this.props.title}`}\n//         id={`dropdown_workout`}\n//         onSelect={this.update}\n//       >\n//         {options}\n//       </DropdownButton>\n//     )\n//   }\n// }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 200,\n  },\n});\n\nclass DropDown extends React.Component {\n  state = {\n    currentSelection: this.props.title,\n    open: false,\n  };\n\n  handleChange = event => {\n    this.props.onUpdate(event.target.value);\n    this.setState({ currentSelection: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { title, classes } = this.props;\n    let options;\n    try {\n      options = this.props.options.map((name) => {\n        return <MenuItem key={`keyItem_${name}`} value={name} >{name}</MenuItem>;\n      });\n    } catch (error) {\n      console.log(error);\n      options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n    }\n\n    return (\n      // <form autoComplete=\"off\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"testSelect_materialUI\">{title}</InputLabel>\n          <Select\n            autoWidth={false}\n            open={this.state.open}\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n            value={this.state.currentSelection}\n            onChange={this.handleChange}\n            inputProps={{\n              name: title,\n              id: 'testSelect_materialUI',\n            }}\n          >\n            {options}\n          </Select>\n        </FormControl>\n      // </form>\n    );\n  }\n}\n\nDropDown.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DropDown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst styles = theme => ({\n    root: {\n        alignItems: 'center',\n    },\n    wrapper: {\n        margin: theme.spacing.unit,\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n});\n\nclass CircularIntegration extends React.Component {\n    timer = null;\n\n    state = {\n        loading: false,\n        success: false,\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    handleButtonClick = () => {\n        this.props.onClick();\n        if (!this.state.loading) {\n            this.setState(\n                {\n                    success: false,\n                    loading: true,\n                },\n                () => {\n                    this.timer = setTimeout(() => {\n                        this.setState({\n                            loading: false,\n                            success: true,\n                        });\n                    }, 2000);\n                },\n            );\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.changed !== this.props.changed) {\n            this.setState({\n                success: !this.props.changed,\n            })\n        }\n\n    }\n\n    render() {\n        const { success } = this.state;\n        const { classes } = this.props;\n        const buttonClassname = classNames({\n            [classes.buttonSuccess]: success,\n        });\n        return (\n            <div className={classes.root}>\n                <Button\n                    variant=\"fab\"\n                    color=\"primary\"\n                    className={buttonClassname}\n                    onClick={this.handleButtonClick}\n                >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                </Button>\n            </div>\n        );\n    }\n}\n\nCircularIntegration.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIntegration);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularIntegration from './Progress';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n});\n\n\nclass InputComponent extends Component {\n  state = {\n    name: this.props.selName,\n    workout: \"WorkoutName\",\n    set: \"\",\n    rep: 0,\n    weight: 0,\n    date: this.props.selDate,\n  }\n  handleButton() {\n    let { name, workout } = this.state;\n    this.props.submitted({\n      name: name,\n      workout: workout,\n      weight: this.state.weight,\n      set: this.state.set,\n      date: this.state.date,\n    });\n    this.setState({\n      set: \"\",\n    })\n  }\n  handleButtonAddSet() {\n    if (this.state.set.length) {\n      this.setState({\n        set: `${this.state.set}-${this.state.rep}`,\n      })\n    } else {\n      this.setState({\n        set: `${this.state.rep}`,\n      })\n    }\n  }\n  handleButtonDeleteSet() {\n    this.setState({\n      set: \"\"\n    })\n  }\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  componentDidMount() {\n    this.setState({\n      name: this.props.selName,\n      workout: this.props.selWorkout,\n      date: this.props.selDate,\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.selName !== prevProps.selName) {\n      this.setState({\n        name: this.props.selName\n      });\n    }\n    if (this.props.selWorkout !== prevProps.selWorkout) {\n      this.setState({\n        workout: this.props.selWorkout\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <TextField\n            id=\"ID_Weight\"\n            label=\"Weight\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            placeholder=\"Kg\"\n            margin=\"normal\"\n            type='number'\n            // value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            helperText={`Last weight was: ${this.props.prevWeight}`}\n          />\n          <TextField\n            id=\"ID_Rep\"\n            label=\"rep\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            placeholder=\"Reps\"\n            margin=\"normal\"\n            type='number'\n            onChange={this.handleChange('rep')}\n            helperText={`Last set was: ${this.props.prevSet}`}\n          />\n          <IconButton mini=\"true\" color=\"primary\" onClick={(e) => { this.handleButtonAddSet(); }}><AddIcon /></IconButton>\n          <IconButton mini=\"true\" color=\"secondary\" onClick={(e) => { this.handleButtonDeleteSet(); }}><DeleteIcon /></IconButton>\n          <p>{`Your current Weight: ${this.state.weight} Set: ${this.state.set}`}</p>\n        </div>\n        <CircularIntegration changed={this.props.changed} onClick={(e) => { this.handleButton(); }}/>\n      </div>\n    )\n  }\n}\n\nInputComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputComponent);\n\n","import React, { Component } from 'react';\nimport DropDown from './Selector';\nimport { workoutName, getCell, getDateTable, getCellIndex, getWeightsFor } from './Store';\nimport InputComponent from './Input';\nimport { WriteSingleCell } from './SheetWriter';\n\nexport class WorkoutTab extends Component {\n    state = {\n        username: \"none\",\n        workout: \"none\",\n        date: '',\n        changed: true,\n    }\n    DateOptions(){\n        let date = getDateTable(this.state.workout);\n        if(typeof date !== 'undefined'){\n        return date.reverse();\n    }\n    return [];\n    }\n    componentDidMount() {\n        this.setState({\n            username: this.props.username\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.username !== prevProps.username) {\n            this.setState({\n                username: this.props.username\n            })\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <div>\n                    <DropDown options={workoutName} title='workout' onUpdate={(e) => { this.setState({ workout: e, changed: true }); }} />\n                    <DropDown options={this.DateOptions()} title='date' onUpdate={(e) => { this.setState({ date: e, changed: true }); }} />\n\n                </div>\n                <InputComponent changed={this.state.changed} prevWeight={getWeightsFor(this.state.workout, this.state.username).lastWeight} prevSet={getWeightsFor(this.state.workout, this.state.username).lastSet} selName={this.state.username} selDate={this.state.date} selWorkout={this.state.workout} submitted={(props) => { props.date = this.state.date; bundleWriter(props);this.setState({changed: false}) }} />\n\n            </div>\n        );\n    }\n}\n\nconst bundleWriter = (props) => {\n    let { date, workout, name, set, weight } = props;\n    const cellIndex = getCellIndex(workout, date);\n    weight = weight.replace(/[.]/g, \",\");\n    date = date.substr(0, (date + \" \").indexOf(\" \"));\n    let writeDate = {\n        value: date,\n        range: `${workout}!A${cellIndex}`,\n    }\n    let writeWeight = {\n        value: weight,\n        range: `${workout}!${getCell(name)}${cellIndex}`,\n    }\n    let writeSet = {\n        value: set,\n        range: `${workout}!${String.fromCharCode(getCell(name).charCodeAt(0) + 3)}${cellIndex}`,\n    }\n    WriteSingleCell(writeDate);\n    WriteSingleCell(writeWeight);\n    WriteSingleCell(writeSet);\n}","import React, { Component } from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nconst sizeIcon = 4;\nconst pad = 10;\n\nexport class UserRadio extends Component {\n    onChange = (e) => {\n        this.props.choiceEvent(e);\n    }\n    render() {\n        let RadioOptions = this.props.options.map((option) => {\n            return <RadioButton iconSize={sizeIcon} iconInnerSize={sizeIcon} padding={pad} key={`Option_${option}`} value={option}>{option}</RadioButton>;\n        });\n        return (\n            <RadioGroup onChange={this.onChange} >\n                {RadioOptions.map(name => name)}\n            </RadioGroup>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MultipleSelect extends React.Component {\n  state = {\n    name: [],\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n      componentDidUpdate(prevProps, prevState) {\n        if (this.state !== prevState) {\n            this.props.choiceEvent(this.state.name);\n        }\n    }\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-chip\">Workout</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {this.props.options.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultipleSelect);\n","import React, { Component } from 'react';\nimport { versusData, fillVersusData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\nimport { UserRadio } from './UserRadio';\n// import { CheckBoxContainer } from './CheckBoxContainer';\nimport MultipleSelect from './CheckBoxContainer';\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\n\nexport class VersusTab extends Component {\n    state = {\n        props: {\n            username: this.props.username,\n            versusname: this.props.username,\n            versusworkout: [],\n        },\n        versusData: versusData,\n        otherGraph: false,\n        barGraph: true,\n    }\n    componentDidMount() {\n\n        this.setState({\n            props: {\n                username: this.props.username,\n                versusname: this.props.username,\n                versusworkout: [],\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleNameChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusname: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleWorkoutChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusworkout: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleGraphChoice(e) {\n        switch (e) {\n            case 'Bar Graph':\n                this.setState({\n                    barGraph: true,\n                    otherGraph: false,\n                });\n                break;\n            case 'Other Graph':\n                this.setState({\n                    barGraph: false,\n                    otherGraph: true,\n                });\n                break;\n\n            default:\n                break;\n        }\n        this.setState({\n            graphStyle: e\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.props !== prevState.props) {\n            this.setState({\n                versusData: fillVersusData(this.state.props),\n            });\n        }\n    }\n    render() {\n            const FilterNameOptions = () => {\n                try {\n                    return this.props.userNames.filter(name => { if (name !== this.props.username) { return true; } return false; }).map(name => name);\n                } catch (e) {\n                    return [];\n                }\n                \n            }\n\n        const FilterData = () => {\n            return this.state.versusData.filter(row => {\n                if (Object.keys(row).length > 1) {\n                    return row;\n                } return null;\n            }).map(row => {\n                return row;\n            });\n        }\n        const GetOptionNames = () => {\n            let returnVal = [];\n            workoutName.filter(name => {\n                if ((this.state.props.versusworkout).includes(name)) {\n                    return true;\n                } return false;\n            }).map(option => {\n                returnVal.push(`Your ${option}`);\n                returnVal.push(`${this.state.props.versusname}'s ${option}`);\n                return null;\n            });\n            return returnVal;\n        }\n        return (\n            <div>\n                <div>\n                    <UserRadio choiceEvent={(e) => { this.handleNameChoice(e) }} options={FilterNameOptions()} />\n                </div>\n                <ColoredLine color=\"Grey\" />\n                <div>\n                    {/* <CheckBoxContainer choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames} /> */}\n                    <MultipleSelect choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames}/>\n                </div>\n                <ChartComponent workoutNames={GetOptionNames()} otherGraph={this.state.otherGraph} barGraph={this.state.barGraph} data={FilterData()} />\n                <UserRadio choiceEvent={(e) => { this.handleGraphChoice(e) }} options={['Bar Graph', 'Other Graph']} />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport {getStatistics} from './Store';\nimport _ from 'lodash';\n\nexport class StatisticPage extends Component{\n    render(){\n        const getData = () =>{\n            let test = \"\";\n            test = _.map(getStatistics(this.props.username), (val, key)=> {\n                return <p key={`stat_${key}`}>{`${key}: ${val}`}</p>;\n            });\n            return test;\n        }\n        return (\n            <div>\n                <h2>Statistics</h2>\n            {getData()}\n            </div>\n        );\n    }\n}","\nimport React, {Component} from 'react';\nimport { GoogleSheet } from '@lourd/react-google-sheet';\nimport apiKey from './apiKey.json';\nimport { fillOfflineSheet} from './Store';\n\nconst MyData = ({ data, content }) => {\n  fillOfflineSheet(data, content);\n  return null;\n}\n\n// Wraps the GoogleSheet component to provide some basic components\n// for display loading & error states\nconst SimpleGSheet = props => (\n  <GoogleSheet id={props.id} range={props.range}>\n    {({ error, data, loading }) =>\n      loading ? (\n        'Getting data...'\n      ) : error ? (\n        JSON.stringify(error, null, 2)\n      ) : data ? (\n        <MyData data={data} content={props.content}/>\n      ) : null\n    }\n  </GoogleSheet>\n)\n\nclass DataFetcher extends Component {\n  state = {\n    id: JSON.parse(JSON.stringify(apiKey.SheetID)),\n    range: '',\n    submitted: null,\n  }\n\n  componentDidMount(){\n    this.setState({\n        submitted: {\n          id: this.props.sheetId,\n          range: this.props.sheetRange\n        },\n      })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      submitted: {\n        id: this.state.id,\n        range: this.state.range,\n      },\n    })\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <div>\n        {this.state.submitted && (\n          <SimpleGSheet\n            id={this.state.submitted.id}\n            range={this.state.submitted.range}\n            content={this.props.content}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DataFetcher","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Field extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.any,\n    label: PropTypes.string\n  };\n\n  handleChange = event => {\n    this.props.onChange(this.props.name, event.target.value);\n  };\n\n  render() {\n    const label = this.props.label || this.props.name;\n    return (\n      <div>\n        <label htmlFor={this.props.name}>{label}</label>\n        <div>\n          <input\n            id={this.props.name}\n            value={this.props.value}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Field;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Field from './Field'\n\nclass ApiForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  state = {\n    apiKey: this.props.init.apiKey,\n    clientId: this.props.init.clientId,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.onSubmit(this.state)\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Field\n          name=\"apiKey\"\n          label=\"Google Developer API Key\"\n          value={this.state.apiKey}\n          onChange={this.handleChange}\n        />\n        <Field\n          name=\"clientId\"\n          label=\"Application Client ID\"\n          value={this.state.clientId}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default ApiForm","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = {\n  root: {\n    // flexGrow: 1,\n  },\n};\n\nclass MenuAppBar extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleLogout = () => {\n    this.props.loggedOut(true);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.root}>\n            \n              <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : null}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Avatar alt=\"Remy Sharp\" src={this.props.image} className={classes.avatar} />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\n                </Menu>\n              </div>\n      </div>\n    );\n  }\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MenuAppBar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleSheetsApi } from '@lourd/react-google-sheet';\nimport DataFetcher from './DynamicSpreadsheet';\nimport ApiForm from './ApiForm';\nimport apiKey from './apiKey.json';\nimport { profileChecker, workoutName } from './Store';\nimport Button from '@material-ui/core/Button'\nimport MenuAppBar from './Avatar';\n\n// import { Button } from 'react-bootstrap';\n\nconst range = \"!A:Q\";\n\nlet fetchOptions = workoutName.map((option, i) => {\n    return <DataFetcher key={`Option_${option}`} sheetRange={`${option}${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content={option} />;\n});\n\nconst SheetsDemo = props => (\n    <GoogleSheetsApi clientId={props.clientId} apiKey={props.apiKey} scopes={[\"https://www.googleapis.com/auth/spreadsheets\"]}>\n        {({ authorize, loading: apiLoading, signout, signedIn, error }) => (\n            <div>\n                {apiLoading ? (\n                    <div>loading...</div>\n                ) : error ? (\n                    JSON.stringify(error, null, 2)\n                ) : signedIn ? (\n                    (<div>\n                        <Button size=\"large\" variant=\"raised\" color=\"default\" onClick={signout}>logOut</Button>\n                    </div>)\n                ) : (\n                                <Button size=\"large\" variant=\"raised\" color=\"default\" onClick={authorize}>Authorize</Button>\n                            )\n                }\n                {signedIn && <DataFetcher sheetRange={`changedFlag!A1`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"changedFlag\" />}\n                {/* {signedIn && props.signin(true, getProfile())} */}\n                {props.loadSheets && signedIn && (\n                    <div>\n                        <DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" />\n                        <DataFetcher sheetRange={`PowerClean${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"PowerClean\" />\n                        <DataFetcher sheetRange={`Squat${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Squat\" />\n                        <DataFetcher sheetRange={`Press${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Press\" />\n                        <DataFetcher sheetRange={`BenchPress${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"BenchPress\" />\n                        <DataFetcher sheetRange={`Deadlift${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Deadlift\" />\n                        <DataFetcher sheetRange={`Bent-Over Barbell Row${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Bent-Over Barbell Row\" />\n                    </div>\n                )}\n            </div>\n        )}\n    </GoogleSheetsApi >\n\n)\nSheetsDemo.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    apiKey: PropTypes.string.isRequired,\n}\n\nconst auth = (auth, login) => {\n    login.signin(true, { username: \"none\", image: \"none\" });\n}\n\nconst getProfile = () => {\n    let auth = window.gapi.auth2.getAuthInstance();\n    let profile = auth.currentUser.get().getBasicProfile();\n    profileChecker(profile);\n    return { username: profile.getName(), image: profile.getImageUrl() };\n}\n\nconst getMeta = () => {\n    for (let i = 0; i < 1000; i++) {\n        var request = {\n            // The ID of the spreadsheet to retrieve metadata from.\n            spreadsheetId: apiKey.SheetID,  // TODO: Update placeholder value.\n\n            // The ID of the developer metadata to retrieve.\n            metadataId: 0,  // TODO: Update placeholder value.\n\n            auth: window.gapi.auth2.getAuthInstance(),\n        };\n\n        window.gapi.client.sheets.spreadsheets.developerMetadata.get(request, function (err, response) {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            // TODO: Change code below to process the `response` object:\n            console.log(JSON.stringify(response, null, 2));\n        });\n    }\n\n}\n\nexport class SheetExtractor extends Component {\n    state = {\n        apiKey: apiKey.key,\n        clientId:\n            apiKey['Client-ID'],\n        range: \"\",\n    }\n    componentDidMount() {\n        this.setState({\n            range: this.props.range\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.range !== this.props.range) {\n            this.setState({\n                range: this.props.range\n            })\n            return true;\n        } return false;\n    }\n\n    handleSubmit = state => this.setState(state)\n    render() {\n        return (\n            <div>\n                {this.state.apiKey ? (\n                    <SheetsDemo\n                        apiKey={this.state.apiKey}\n                        clientId={this.state.clientId}\n                        loadSheets={this.props.loadSheets}\n                        signin={(accepted, profile) => { this.props.signedin(accepted, profile) }}\n\n                    />\n                ) : (\n                        <ApiForm onSubmit={this.handleSubmit} init={this.state} />\n                    )}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { PersonalSpace } from './PersonalSpace';\nimport { WorkoutTab } from './YourWorkout';\nimport { VersusTab } from './VersusSpace';\nimport { StatisticPage } from './Statistics';\nimport { getNames, workoutName, changeFlag } from './Store';\nimport { SheetExtractor } from './SheetAccess';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport MenuAppBar from './Avatar';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography align='center' component=\"div\" dir={dir}>\n            {children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        // width: 500,\n    },\n    form: {\n        width: '100%', // Fix IE11 issue.\n        marginTop: theme.spacing.unit * 7,\n    },\n    layout: {\n        width: 'auto',\n        display: 'block', // Fix IE11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n});\n\nclass FullWidthTabs extends React.Component {\n    state = {\n        value: 0,\n        credentials: \"User\",\n        accepted: false,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({ value: index });\n    };\n    handleLogout = () => {\n        this.setState({\n            accepted: false,\n        })\n    }\n\n    render() {\n        const { classes, theme } = this.props;\n        return (\n            <div>\n                {this.state.accepted && <div className={classes.root}>\n                    <AppBar color=\"default\">\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            fullWidth\n                        >\n                            <Tab label=\"Statistics\" />\n                            <Tab label=\"Personal-Space\" />\n                            <Tab label=\"Your Workout\" />\n                            <Tab label=\"Versus-Space\" />\n                            <MenuAppBar loggedOut={this.handleLogout} image={this.state.image} />\n                        </Tabs>\n\n                    </AppBar>\n                    <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={this.state.value}\n                        onChangeIndex={this.handleChangeIndex}\n                        className={classes.form}\n                    >\n                        <TabContainer dir={theme.direction}>\n                            <StatisticPage username={this.state.credentials} />\n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            <PersonalSpace username={this.state.credentials} />\n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            <WorkoutTab username={this.state.credentials} />\n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            <VersusTab username={this.state.credentials} userNames={getNames()} workoutNames={workoutName} />\n                        </TabContainer>\n\n                    </SwipeableViews>\n                </div>}\n                <SheetExtractor loadSheets={changeFlag} signedin={(accepted, user) => { this.setState({ accepted: accepted, credentials: user.username, image: user.image }); }} />\n            </div>\n        );\n    }\n}\n\nFullWidthTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(FullWidthTabs);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'typeface-roboto';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FullWidthTabs from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter} from 'react-router-dom';\nrequire('babel-polyfill');\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <FullWidthTabs />\n    </BrowserRouter>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
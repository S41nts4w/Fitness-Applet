{"version":3,"sources":["logo.svg","SheetWriter.js","Store.js","Graphs.js","PersonalSpace.js","Selector.js","Input.js","YourWorkout.js","UserRadio.js","Checkbox.js","CheckBoxContainer.js","VersusSpace.js","Statistics.js","DynamicSpreadsheet.js","Field.js","ApiForm.js","SheetAccess.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SheetWriter_WriteSingleCell","props","body","values","value","window","gapi","client","sheets","spreadsheets","update","spreadsheetId","apiKey","SheetID","range","valueInputOption","resource","then","response","result","console","log","concat","updatedCells","userData","getCell","Object","NODE_ENV","PUBLIC_URL","KEY","SHEET_ID","CLIENT_ID","user","scope","map","id","name","sheetScope","Store_workoutName","dateTable","Squat","Deadlift","Press","BenchPress","Bent-Over Barbell Row","PowerClean","dataSheets","getCellIndex","workout","date","index","filter","cell","i","Store_fillWorkoutDates","workoutName","today","moment_default","tupel","keys","length","push","sort","a","b","first","second","duration","diff","asDays","lastEntry","format","pop","Store_fillVersusData","versusData","time","entry","username","versusname","weight","versusworkout","includes","entryName","assign","_defineProperty","e","sortable","slice","Store_data","styles","outer","paddingTop","paddingBottom","position","height","inner","top","left","width","colors","colorChanger","Graphs_ChartComponent","data","react_default","createElement","style","lib","barGraph","Graphs_BarGraph","workoutNames","otherGraph","Graphs_LineGraph","graphOption","this","option","key","label","fontSize","dataKey","fill","strokeDasharray","wrapperStyle","bottom","element","react","connectNulls","type","stroke","margin","right","PersonalSpace_PersonalSpace","_Component","PersonalSpace","_getPrototypeOf2","_temp","_this","PersonalSpace_classCallCheck","_len","arguments","args","Array","_key","PersonalSpace_possibleConstructorReturn","PersonalSpace_getPrototypeOf","call","apply","state","dataSet","Store_fillData","setState","row","PersonalSpace_inherits","Selector_DropDown","_React$Component","DropDown","Selector_classCallCheck","Selector_possibleConstructorReturn","Selector_getPrototypeOf","age","open","handleChange","event","onUpdate","target","handleClose","handleOpen","options","classes","MenuItem_default","eventKey","error","autoComplete","Button_default","className","button","onClick","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onClose","onOpen","onChange","inputProps","Selector_inherits","Component","core_styles","theme","display","marginTop","spacing","unit","minWidth","Input_InputComponent","InputComponent","Input_classCallCheck","Input_possibleConstructorReturn","Input_getPrototypeOf","selName","set","selDate","_this$state","refs","maxWeight","submitted","parseFloat","reps","selWorkout","prevProps","_this2","ref","placeholder","es","bsStyle","handleButtonAddSet","handleButton","Input_inherits","YourWorkout_WorkoutTab","WorkoutTab","YourWorkout_classCallCheck","YourWorkout_possibleConstructorReturn","YourWorkout_getPrototypeOf","title","lodash_default","forEach","lastElem","hasOwnProperty","test","getWeightsFor","YourWorkout_bundleWriter","YourWorkout_inherits","writeDate","substr","indexOf","writeWeight","writeSet","String","fromCharCode","charCodeAt","UserRadio_UserRadio","UserRadio","UserRadio_classCallCheck","UserRadio_possibleConstructorReturn","UserRadio_getPrototypeOf","choiceEvent","RadioOptions","react_radio_buttons_lib","iconSize","iconInnerSize","padding","UserRadio_inherits","Checkbox_Checkbox","_ref","_ref$type","_ref$checked","checked","prototype","prop_types_default","string","isRequired","bool","func","CheckBoxContainer_CheckBoxContainer","CheckBoxContainer","CheckBoxContainer_classCallCheck","CheckBoxContainer_getPrototypeOf","checkedItems","Map","bind","CheckBoxContainer_assertThisInitialized","item","isChecked","prevState","returnArray","CheckBoxOptions","get","Fragment","CheckBoxContainer_inherits","VersusSpace_ColoredLine","color","backgroundColor","VersusSpace_VersusTab","VersusTab","VersusSpace_classCallCheck","VersusSpace_possibleConstructorReturn","VersusSpace_getPrototypeOf","VersusSpace_objectSpread","graphStyle","returnVal","handleNameChoice","userNames","handleWorkoutChoice","handleGraphChoice","VersusSpace_inherits","Statistics_StatisticPage","StatisticPage","Statistics_classCallCheck","Statistics_possibleConstructorReturn","Statistics_getPrototypeOf","statistic","mapValues","replace","rep","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","v","err","return","j","val","Statistics_inherits","DynamicSpreadsheet_MyData","tableName","currentDate","workoutObject","_objectSpread","fillOfflineSheet","content","DynamicSpreadsheet_SimpleGSheet","index_es","_ref2","loading","JSON","stringify","DynamicSpreadsheet","parse","handleSubmit","preventDefault","DynamicSpreadsheet_defineProperty","sheetId","sheetRange","src_Field","src_ApiForm","init","clientId","onSubmit","ApiForm_defineProperty","SheetAccess_SheetsDemo","scopes","authorize","apiLoading","signout","signedIn","loggedIn","signin","SheetAccess_getProfile","profile","auth2","getAuthInstance","currentUser","getBasicProfile","newUser","reduce","prevVal","curVal","getId","newUserNumber","getName","writeID","writeName","writeScope","Store_profileChecker","SheetAccess_SheetExtractor","SheetExtractor","SheetAccess_classCallCheck","SheetAccess_possibleConstructorReturn","SheetAccess_getPrototypeOf","snapshot","accepted","signedin","SheetAccess_inherits","App_styles","thumbnail","App_App","credentials","Sheet","image","getImageUrl","App_HeaderComponent","App_Navigation","logOut","App_Routing","_this3","Route","path","render","creds","src","logo_default","alt","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","pullLeft","react_router_bootstrap_lib","Text","pullRight","href","circle","responsive","src_App_0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","react_dom_default","BrowserRouter","basename","document","getElementById","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0KAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wNCE3BC,EAAkB,SAACC,GAC5B,IAKIC,GACAC,SAJIF,EAAMG,SAMdC,OAAOC,KAAKC,OAAOC,OAAOC,aAAaN,OAAOO,QAC1CC,cAAeC,EAAOC,QACtBC,MAAOb,EAAMa,MACbC,iBAAkB,eAClBC,SAAUd,IACXe,KAAK,SAACC,GACL,IAAIC,EAASD,EAASC,OACtBC,QAAQC,IAAR,GAAAC,OAAeH,EAAOI,aAAtB,seCdR,IACaC,KAaFC,GATIC,QAAAC,SAAA,aAAAC,WAAA,oBAAYC,IACRH,QAAAC,SAAA,aAAAC,WAAA,oBAAYE,SACVJ,QAAAC,SAAA,aAAAC,WAAA,oBAAYG,UAOZ,SAACC,GAClB,IAAIC,EAMJ,OALAP,OAAOvB,OAAOqB,GAAUU,IAAI,SAAAC,GAGtB,OAFEA,EAAGC,OAASJ,IACZC,EAAQE,EAAGE,YACN,OAENJ,IAEAK,GAAe,QAAS,WAAY,QAAS,aAAc,wBAAyB,cAC3FC,GAAcC,SAAaC,YAAgBC,SAAaC,cAAkBC,2BAA6BC,eACvGC,KAMSC,EAAe,SAACC,EAASC,GAClC,IAAIC,EAMJ,OALAX,EAAUS,GAASG,OAAO,SAACC,EAAMC,GAG3B,OAFED,IAASH,IACTC,EAAQG,EAAI,GACP,OAENH,GAgGX,IAAMI,EAAmB,SAACC,GACtB,IAAIC,EAAQC,MACZlB,EAAUgB,MACV7B,OAAOvB,OAAO2C,GAAYZ,IAAI,SAACwB,EAAOL,GAClC,OAAI3B,OAAOiC,KAAKD,EAAMH,IAAcK,OAAS,GACzCrB,EAAUgB,GAAaM,KAAKnC,OAAOiC,KAAKb,GAAYO,IAC7C,MAEJ,OAEXd,EAAUgB,GAAaO,KAAK,SAAUC,EAAGC,GACrC,IAAIC,EAAQR,IAAOM,EAAG,YAClBG,EAAST,IAAOO,EAAG,YAEvB,OADWP,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAC1BG,WAEhB,IAAIC,EAAYb,IAAOlB,EAAUgB,GAAahB,EAAUgB,GAAaK,OAAS,GAAI,YACrEH,EAAAM,EAAOI,SAASX,EAAMY,KAAKE,IAAYD,UACtC,EACV9B,EAAUgB,GAAaM,KAAvB,GAAAvC,OAA+BkC,EAAMe,OAAO,YAA5C,cAEAhC,EAAUgB,GAAaiB,MACvBjC,EAAUgB,GAAaM,KAAvB,GAAAvC,OAA+BkC,EAAMe,OAAO,YAA5C,eA+EKE,EAAiB,SAACxE,GAC3ByE,KACAhD,OAAOiC,KAAKb,GAAYZ,IAAI,SAAAe,GAIxB,OAHAyB,EAAWb,MACPc,KAAQ1B,IAEL,OAEXvB,OAAOvB,OAAO2C,GAAYZ,IAAI,SAACc,EAASK,GA8BpC,OA7BA3B,OAAOiC,KAAKX,GAASd,IAAI,SAAA0C,GACrB,IACQ3E,EAAM4E,WAAa5E,EAAM6E,YACzBpD,OAAOvB,OAAO2C,EAAW4B,EAAWrB,GAAGsB,MAAMC,GAAO3E,EAAM4E,WAAW3C,IAAI,SAAA6C,GACrE,GAAI9E,EAAM+E,cAAcC,SAASL,GAAQ,CACrC,IAAIM,iBAAoBN,GAExB,OADAF,EAAWrB,GAAK3B,OAAOyD,OAAPC,KAAiBF,EAAYH,GAAUL,EAAWrB,IAC3D,KAEX,OAAO,OAEX3B,OAAOvB,OAAO2C,EAAW4B,EAAWrB,GAAGsB,MAAMC,GAAO3E,EAAM6E,aAAa5C,IAAI,SAAA6C,GACvE,GAAI9E,EAAM+E,cAAcC,SAASL,GAAQ,CACrC,IAAIM,YAAejF,EAAM6E,WAArB,OAAAxD,OAAqCsD,GAEzC,OADAF,EAAWrB,GAAK3B,OAAOyD,OAAPC,KAAiBF,EAAYH,GAAUL,EAAWrB,IAC3D,KAEX,OAAO,QAGX3B,OAAOvB,OAAO2C,EAAW4B,EAAWrB,GAAGsB,MAAMC,GAAO3E,EAAM4E,WAAW3C,IAAI,SAAA6C,GAErE,OADAL,EAAWrB,GAAK3B,OAAOyD,OAAPC,KAAiBR,EAAQG,GAAUL,EAAWrB,IACvD,OAGjB,MAAOgC,IAET,OAAO,OAEJ,OAGX,IAAIC,KACJ,IAAK,IAAIrC,KAAQyB,EACbY,EAASzB,MAAMZ,EAAMyB,EAAWzB,KAWpC,OARAqC,EAASxB,KAAK,SAAUC,EAAGC,GACvB,IAAIC,EAAQR,IAAOM,EAAE,GAAGY,KAAM,YAC1BT,EAAST,IAAOO,EAAE,GAAGW,KAAM,YAE/B,OADWlB,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAC1BG,WAEhBK,KACAY,EAASpD,IAAI,SAAC0C,EAAOvB,GAAQ,OAAOuB,EAAMW,MAAM,GAAGrD,IAAI,SAAAkB,GAAA,OAAQsB,EAAWrB,GAAK3B,OAAOyD,OAAO/B,EAAMsB,EAAWrB,QACvGqB,GAyCAA,KACAc,qkCC5UX,IAAMC,GACJC,OACEC,WAAY,MACZC,cAAe,MACfC,SAAU,WACVC,OAAQ,KAEVC,OACEF,SAAU,WACVG,IAAK,IACLC,KAAM,IACNC,MAAO,OACPJ,OAAQ,SAGNK,GAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7GC,EAAe,SAAC/C,GACpB,OAAO8C,EAAO9C,EAAI8C,EAAOvC,SAIdyC,EAAiB,SAACpG,GAC7B,IAAIqG,EAAOrG,EAAMqG,KACjB,OACEC,EAAAxC,EAAAyC,cAAA,OAAKC,MAAOhB,EAAOC,OACjBa,EAAAxC,EAAAyC,cAAA,OAAKC,MAAOhB,EAAOM,OACjBQ,EAAAxC,EAAAyC,cAACE,EAAA,oBAAD,KACGzG,EAAM0G,SAAWJ,EAAAxC,EAAAyC,cAACI,GAASC,aAAc5G,EAAM4G,aAAcP,KAAMA,IAAWrG,EAAM6G,WAAaP,EAAAxC,EAAAyC,cAACO,GAAUF,aAAc5G,EAAM4G,aAAcP,KAAMA,IAAWC,EAAAxC,EAAAyC,cAAA,2CAOpKI,0HAEF,IAAII,EAAcC,KAAKhH,MAAM4G,aAAa3E,IAAI,SAACgF,EAAQ7D,GACrD,OAAOkD,EAAAxC,EAAAyC,cAACE,EAAA,KAAIS,IAAA,UAAA7F,OAAe4F,GAAUE,OAASvB,SAAU,MAAOwB,SAAU,IAAMC,QAASJ,EAAQK,KAAMnB,EAAa/C,OAErH,OACEkD,EAAAxC,EAAAyC,cAACE,EAAA,oBAAD,KACEH,EAAAxC,EAAAyC,cAACE,EAAA,UAASJ,KAAMW,KAAKhH,MAAMqG,MACzBC,EAAAxC,EAAAyC,cAACE,EAAA,eAAcc,gBAAgB,QAC/BjB,EAAAxC,EAAAyC,cAACE,EAAA,OAAMY,QAAQ,SACff,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAOe,cAAgBC,OAAQ,KAC/BV,EAAY9E,IAAI,SAAAyF,GAAA,OAAWA,IAC5BpB,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,sBAdakB,EAAA,WAsBjBb,0HAEF,IAAIC,EAAcC,KAAKhH,MAAM4G,aAAa3E,IAAI,SAACgF,EAAQ7D,GACrD,OAAOkD,EAAAxC,EAAAyC,cAACE,EAAA,MAAKS,IAAA,UAAA7F,OAAe4F,GAAUW,cAAc,EAAMT,OAASvB,SAAU,MAAOwB,SAAU,IAAMS,KAAK,WAAWR,QAASJ,EAAQa,OAAQ3B,EAAa/C,OAE5J,OACEkD,EAAAxC,EAAAyC,cAACE,EAAA,oBAAD,KACEH,EAAAxC,EAAAyC,cAACE,EAAA,WAAUJ,KAAMW,KAAKhH,MAAMqG,KAC1B0B,QAAUhC,IAAK,EAAGiC,MAAO,GAAIhC,KAAM,GAAIyB,OAAQ,IAC/CnB,EAAAxC,EAAAyC,cAACE,EAAA,eAAcc,gBAAgB,QAC/BjB,EAAAxC,EAAAyC,cAACE,EAAA,OAAMY,QAAQ,SACff,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAOe,cAAgBC,OAAQ,KAC/BV,EAAY9E,IAAI,SAAAyF,GAAA,OAAWA,IAC5BpB,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,sBAfckB,EAAA,uwBCvDjB,IAAMM,EAAb,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,+FAAAC,CAAAvB,KAAAmB,GAAA,QAAAK,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAC,EAAAP,GAAAD,EAAAC,EAAAO,EAAA7B,MAAAoB,EAAAU,EAAAX,IAAAY,KAAAC,MAAAZ,GAAApB,MAAA3F,OAAAqH,KAAAJ,EACEW,OACEC,QAAS3D,GAFb8C,cAAA,SAAAF,OAAAjB,IAAA,oBAAA/G,MAAA,YFoMwB,SAACyE,GACrBW,KACA9D,OAAOiC,KAAKb,GAAYZ,IAAI,SAAAe,GAIxB,OAHAuC,EAAK3B,MACDc,KAAQ1B,IAEL,OAEXvB,OAAOvB,OAAO2C,GAAYZ,IAAI,SAACc,EAASK,GAWpC,OAVA3B,OAAOiC,KAAKX,GAASd,IAAI,SAAA0C,GACrB,IACIlD,OAAOvB,OAAO2C,EAAW0C,EAAKnC,GAAGsB,MAAMC,GAAOC,IAAW3C,IAAI,SAAA6C,GAEzD,OADAS,EAAKnC,GAAK3B,OAAOyD,OAAPC,KAAiBR,EAAQG,GAAUS,EAAKnC,IAC3C,OAEb,MAAOgC,IAET,OAAO,OAEJ,OAGX,IAAIC,KACJ,IAAK,IAAIrC,KAAQuC,EACbF,EAASzB,MAAMZ,EAAMuC,EAAKvC,KAG9BqC,EAASxB,KAAK,SAAUC,EAAGC,GACvB,IAAIC,EAAQR,IAAOM,EAAE,GAAGY,KAAM,YAC1BT,EAAST,IAAOO,EAAE,GAAGW,KAAM,YAG/B,OAFWlB,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAClBG,WAGxBmB,KACAF,EAASpD,IAAI,SAAC0C,EAAOvB,GAAQ,OAAOuB,EAAMW,MAAM,GAAGrD,IAAI,SAAAkB,GAAA,OAAQoC,EAAKnC,GAAK3B,OAAOyD,OAAO/B,EAAMoC,EAAKnC,QElOlG+F,CAASnC,KAAKhH,MAAM4E,UACpBoC,KAAKoC,UACHF,QAAS3D,OAPf2B,IAAA,SAAA/G,MAAA,WAWW,IACC+I,EAAWlC,KAAKiC,MAAhBC,QAQR,OACE5C,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACH,GAAeQ,aAAcvE,EAAawE,YAAY,EAAMR,KARxD6C,EAAQhG,OAAO,SAAAmG,GACpB,OAAG5H,OAAOiC,KAAK2F,GAAK1F,OAAQ,EACnB0F,EACD,OACPpH,IAAI,SAAAoH,GAAA,OAAKA,0MAlBlBC,CAAAnB,EAAAD,GAAAC,EAAA,CAAmCR,EAAA,o4BCwCnC,IAWa4B,GAAb,SAAAC,GAAA,SAAAC,IAAA,IAAArB,EAAAC,EAAAC,+FAAAoB,CAAA1C,KAAAyC,GAAA,QAAAjB,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAe,GAAArB,GAAAD,EAAAC,EAAAqB,GAAA3C,MAAAoB,EAAAwB,GAAAH,IAAAV,KAAAC,MAAAZ,GAAApB,MAAA3F,OAAAqH,KAAAJ,EACEW,OACEY,IAAK,GACLC,MAAM,GAHVxB,EAMEyB,aAAe,SAAAC,aACb1B,EAAKtI,MAAMiK,SAASD,GACpB1B,EAAKc,iBAAYY,EAAME,OAAO/H,OAAO6H,EAAME,OAAO/J,wGARtDmI,EAWE6B,YAAc,WACZ7B,EAAKc,UAAWU,MAAM,KAZ1BxB,EAeE8B,WAAa,WACX9B,EAAKc,UAAWU,MAAM,KAhB1BzB,cAAA,SAAAoB,OAAAvC,IAAA,SAAA/G,MAAA,WAmBW,IAEHkK,EADIC,EAAYtD,KAAKhH,MAAjBsK,QAER,IACED,EAAUrD,KAAKhH,MAAMqK,QAAQpI,IAAI,SAACE,GAChC,OAAOmE,EAAAxC,EAAAyC,cAACgE,GAAAzG,GAASoD,IAAA,WAAA7F,OAAgBc,GAAQqI,SAAUrI,GAAQA,KAE7D,MAAOsI,GACPtJ,QAAQC,IAAIqJ,GACZJ,EAAU/D,EAAAxC,EAAAyC,cAACgE,GAAAzG,GAAS0G,SAAA,eAAV,QAGZ,OACElE,EAAAxC,EAAAyC,cAAA,QAAMmE,aAAa,OACjBpE,EAAAxC,EAAAyC,cAACoE,GAAA7G,GAAO8G,UAAWN,EAAQO,OAAQC,QAAS9D,KAAKoD,YAAjD,mBAGA9D,EAAAxC,EAAAyC,cAACwE,GAAAjH,GAAY8G,UAAWN,EAAQU,aAC9B1E,EAAAxC,EAAAyC,cAAC0E,EAAAnH,GAAWoH,QAAQ,+BAApB,OACA5E,EAAAxC,EAAAyC,cAAC4E,GAAArH,GACCgG,KAAM9C,KAAKiC,MAAMa,KACjBsB,QAASpE,KAAKmD,YACdkB,OAAQrE,KAAKoD,WACbjK,MAAO6G,KAAKiC,MAAMY,IAClByB,SAAUtE,KAAK+C,aACfwB,YACEpJ,KAAM,MACND,GAAI,gCAGLmI,4MAjDbmB,CAAA/B,EAAAD,GAAAC,EAAA,CAA8BnD,EAAAxC,EAAM2H,WA6DrBhK,OAAAiK,EAAA,WAAAjK,CAxEA,SAAAkK,GAAA,OACbd,QACEe,QAAS,QACTC,UAAgC,EAArBF,EAAMG,QAAQC,MAE3Bf,aACEjD,OAAQ4D,EAAMG,QAAQC,KACtBC,SAAU,OAiEC,CAAmBzC,ywBCjH3B,IAAM0C,GAAb,SAAA/D,GAAA,SAAAgE,IAAA,IAAA9D,EAAAC,EAAAC,+FAAA6D,CAAAnF,KAAAkF,GAAA,QAAA1D,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAwD,GAAA9D,GAAAD,EAAAC,EAAA8D,GAAApF,MAAAoB,EAAAiE,GAAAH,IAAAnD,KAAAC,MAAAZ,GAAApB,MAAA3F,OAAAqH,KAAAJ,EACEW,OACE9G,KAAMmG,EAAKtI,MAAMsM,QACjBvJ,QAAS,cACTwJ,IAAK,IACLzH,OAAQ,EACR9B,KAAMsF,EAAKtI,MAAMwM,SANrBnE,cAAA,SAAA6D,OAAAhF,IAAA,eAAA/G,MAAA,WAQiB,IAAAsM,EACWzF,KAAKiC,MAAvB9G,EADOsK,EACPtK,KAAMY,EADC0J,EACD1J,QACZiE,KAAKoC,UAAWtE,OAAQkC,KAAK0F,KAAKC,UAAUxM,QAC5C6G,KAAKhH,MAAM4M,WACTzK,KAAMA,EACNY,QAASA,EACT+B,OAAQkC,KAAKiC,MAAMnE,OACnByH,IAAKvF,KAAKiC,MAAMsD,IAChBvJ,KAAMgE,KAAKiC,MAAMjG,UAhBvBkE,IAAA,qBAAA/G,MAAA,WAoBQ0M,WAAW7F,KAAK0F,KAAKC,UAAUxM,SAAW6G,KAAKiC,MAAMnE,OACvDkC,KAAKoC,UACHtE,OAAQ+H,WAAW7F,KAAK0F,KAAKC,UAAUxM,OACvCoM,cAAQvF,KAAK0F,KAAKI,KAAK3M,SAGzB6G,KAAKoC,UACHmD,cAAQvF,KAAKiC,MAAMsD,IAAnB,KAAAlL,OAA0B2F,KAAK0F,KAAKI,KAAK3M,YA3BjD+G,IAAA,oBAAA/G,MAAA,WAgCI6G,KAAKoC,UACHjH,KAAM6E,KAAKhH,MAAMsM,QACjBvJ,QAASiE,KAAKhH,MAAM+M,WACpB/J,KAAMgE,KAAKhH,MAAMwM,aAnCvBtF,IAAA,qBAAA/G,MAAA,SAsCqB6M,GACbhG,KAAKhH,MAAMsM,UAAYU,EAAUV,SACnCtF,KAAKoC,UACHjH,KAAM6E,KAAKhH,MAAMsM,UAGjBtF,KAAKhH,MAAM+M,aAAeC,EAAUD,YACtC/F,KAAKoC,UACHrG,QAASiE,KAAKhH,MAAM+M,gBA9C5B7F,IAAA,SAAA/G,MAAA,WAkDW,IAAA8M,EAAAjG,KACP,OACEV,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,SAAO2G,IAAI,YAAYrF,KAAK,SAASsF,YAAY,OACjD7G,EAAAxC,EAAAyC,cAAA,SAAO2G,IAAI,OAAOrF,KAAK,SAASsF,YAAY,WAC5C7G,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAOC,QAAQ,UAAUvC,QAAS,SAAC1F,GAAQ6H,EAAKK,uBAAjD,WACAhH,EAAAxC,EAAAyC,cAAA,iCAAAlF,OAA4B2F,KAAKiC,MAAMnE,OAAvC,UAAAzD,OAAsD2F,KAAKiC,MAAMsD,OAEnEjG,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAOC,QAAQ,UAAUvC,QAAS,SAAC1F,GAAQ6H,EAAKM,iBAAjD,kNA3DRC,CAAAtB,EAAAhE,GAAAgE,EAAA,CAAoCvE,EAAA,gxBCG7B,IAAM8F,GAAb,SAAAvF,GAAA,SAAAwF,IAAA,IAAAtF,EAAAC,EAAAC,+FAAAqF,CAAA3G,KAAA0G,GAAA,QAAAlF,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAgF,GAAAtF,GAAAD,EAAAC,EAAAsF,GAAA5G,MAAAoB,EAAAyF,GAAAH,IAAA3E,KAAAC,MAAAZ,GAAApB,MAAA3F,OAAAqH,KAAAJ,EACIW,OACIrE,SAAU,OACV7B,QAAS,OACTC,KAAM,IAJdqF,cAAA,SAAAqF,OAAAxG,IAAA,oBAAA/G,MAAA,WAOQ6G,KAAKoC,UACDxE,SAAUoC,KAAKhH,MAAM4E,cARjCsC,IAAA,qBAAA/G,MAAA,SAWuB6M,GACXhG,KAAKhH,MAAM4E,WAAaoI,EAAUpI,UAClCoC,KAAKoC,UACDxE,SAAUoC,KAAKhH,MAAM4E,cAdrCsC,IAAA,SAAA/G,MAAA,WAkBa,ILQgBmD,EKRhB2J,EAAAjG,KACL,OACIV,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAACgD,IAASc,QAAShI,EAAayL,MAAM,UAAU7D,SAAU,SAAC7E,GAAQ6H,EAAK7D,UAAWrG,QAASqC,OAC5FkB,EAAAxC,EAAAyC,cAACgD,IAASc,SLGD/G,EKHuB0D,KAAKiC,MAAMlG,QLIpDT,EAAUgB,IKJoDwK,MAAM,OAAO7D,SAAU,SAAC7E,GAAQ6H,EAAK7D,UAAWpG,KAAMoC,QAE/GkB,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,sCLkFb,SAAuBxD,EAAS6B,GACnC,GAAgB,SAAZ7B,GAAmC,SAAb6B,EAAqB,CAC3C,IAAIS,KACJ0I,EAAAjK,EAAEkK,QAAQnL,EAAY,SAAC1C,EAAO+G,GAC1B7B,EAASzB,MAAMsD,EAAKrE,EAAWqE,OAEnC7B,EAASxB,KAAK,SAAUC,EAAGC,GACvB,IAAIC,EAAQR,IAAOM,EAAE,GAAI,YACrBG,EAAST,IAAOO,EAAE,GAAI,YAE1B,OADWP,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAC1BG,WAGhB,IADA,IAAI6J,EAAW5I,EAASd,OAChB0J,EAAS,GAAGlL,GAASmL,eAAetJ,IAAiC,IAApBS,EAAS1B,QAC9DsK,EAAW5I,EAASd,MAExB,GAAI0J,EAAS,GAAGlL,GAASmL,eAAetJ,GAEpC,MADIuJ,kBAAkBF,EAAS,GAAGlL,GAAS6B,GAAUE,OAAjD,WAAAzD,OAAiE4M,EAAS,GAAGlL,GAAS6B,GAAU2H,KAI5G,OAAO,KKtGU6B,CAAcpH,KAAKiC,MAAMlG,QAASiE,KAAKiC,MAAMrE,WAElD0B,EAAAxC,EAAAyC,cAAA,gCACAD,EAAAxC,EAAAyC,cAAC0F,IAAeK,QAAStF,KAAKiC,MAAMrE,SAAU4H,QAASxF,KAAKiC,MAAMjG,KAAM+J,WAAY/F,KAAKiC,MAAMlG,QAAS6J,UAAW,SAAC5M,GAAYA,EAAMgD,KAAOiK,EAAKhE,MAAMjG,KAAMqL,GAAarO,8MA9B3LsO,CAAAZ,EAAAxF,GAAAwF,EAAA,CAAgC/F,EAAA,WAoC1B0G,GAAe,SAACrO,GAClB,IAAIgD,EAAOhD,EAAMgD,KAEbuL,GACApO,MAFJ6C,EAAOA,EAAKwL,OAAO,GAAIxL,EAAO,KAAKyL,QAAQ,MAGvC5N,gBAAUb,EAAM+C,QAAhB,MAAA1B,OAA4ByB,EAAa9C,EAAM+C,QAAS/C,EAAMgD,QAE9D0L,GACAvO,MAAOH,EAAM8E,OACbjE,gBAAUb,EAAM+C,QAAhB,KAAA1B,OAA2BG,EAAQxB,EAAMmC,OAAzCd,OAAiDyB,EAAa9C,EAAM+C,QAAS/C,EAAMgD,QAEnF2L,GACAxO,MAAOH,EAAMuM,IACb1L,gBAAUb,EAAM+C,QAAhB,KAAA1B,OAA2BuN,OAAOC,aAAarN,EAAQxB,EAAMmC,MAAM2M,WAAW,GAAK,IAAnFzN,OAAwFyB,EAAa9C,EAAM+C,QAAS/C,EAAMgD,QAE9HjD,EAAgBwO,GAChBxO,EAAgB2O,GAChB3O,EAAgB4O,mxBCzDpB,IAGaI,GAAb,SAAA7G,GAAA,SAAA8G,IAAA,IAAA5G,EAAAC,EAAAC,+FAAA2G,CAAAjI,KAAAgI,GAAA,QAAAxG,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAsG,GAAA5G,GAAAD,EAAAC,EAAA4G,GAAAlI,MAAAoB,EAAA+G,GAAAH,IAAAjG,KAAAC,MAAAZ,GAAApB,MAAA3F,OAAAqH,KAAAJ,EACIgD,SAAW,SAAClG,GACRkD,EAAKtI,MAAMoP,YAAYhK,IAF/BiD,cAAA,SAAA2G,OAAA9H,IAAA,SAAA/G,MAAA,WAKQ,IAAIkP,EAAerI,KAAKhH,MAAMqK,QAAQpI,IAAI,SAACgF,GACvC,OAAOX,EAAAxC,EAAAyC,cAAC+I,GAAA,aAAYC,SATf,EASmCC,cATnC,EAS4DC,QARjE,GAQ+EvI,IAAA,UAAA7F,OAAe4F,GAAU9G,MAAO8G,GAASA,KAE5H,OACIX,EAAAxC,EAAAyC,cAAC+I,GAAA,YAAWhE,SAAUtE,KAAKsE,UACtB+D,EAAapN,IAAI,SAAAE,GAAA,OAAQA,4MAV1CuN,CAAAV,EAAA9G,GAAA8G,EAAA,CAA+BrH,EAAA,8BCFlBgI,GAAW,SAAAC,GAAA,IAAAC,EAAAD,EAAG/H,YAAH,IAAAgI,EAAU,WAAVA,EAAsB1N,EAAtByN,EAAsBzN,KAAtB2N,EAAAF,EAA4BG,eAA5B,IAAAD,KAA6CxE,EAA7CsE,EAA6CtE,SAA7C,OACpBhF,EAAAxC,EAAAyC,cAAA,SAAOsB,KAAMA,EAAM1F,KAAMA,EAAM4N,QAASA,EAASzE,SAAUA,osBAG/DqE,GAASK,WACLnI,KAAMoI,GAAAnM,EAAUoM,OAChB/N,KAAM8N,GAAAnM,EAAUoM,OAAOC,WACvBJ,QAASE,GAAAnM,EAAUsM,KACnB9E,SAAU2E,GAAAnM,EAAUuM,KAAKF,YCRtB,IAAMG,GAAb,SAAApI,GACI,SAAAqI,EAAYvQ,GAAO,IAAAsI,MAAA,mGAAAkI,CAAAxJ,KAAAuJ,KACfvJ,MAAAsB,MAAAmI,GAAAF,GAAAxH,KAAA/B,KAAMhH,sDAEDiJ,OACDyH,aAAc,IAAIC,KAGtBrI,EAAKyB,aAAezB,EAAKyB,aAAa6G,KAAlBC,MAAAvI,KAPLA,YADvB,SAAAiI,OAAArJ,IAAA,eAAA/G,MAAA,SAWiBiF,GACT,IAAM0L,EAAO1L,EAAE8E,OAAO/H,KAChB4O,EAAY3L,EAAE8E,OAAO6F,QAC3B/I,KAAKoC,SAAS,SAAA4H,GAAA,OAAgBN,aAAcM,EAAUN,aAAanE,IAAIuE,EAAMC,SAdrF7J,IAAA,qBAAA/G,MAAA,SAgBuB6M,EAAWgE,GAC1B,GAAIhK,KAAKiC,QAAU+H,EAAW,CAC1B,IAAIC,KACJjK,KAAKiC,MAAMyH,aAAa1C,QAAQ,SAAC7N,EAAO+G,IACtB,IAAV/G,IAC2B,IAAvB8Q,EAAYtN,OACZsN,EAAY,GAAK/J,EAEjB+J,EAAYrN,KAAKsD,MAK7BF,KAAKhH,MAAMoP,YAAY6B,OA7BnC/J,IAAA,SAAA/G,MAAA,WAiCa,IAAA8M,EAAAjG,KACCkK,EAAkBlK,KAAKhH,MAAMqK,QAAQpI,IAAI,SAAAgF,GAC3C,OAAOX,EAAAxC,EAAAyC,cAAA,SAAOW,IAAA,kBAAA7F,OAAuB4F,IAChCA,EACDX,EAAAxC,EAAAyC,cAACoJ,IAASxN,KAAM8E,EAAQ8I,QAAS9C,EAAKhE,MAAMyH,aAAaS,IAAIlK,GAASqE,SAAU2B,EAAKlD,kBAG7F,OACIzD,EAAAxC,EAAAyC,cAACD,EAAAxC,EAAMsN,SAAP,KACKF,EAAgBjP,IAAI,SAAAgF,GAAA,OAAUA,4MA1C/CoK,CAAAd,EAAArI,GAAAqI,EAAA,CAAuC5I,EAAA,gtCCGvC,IAAM2J,GAAc,SAAA1B,GAAA,IAAG2B,EAAH3B,EAAG2B,MAAH,OAChBjL,EAAAxC,EAAAyC,cAAA,MACIC,OACI+K,MAAOA,EACPC,gBAAiBD,EACjB1L,OAAQ,OAKP4L,GAAb,SAAAvJ,GAAA,SAAAwJ,IAAA,IAAAtJ,EAAAC,EAAAC,+FAAAqJ,CAAA3K,KAAA0K,GAAA,QAAAlJ,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAgJ,GAAAtJ,GAAAD,EAAAC,EAAAsJ,GAAA5K,MAAAoB,EAAAyJ,GAAAH,IAAA3I,KAAAC,MAAAZ,GAAApB,MAAA3F,OAAAqH,KAAAJ,EACIW,OACIjJ,OACI4E,SAAU0D,EAAKtI,MAAM4E,SACrBC,WAAYyD,EAAKtI,MAAM4E,SACvBG,kBAEJN,WAAYA,EACZoC,YAAY,EACZH,UAAU,GATlB2B,cAAA,SAAAqJ,OAAAxK,IAAA,oBAAA/G,MAAA,WAaQ6G,KAAKoC,UACDpJ,OACI4E,SAAUoC,KAAKhH,MAAM4E,SACrBC,WAAYmC,KAAKhH,MAAM4E,SACvBG,kBAEJN,WAAYD,EAAewC,KAAKiC,MAAMjJ,YAnBlDkH,IAAA,mBAAA/G,MAAA,SAsBqBiF,GACb4B,KAAKoC,UACDpJ,MAAM8R,MACC9K,KAAKiC,MAAMjJ,OACd6E,WAAYO,IAEhBX,WAAYD,EAAewC,KAAKiC,MAAMjJ,YA5BlDkH,IAAA,sBAAA/G,MAAA,SA+BwBiF,GAChB4B,KAAKoC,UACDpJ,MAAM8R,MACC9K,KAAKiC,MAAMjJ,OACd+E,cAAeK,IAEnBX,WAAYD,EAAewC,KAAKiC,MAAMjJ,YArClDkH,IAAA,oBAAA/G,MAAA,SAwCsBiF,GACd,OAAQA,GACJ,IAAK,YACL4B,KAAKoC,UACD1C,UAAU,EACVG,YAAY,IAEZ,MACJ,IAAK,cACLG,KAAKoC,UACD1C,UAAU,EACVG,YAAY,IAOpBG,KAAKoC,UACD2I,WAAY3M,OA3DxB8B,IAAA,qBAAA/G,MAAA,SA+DuB6M,EAAWgE,GACtBhK,KAAKiC,MAAMjJ,QAAUgR,EAAUhR,OAC/BgH,KAAKoC,UACD3E,WAAYD,EAAewC,KAAKiC,MAAMjJ,YAlEtDkH,IAAA,SAAA/G,MAAA,WAsEa,IAcG6R,EAdH/E,EAAAjG,KA0BL,OACIV,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAACwI,IAAUK,YAAa,SAAChK,GAAQ6H,EAAKgF,iBAAiB7M,IAAMiF,QA3B9D4C,EAAKjN,MAAMkS,UAAUhP,OAAO,SAAAf,GAAU,OAAIA,IAAS8K,EAAKjN,MAAM4E,WAA4C3C,IAAI,SAAAE,GAAA,OAAQA,OA6BzHmE,EAAAxC,EAAAyC,cAAC+K,IAAYC,MAAM,SACnBjL,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAC+J,IAAkBlB,YAAa,SAAChK,GAAQ6H,EAAKkF,oBAAoB/M,IAAMiF,QAASrD,KAAKhH,MAAM4G,gBAEhGN,EAAAxC,EAAAyC,cAACH,GAAeQ,cArBhBoL,KACJ3P,EAAYa,OAAO,SAAAf,GACf,QAAK8K,EAAKhE,MAAMjJ,MAAM+E,cAAeC,SAAS7C,KAG/CF,IAAI,SAAAgF,GAGH,OAFA+K,EAAUpO,KAAV,QAAAvC,OAAuB4F,IACvB+K,EAAUpO,KAAV,GAAAvC,OAAkB4L,EAAKhE,MAAMjJ,MAAM6E,WAAnC,OAAAxD,OAAmD4F,IAC5C,OAEJ+K,GAW6CnL,WAAYG,KAAKiC,MAAMpC,WAAYH,SAAUM,KAAKiC,MAAMvC,SAAUL,KA9B/G4G,EAAKhE,MAAMxE,WAAWvB,OAAO,SAAAmG,GAChC,OAAI5H,OAAOiC,KAAK2F,GAAK1F,OAAS,EACnB0F,EACF,OACVpH,IAAI,SAAAoH,GACH,OAAOA,MA0BP/C,EAAAxC,EAAAyC,cAACwI,IAAUK,YAAa,SAAChK,GAAQ6H,EAAKmF,kBAAkBhN,IAAMiF,SAAU,YAAa,yNA1GrGgI,CAAAX,EAAAxJ,GAAAwJ,EAAA,CAA+B/J,EAAA,gxBCZxB,IAAM2K,GAAb,SAAApK,GAAA,SAAAqK,IAAA,mGAAAC,CAAAxL,KAAAuL,GAAAE,GAAAzL,KAAA0L,GAAAH,GAAAvJ,MAAAhC,KAAAyB,sBAAA,SAAA8J,OAAArL,IAAA,SAAA/G,MAAA,WACY,IV+JkByE,EACtB+N,EUhKIrK,EAAAtB,KAQJ,OACIV,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,wBAPGwH,EAAAjK,EAAE7B,KV4JS2C,EU5JS0D,EAAKtI,MAAM4E,SV8J9CmJ,EAAAjK,EAAE8O,UAAUtQ,EAAW,SAACnC,EAAOgC,GAK3B,OAJAwQ,OACOA,EADPxN,KAEKhD,EAAO,IAEL4L,EAAAjK,EAAEkK,QAAQ7N,EAAO,SAAC6C,GAErB,GADAA,EAAOA,EAAK6P,QAAQ,UAAW,KAC3BhQ,EAAWqL,eAAelL,GAC1B,OAAO,EACL,GAAIH,EAAWG,GAAMb,GAAM+L,eAAetJ,GAAW,CACvD,IAAI2H,EAAM1J,EAAWG,GAAMb,GAAMyC,GAAU2H,IAC3C,GAAqB,qBAATA,EAAsB,CAC9B,IAAItJ,EAAQ,EACR6P,GAAO,IAFmBC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAG9B,QAAAC,EAAAC,EAAc7G,EAAd8G,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmB,KAAVU,EAAUN,EAAAhT,MACL,MAANsT,EAEAX,IADA7P,GACa,GAEb6P,EAAI7P,GAAS6P,EAAI7P,GAAO5B,OAAOoS,IART,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAW9B,IAAK,IAAIW,EAAI,EAAGA,EAAId,EAAInP,OAAQiQ,IAC5BjB,EAAUxQ,KAAqD,EAA1CU,EAAWG,GAAMb,GAAMyC,GAAUE,OAAc,IAAMgO,EAAIc,IAI1F,OAAOzT,MAIRwS,GU7LkD,SAACkB,EAAK3M,GACnD,OAAOZ,EAAAxC,EAAAyC,cAAA,KAAGW,IAAA,QAAA7F,OAAa6F,IAAhB,GAAA7F,OAA2B6F,EAA3B,MAAA7F,OAAmCwS,8MAL1DC,CAAAvB,EAAArK,GAAAqK,EAAA,CAAmC5K,EAAA,oyBCEnC,IAAMoM,GAAS,SAAAnE,GAEb,OXoC8B,SAAC1G,EAAS8K,GACtC,GAAkB,iBAAdA,EAA8B,CAC9B,IAAIC,EAAc,GAClB/K,EAAQ5D,MAAM,GAAGrD,IAAI,SAACoH,EAAKjG,GA8BvB,OA7BAiG,EAAIpH,IAAI,SAACkB,EAAMyQ,GACX,GAAa,KAATzQ,EAAa,CACb,GAAU,IAANyQ,EAAS,CACT,IAAKnS,OAAOiC,KAAKb,GAAYmC,SAAS7B,GAAO,CAEzC,IADA,IAAI+Q,KACK9Q,EAAI,EAAGA,EAAIf,EAAYsB,OAAQP,IACpC8Q,EAAgBzS,OAAOyD,OAAPC,KAAiB9C,EAAYe,OAAW8Q,GAE5DrR,EAAWM,GAAXgR,KAAwBD,GAE5BD,EAAc9Q,OACX,IAAKyQ,EAAI,GAAK,IAAM,GACnBrS,EAAS2M,eAAe0F,GAAI,CAC5B,IAAM9O,EAAS+H,WAAW1J,EAAK0P,QAAQ,WAAY,IAAIA,QAAQ,KAAM,MACrEhQ,EAAWoR,GAAaD,GAAavS,OAAOyD,OAAPC,KAAiB5D,EAASqS,GAAGzR,MAAS2C,WAAYjC,EAAWoR,GAAaD,IAGnHJ,EAAI,IAAOA,EAAI,GAAK,IAAM,GACtBrS,EAAS2M,eAAe0F,EAAI,KAC5B/Q,EAAWoR,GAAaD,GAAWzS,EAASqS,EAAI,GAAGzR,MAAnDgS,KACOtR,EAAWoR,GAAaD,GAAWzS,EAASqS,EAAI,GAAGzR,OACtDoK,IAAOpJ,KAKvB,OAAO,OAGJ,OAEXE,EAAiB2Q,OACI,iBAAdA,GACP9K,EAAQ5D,MAAM,GAAGrD,IAAI,SAACoH,EAAKjG,GA2BvB,OA1BAiG,EAAIpH,IAAI,SAACkB,EAAMyQ,GACX,OAAQA,GACJ,KAAK,EACDrS,EAjFF,EAiF4B6B,EAAK,GAA/B+Q,KACO5S,EAlFT,EAkFmC6B,EAAK,IAClClB,GAAMiB,IAEV,MACJ,KAAK,EACD5B,EAvFF,EAuF4B6B,EAAK,GAA/B+Q,KACO5S,EAxFT,EAwFmC6B,EAAK,IAClCjB,KAAQgB,IAEZ,MACJ,KAAK,EACD5B,EA7FF,EA6F4B6B,EAAK,GAA/B+Q,KACO5S,EA9FT,EA8FmC6B,EAAK,IAClChB,WAAce,IAO1B,OAAO,OAEJ,OWrGjBiR,CADoCxE,EAApBvJ,KAAoBuJ,EAAdyE,SAEf,MAKHC,GAAe,SAAAtU,GAAA,OACnBsG,EAAAxC,EAAAyC,cAACgO,GAAA,GAAYrS,GAAIlC,EAAMkC,GAAIrB,MAAOb,EAAMa,OACrC,SAAA2T,GAAA,IAAG/J,EAAH+J,EAAG/J,MAAOpE,EAAVmO,EAAUnO,KAAV,OAAAmO,EAAgBC,QAEb,kBACEhK,EACFiK,KAAKC,UAAUlK,EAAO,KAAM,GAC1BpE,EACFC,EAAAxC,EAAAyC,cAACwN,IAAO1N,KAAMA,EAAMgO,QAASrU,EAAMqU,UACjC,QAgDKO,yRA1Cb3L,OACE/G,GAAIwS,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UACrCC,MAAO,GACP+L,UAAW,QAYbkI,aAAe,SAAA9K,GACbA,EAAM+K,iBACNzM,EAAKc,UACHwD,WACE1K,GAAIoG,EAAKW,MAAM/G,GACfrB,MAAOyH,EAAKW,MAAMpI,YAKxBkJ,aAAe,SAAC7C,EAAK/G,GAAN,OAAgBmI,EAAKc,+HAAL4L,IAAiB9N,EAAM/G,4EAlBpD6G,KAAKoC,UACDwD,WACE1K,GAAI8E,KAAKhH,MAAMiV,QACfpU,MAAOmG,KAAKhH,MAAMkV,+CAkBxB,OACE5O,EAAAxC,EAAAyC,cAAA,WACGS,KAAKiC,MAAM2D,WACVtG,EAAAxC,EAAAyC,cAAC+N,IACCpS,GAAI8E,KAAKiC,MAAM2D,UAAU1K,GACzBrB,MAAOmG,KAAKiC,MAAM2D,UAAU/L,MAC5BwT,QAASrN,KAAKhH,MAAMqU,2NAnCN1M,EAAA,oxBCKXwN,yRArBbpL,aAAe,SAAAC,GACb1B,EAAKtI,MAAMsL,SAAShD,EAAKtI,MAAMmC,KAAM6H,EAAME,OAAO/J,oEAIlD,IAAMgH,EAAQH,KAAKhH,MAAMmH,OAASH,KAAKhH,MAAMmC,KAC7C,OACEmE,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,SAAO2E,QAASlE,KAAKhH,MAAMmC,MAAOgF,GAClCb,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,SACErE,GAAI8E,KAAKhH,MAAMmC,KACfhC,MAAO6G,KAAKhH,MAAMG,MAClBmL,SAAUtE,KAAK+C,iOArBPzD,EAAAxC,EAAM2H,oxBCuCX2J,yRAjCbnM,OACEtI,OAAQ2H,EAAKtI,MAAMqV,KAAK1U,OACxB2U,SAAUhN,EAAKtI,MAAMqV,KAAKC,YAG5BR,aAAe,SAAA9K,GACbA,EAAM+K,iBACNzM,EAAKtI,MAAMuV,SAASjN,EAAKW,UAG3Bc,aAAe,SAAC7C,EAAK/G,GAAN,OAAgBmI,EAAKc,+HAALoM,IAAiBtO,EAAM/G,iEAGpD,OACEmG,EAAAxC,EAAAyC,cAAA,QAAMgP,SAAUvO,KAAK8N,cACnBxO,EAAAxC,EAAAyC,cAAC4O,IACChT,KAAK,SACLgF,MAAM,2BACNhH,MAAO6G,KAAKiC,MAAMtI,OAClB2K,SAAUtE,KAAK+C,eAEjBzD,EAAAxC,EAAAyC,cAAC4O,IACChT,KAAK,WACLgF,MAAM,wBACNhH,MAAO6G,KAAKiC,MAAMqM,SAClBhK,SAAUtE,KAAK+C,eAEjBzD,EAAAxC,EAAAyC,cAAA,SAAOsB,KAAK,SAAS1H,MAAM,4NAhCbmG,EAAAxC,EAAM2H,gxBCK5B,IAGMgK,GAAa,SAAAzV,GAAA,OACfsG,EAAAxC,EAAAyC,cAACgO,GAAA,GAAgBe,SAAUtV,EAAMsV,SAAU3U,OAAQX,EAAMW,OAAQ+U,QAAS,iDACrE,SAAA9F,GAAA,IAAG+F,EAAH/F,EAAG+F,UAAoBC,EAAvBhG,EAAc6E,QAAqBoB,EAAnCjG,EAAmCiG,QAASC,EAA5ClG,EAA4CkG,SAAUrL,EAAtDmF,EAAsDnF,MAAtD,OACGnE,EAAAxC,EAAAyC,cAAA,WACKqP,EACGtP,EAAAxC,EAAAyC,cAAA,yBACAkE,EACAiK,KAAKC,UAAUlK,EAAO,KAAM,GAC5BqL,EACA9V,EAAM+V,SAAWzP,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAOC,QAAQ,SAASvC,QAAS+K,GAAlC,YAA+DvP,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAOC,QAAQ,UAAUvC,QAAS,WAAQ9K,EAAMgW,QAAO,EAAMC,QAA9D,WAEpE3P,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAOC,QAAQ,UAAUvC,QAAS6K,GAAnC,aAEfG,GAAYxP,EAAAxC,EAAAyC,cAACqO,IAAYM,WAAA,eAA4BD,QAASP,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UAAWyT,QAAQ,iBAClHyB,GAAYxP,EAAAxC,EAAAyC,cAACqO,IAAYM,WAAA,aAAA7T,OAjB5B,QAiB8D4T,QAASP,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UAAWyT,QAAQ,eACxHyB,GAAYxP,EAAAxC,EAAAyC,cAACqO,IAAYM,WAAA,QAAA7T,OAlB5B,QAkByD4T,QAASP,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UAAWyT,QAAQ,UACnHyB,GAAYxP,EAAAxC,EAAAyC,cAACqO,IAAYM,WAAA,QAAA7T,OAnB5B,QAmByD4T,QAASP,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UAAWyT,QAAQ,UACnHyB,GAAYxP,EAAAxC,EAAAyC,cAACqO,IAAYM,WAAA,aAAA7T,OApB5B,QAoB8D4T,QAASP,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UAAWyT,QAAQ,eACxHyB,GAAYxP,EAAAxC,EAAAyC,cAACqO,IAAYM,WAAA,WAAA7T,OArB5B,QAqB4D4T,QAASP,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UAAWyT,QAAQ,aACtHyB,GAAYxP,EAAAxC,EAAAyC,cAACqO,IAAYM,WAAA,wBAAA7T,OAtB5B,QAsByE4T,QAASP,KAAKG,MAAMH,KAAKC,UAAUhU,EAAOC,UAAWyT,QAAQ,8BAW9I4B,GAAa,WACf,IACIC,EADO9V,OAAOC,KAAK8V,MAAMC,kBACVC,YAAYlF,MAAMmF,kBAErC,Od2P0B,SAACJ,GAC3B,IAAIK,GAAU,EACd,GAAIhV,EAASoC,SACTlC,OAAOvB,OAAOqB,GAAUiV,OAAO,SAACC,EAASC,EAAQtT,GAC7C,IAAIlB,EAAKgU,EAAQS,QAIjB,OAHID,EAAOxU,KAAOA,IACdqU,GAAU,GAEP,OAEPA,GAAS,CACT,IAAIK,EAhTM,EAgT2BnV,OAAOiC,KAAKnC,GAAUoC,OAAU,EACrEpC,EAASqV,IACL1U,GAAMgU,EAAQS,QACdxU,KAAQ+T,EAAQW,UAChBzU,WAAcwM,OAAOC,aAAc,IAAKC,WAAW,GAAK8H,IAE5D,IAAIE,GACA3W,MAAOoB,EAASqV,GAAT,GACP/V,8BAAwBY,OAAOiC,KAAKnC,GAAUoC,OAAS,IAEvDoT,GACA5W,MAAOoB,EAASqV,GAAT,KACP/V,8BAAwBY,OAAOiC,KAAKnC,GAAUoC,OAAS,IAEvDqT,GACA7W,MAAOoB,EAASqV,GAAT,WACP/V,8BAAwBY,OAAOiC,KAAKnC,GAAUoC,OAAS,IAE3D5D,EAAgB+W,GAChB/W,EAAgBgX,GAChBhX,EAAgBiX,Ic3RxBC,CAAef,GACRA,GAGEgB,GAAb,SAAAhP,GAAA,SAAAiP,IAAA,IAAA/O,EAAAC,EAAAC,+FAAA8O,CAAApQ,KAAAmQ,GAAA,QAAA3O,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAyO,GAAA/O,GAAAD,EAAAC,EAAA+O,GAAArQ,MAAAoB,EAAAkP,GAAAH,IAAApO,KAAAC,MAAAZ,GAAApB,MAAA3F,OAAAqH,KAAAJ,EACIW,OACItI,OAAQA,EAAOuG,IACfoO,SACI3U,EAAO,aACXE,MAAO,IALfyH,EAsBIwM,aAAe,SAAA7L,GAAA,OAASX,EAAKc,SAASH,IAtB1CZ,cAAA,SAAA8O,OAAAjQ,IAAA,oBAAA/G,MAAA,WAQQ6G,KAAKoC,UACDvI,MAAOmG,KAAKhH,MAAMa,WAT9BqG,IAAA,qBAAA/G,MAAA,SAauB6M,EAAWgE,EAAWuG,GACrC,OAAIvK,EAAUnM,QAAUmG,KAAKhH,MAAMa,QAC/BmG,KAAKoC,UACDvI,MAAOmG,KAAKhH,MAAMa,SAEf,MAlBnBqG,IAAA,SAAA/G,MAAA,WAuBa,IAAA8M,EAAAjG,KACL,OACIV,EAAAxC,EAAAyC,cAAA,WACKS,KAAKiC,MAAMtI,OACR2F,EAAAxC,EAAAyC,cAACkP,IACG9U,OAAQqG,KAAKiC,MAAMtI,OACnB2U,SAAUtO,KAAKiC,MAAMqM,SACrBS,SAAU/O,KAAKhH,MAAM+V,SACrBC,OAAQ,SAACwB,EAAUtB,GAAcjJ,EAAKjN,MAAMyX,SAASD,EAAUtB,MAG/D5P,EAAAxC,EAAAyC,cAAC6O,IAAQG,SAAUvO,KAAK8N,aAAcO,KAAMrO,KAAKiC,gNAlCzEyO,CAAAP,EAAAjP,GAAAiP,EAAA,CAAoCxP,EAAA,mlCCpCpC,IAAMgQ,IACJC,WACE3R,MAAO,GACPJ,OAAQ,KAINgS,8LACJ5O,OACE6O,YAAa,OACbN,UAAU,mDAGH,IAAAvK,EAAAjG,KACD+Q,EAAQ,SAAC/X,GACb,OAAOsG,EAAAxC,EAAAyC,cAAC2Q,IAAenB,SAAU/V,EAAM+V,SAAU0B,SAAU,SAACD,EAAUzV,GAAWkL,EAAK7D,UAAWoO,SAAUA,EAAUM,YAAa/V,EAAK8U,UAAWmB,MAAOjW,EAAKkW,oBAEhK,OAA4B,IAAxBjR,KAAKiC,MAAMuO,SAEXlR,EAAAxC,EAAAyC,cAAA,OAAKqE,UAAU,OACbtE,EAAAxC,EAAAyC,cAAC2R,GAAD,MACA5R,EAAAxC,EAAAyC,cAACwR,GAAMhC,UAAU,MAGY,IAAxB/O,KAAKiC,MAAMuO,SAElBlR,EAAAxC,EAAAyC,cAAA,OAAKqE,UAAU,OACbtE,EAAAxC,EAAAyC,cAAC2R,GAAD,MACA5R,EAAAxC,EAAAyC,cAAC4R,IAAWH,MAAOhR,KAAKiC,MAAM+O,MAAOF,YAAa9Q,KAAKiC,MAAM6O,YAAaM,OAAQ,SAAChT,GAAQ6H,EAAK7D,UAAWoO,SAAUpS,OACrHkB,EAAAxC,EAAAyC,cAACwR,GAAMhC,UAAU,UALhB,iBAjBOpO,EAAA,WA6BZ0Q,+HACK,IAAAC,EAAAtR,KACP,OACEV,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACgS,EAAA,GAAMC,KAAK,cAAcC,OAAQ,SAACzY,GAAD,OAAWsG,EAAAxC,EAAAyC,cAAC+L,GAAD7Q,OAAAyD,UAAmBlF,GAAO4E,SAAU0T,EAAKtY,MAAM0Y,YAC5FpS,EAAAxC,EAAAyC,cAACgS,EAAA,GAAMC,KAAK,iBAAiBC,OAAQ,SAACzY,GAAD,OAAWsG,EAAAxC,EAAAyC,cAAC0B,EAADxG,OAAAyD,UAAmBlF,GAAO4E,SAAU0T,EAAKtY,MAAM0Y,YAC/FpS,EAAAxC,EAAAyC,cAACgS,EAAA,GAAMC,KAAK,eAAeC,OAAQ,SAACzY,GAAD,OAAWsG,EAAAxC,EAAAyC,cAACkH,GAADhM,OAAAyD,UAAgBlF,GAAO4E,SAAU0T,EAAKtY,MAAM0Y,YAC1FpS,EAAAxC,EAAAyC,cAACgS,EAAA,GAAMC,KAAK,eAAeC,OAAQ,SAACzY,GAAD,OAAWsG,EAAAxC,EAAAyC,cAACkL,GAADhQ,OAAAyD,UAAelF,GAAO4E,SAAU0T,EAAKtY,MAAM0Y,MAAOxG,UfzC7FzQ,OAAOvB,OAAOqB,GAAUU,IAAI,SAAAF,GAAA,OAAQA,EAAKI,OeyC2EyE,aAAcvE,wBAPvHsF,EAAA,WAahBuQ,GAAkB,WACtB,OACE5R,EAAAxC,EAAAyC,cAAA,UAAQqE,UAAU,cAChBtE,EAAAxC,EAAAyC,cAAA,OAAKoS,IAAKC,EAAA9U,EAAM8G,UAAU,WAAWiO,IAAI,SACzCvS,EAAAxC,EAAAyC,cAAA,MAAIqE,UAAU,aAAd,oBAKAuN,GAAa,SAACnY,GAClB,OACEsG,EAAAxC,EAAAyC,cAAA,OAAKqE,UAAU,iBACbtE,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAO0L,OAAA,EAAMC,kBAAA,GACZzS,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAO4L,OAAR,KACE1S,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAO6L,MAAR,KACE3S,EAAAxC,EAAAyC,cAAC2S,EAAA,GAAKC,GAAG,eAAT,mBAEF7S,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAOgM,OAAR,OAEF9S,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAOiM,SAAR,KACE/S,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAIkM,UAAA,GACHhT,EAAAxC,EAAAyC,cAACgT,GAAA,eAAcJ,GAAG,kBAChB7S,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAD,wBAEF9G,EAAAxC,EAAAyC,cAACgT,GAAA,eAAcJ,GAAG,gBAChB7S,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAD,sBAEF9G,EAAAxC,EAAAyC,cAACgT,GAAA,eAAcJ,GAAG,gBAChB7S,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAD,uBAGJ9G,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAOiM,SAAR,KACE/S,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAOoM,MAAKC,WAAA,GAAb,iBACgBnT,EAAAxC,EAAAyC,cAAC6G,EAAA,EAAO8L,MAAKQ,KAAK,KAAK1Z,EAAM8X,aAC3CxR,EAAAxC,EAAAyC,cAAA,SAAOC,MAAOmR,GAAOC,WACnBtR,EAAAxC,EAAAyC,cAAC6G,EAAA,GAAMwK,WAAA,EAAU+B,QAAA,EAAOC,YAAA,EAAWjB,IAAK3Y,EAAMgY,aAMxD1R,EAAAxC,EAAAyC,cAAC8R,IAAQK,MAAO1Y,EAAM8X,gBAKb+B,GAAA,GClGTC,GAAcC,QACW,cAA7B3Z,OAAO4Z,SAASC,UAEe,UAA7B7Z,OAAO4Z,SAASC,UAEhB7Z,OAAO4Z,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTpZ,KAAK,SAAAwZ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzR,QACfoR,UAAUC,cAAcO,WAK1B1Z,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB0Z,MAAM,SAAArQ,GACLtJ,QAAQsJ,MAAM,4CAA6CA,mBCvEjE5K,EAAQ,KAERkb,EAAAjX,EAAS2U,OACLnS,EAAAxC,EAAAyC,cAACyU,GAAA,GAAcC,SAAU,mBACrB3U,EAAAxC,EAAAyC,cAACsT,GAAD,OAEFqB,SAASC,eAAe,SDMf,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAI,kBAAwBhb,OAAO4Z,UAC3CqB,SAAWjb,OAAO4Z,SAASqB,OAIvC,OAGFjb,OAAOkb,iBAAiB,OAAQ,WAC9B,IAAMlB,YAAW,kBAAX,sBAEFN,IAiDV,SAAiCM,GAE/BmB,MAAMnB,GACHpZ,KAAK,SAAAC,GAGkB,MAApBA,EAASua,SACuD,IAAhEva,EAASwa,QAAQtK,IAAI,gBAAgB1C,QAAQ,cAG7C4L,UAAUC,cAAcoB,MAAM1a,KAAK,SAAAwZ,GACjCA,EAAamB,aAAa3a,KAAK,WAC7BZ,OAAO4Z,SAAS4B,aAKpBzB,GAAgBC,KAGnBU,MAAM,WACL3Z,QAAQC,IACN,mEArEAya,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAM1a,KAAK,WACjCG,QAAQC,IACN,+GAMJ+Y,GAAgBC,MCjCxBG","file":"static/js/main.40fad352.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import apiKey from './apiKey.json';\n\nexport const WriteSingleCell = (props) => {\n    let values = [\n        [\n            props.value\n        ],\n    ];\n    let body = {\n        values: values\n    };\n    window.gapi.client.sheets.spreadsheets.values.update({\n        spreadsheetId: apiKey.SheetID,\n        range: props.range,\n        valueInputOption: \"USER_ENTERED\",\n        resource: body\n    }).then((response) => {\n        let result = response.result;\n        console.log(`${result.updatedCells} cells updated.`);\n    });\n}","import moment from 'moment';\nimport { WriteSingleCell } from './SheetWriter';\nimport _ from 'lodash';\n\nconst sheetUserJump = 4;\nexport const userData = {\n};\n\nexport const apiKey = {\n        \"key\": process.env.KEY,\n        \"SheetID\": process.env.SHEET_ID,\n        \"Client-ID\": process.env.CLIENT_ID\n    }\n\nexport let getNames = () => {\n    return Object.values(userData).map(user => user.name);\n}\n\nexport let getCell = (user) => {\n    let scope;\n    Object.values(userData).map(id => {\n        if (id.name === user) {\n            scope = id.sheetScope;\n        } return null;\n    })\n    return scope;\n}\nexport let workoutName = [\"Squat\", \"Deadlift\", \"Press\", \"BenchPress\", \"Bent-Over Barbell Row\", \"PowerClean\"];\nlet dateTable = { \"Squat\": [], \"Deadlift\": [], \"Press\": [], \"BenchPress\": [], \"Bent-Over Barbell Row\": [], \"PowerClean\": [], };\nlet dataSheets = {}\n\n\nexport const getDateTable = (workoutName) => {\n    return dateTable[workoutName];\n}\nexport const getCellIndex = (workout, date) => {\n    let index;\n    dateTable[workout].filter((cell, i) => {\n        if (cell === date) {\n            index = i + 3;\n        } return null\n    });\n    return index;\n}\nexport const fillOfflineSheet = (dataSet, tableName) => {\n    if (tableName !== \"UserRegister\") {\n        let currentDate = \"\";\n        dataSet.slice(2).map((row, i) => {\n            row.map((cell, j) => {\n                if (cell !== \"\") {\n                    if (j === 0) {\n                        if (!Object.keys(dataSheets).includes(cell)) {\n                            let workoutObject = {};\n                            for (let i = 0; i < workoutName.length; i++) {\n                                workoutObject = Object.assign({ [workoutName[i]]: {} }, workoutObject);\n                            }\n                            dataSheets[cell] = { ...workoutObject };\n                        }\n                        currentDate = cell;\n                    } else if ((j - 2) % 4 === 0) {\n                        if (userData.hasOwnProperty(j)) {\n                            const weight = parseFloat(cell.replace(/[^\\d,.]/g, \"\").replace(/,/g, \".\"));\n                            dataSheets[currentDate][tableName] = Object.assign({ [userData[j].name]: { weight } }, dataSheets[currentDate][tableName]);\n                        }\n                    }\n                    if (j > 4 && ((j - 1) % 4 === 0)) {\n                        if (userData.hasOwnProperty(j - 3)) {\n                            dataSheets[currentDate][tableName][userData[j - 3].name] = {\n                                ...dataSheets[currentDate][tableName][userData[j - 3].name],\n                                \"set\": cell,\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n            );\n            return null;\n        })\n        fillWorkoutDates(tableName);\n    } else if (tableName === 'UserRegister') {\n        dataSet.slice(1).map((row, i) => {\n            row.map((cell, j) => {\n                switch (j) {\n                    case 0:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"id\": cell,\n                        };\n                        break;\n                    case 1:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"name\": cell,\n                        };\n                        break;\n                    case 2:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"sheetScope\": cell,\n                        };\n                        break;\n\n                    default:\n                        break;\n                }\n                return null;\n            })\n            return null;\n        })\n    }\n    return null;\n}\n\nexport function getWeightsFor(workout, username) {\n    if (workout !== \"none\" && username !== \"none\") {\n        var sortable = [];\n        _.forEach(dataSheets, (value, key) => {\n            sortable.push([key, dataSheets[key]]);\n        })\n        sortable.sort(function (a, b) {\n            let first = moment(a[0], 'DD.MM.YY');\n            let second = moment(b[0], 'DD.MM.YY');\n            let diff = moment.duration(first.diff(second));\n            return diff.asDays();\n        });\n        let lastElem = sortable.pop();\n        while (!lastElem[1][workout].hasOwnProperty(username) && sortable.length !== 0) {\n            lastElem = sortable.pop();\n        }\n        if (lastElem[1][workout].hasOwnProperty(username)) {\n            let test = `Weight: ${lastElem[1][workout][username].weight}, Set: ${lastElem[1][workout][username].set}`;\n            return test;\n        }\n    }\n    return null;\n}\n\nconst fillWorkoutDates = (workoutName) => {\n    let today = moment();\n    dateTable[workoutName] = [];\n    Object.values(dataSheets).map((tupel, i) => {\n        if (Object.keys(tupel[workoutName]).length > 0) {\n            dateTable[workoutName].push(Object.keys(dataSheets)[i]);\n            return null;\n        }\n        return null;\n    })\n    dateTable[workoutName].sort(function (a, b) {\n        let first = moment(a, 'DD.MM.YY');\n        let second = moment(b, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    let lastEntry = moment(dateTable[workoutName][dateTable[workoutName].length - 1], 'DD.MM.YY');\n    let differ = moment.duration(today.diff(lastEntry)).asDays();\n    if (differ >= 1) {  // >= 1 because hours are irrelevant \n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    } else {\n        dateTable[workoutName].pop();\n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    }\n}\n\nexport const getStatistics = (username) => {\n    let statistic;\n    _.mapValues(dateTable, (value, name) => {\n        statistic = {\n            ...statistic,\n            [name]: 0,\n        };\n        return _.forEach(value, (date) => {\n            date = date.replace(/[^\\d.]/g, \"\");\n            if(!dataSheets.hasOwnProperty(date)){\n                return 0;\n            }else if (dataSheets[date][name].hasOwnProperty(username)) {\n                let set = dataSheets[date][name][username].set;\n                if (typeof (set) !== 'undefined') {\n                    let index = 0;\n                    let rep = [''];\n                    for (var v of set) {\n                        if (v === '-') {\n                            index++;\n                            rep[index] = '';\n                        } else {\n                            rep[index] = rep[index].concat(v);\n                        }\n                    }\n                    for (let j = 0; j < rep.length; j++) {\n                        statistic[name] += ((dataSheets[date][name][username].weight * 2) + 20) * rep[j];\n                    }\n                }\n            }\n            return value;\n        });\n\n    })\n    return statistic;\n}\n\nexport const fillData = (username) => {\n    data = [];\n    Object.keys(dataSheets).map(date => {\n        data.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                Object.values(dataSheets[data[i].time][entry][username]).map(weight => {\n                    data[i] = Object.assign({ [entry]: weight }, data[i]);\n                    return null;\n                });\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in data) {\n        sortable.push([date, data[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let test = moment.duration(first.diff(second));\n        let testDays = test.asDays();\n        return testDays;\n    });\n    data = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => data[i] = Object.assign(cell, data[i])) });\n    return null;\n}\n\nexport const fillVersusData = (props) => {\n    versusData = [];\n    Object.keys(dataSheets).map(date => {\n        versusData.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                if (props.username !== props.versusname) {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `Your ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                    Object.values(dataSheets[versusData[i].time][entry][props.versusname]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `${props.versusname}'s ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                } else {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        versusData[i] = Object.assign({ [entry]: weight }, versusData[i]);\n                        return null;\n                    });\n                }\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in versusData) {\n        sortable.push([date, versusData[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    versusData = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => versusData[i] = Object.assign(cell, versusData[i])) });\n    return versusData;\n}\n\n\nexport const profileChecker = (profile) => {\n    let newUser = true;\n    if (userData.length) {\n        Object.values(userData).reduce((prevVal, curVal, i) => {\n            let id = profile.getId();\n            if (curVal.id === id) {\n                newUser = false;\n            }\n            return null;\n        })\n        if (newUser) {\n            let newUserNumber = (sheetUserJump * Object.keys(userData).length) + 2;\n            userData[newUserNumber] = {\n                \"id\": profile.getId(),\n                \"name\": profile.getName(),\n                \"sheetScope\": String.fromCharCode((\"A\").charCodeAt(0) + newUserNumber),\n            };\n            let writeID = {\n                value: userData[newUserNumber][\"id\"],\n                range: `UserRegister!A${Object.keys(userData).length + 1}`,\n            }\n            let writeName = {\n                value: userData[newUserNumber][\"name\"],\n                range: `UserRegister!B${Object.keys(userData).length + 1}`,\n            }\n            let writeScope = {\n                value: userData[newUserNumber][\"sheetScope\"],\n                range: `UserRegister!C${Object.keys(userData).length + 1}`,\n            }\n            WriteSingleCell(writeID);\n            WriteSingleCell(writeName);\n            WriteSingleCell(writeScope);\n        }\n    }\n}\n\n\nexport let versusData = [];\nexport let data = [];\n\nexport let workoutData = {\n}","import React, { Component } from 'react';\nimport { Brush, BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, LineChart } from 'recharts/lib';\n\nconst styles = {\n  outer: {\n    paddingTop: '10%',\n    paddingBottom: '10%',\n    position: 'relative',\n    height: 400\n  },\n  inner: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%'\n  }\n}\nconst colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\nconst colorChanger = (i) => {\n  return colors[i % colors.length];\n}\n\n\nexport const ChartComponent = (props) => {\n  let data = props.data;\n  return (\n    <div style={styles.outer} >\n      <div style={styles.inner}>\n        <ResponsiveContainer>\n          {props.barGraph ? <BarGraph workoutNames={props.workoutNames} data={data} /> : props.otherGraph ? <LineGraph workoutNames={props.workoutNames} data={data} /> : <p>Please define a graph type</p>}\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n\nclass BarGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Bar key={`Option_${option}`} label={{ position: 'top', fontSize: 11 }} dataKey={option} fill={colorChanger(i)} />;\n    });\n    return (\n      <ResponsiveContainer>\n        <BarChart data={this.props.data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\n\nclass LineGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Line key={`Option_${option}`} connectNulls={true} label={{ position: 'top', fontSize: 11 }} type=\"monotone\" dataKey={option} stroke={colorChanger(i)} />\n    });\n    return (\n      <ResponsiveContainer>\n        <LineChart data={this.props.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { data, fillData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\n\nexport class PersonalSpace extends Component {\n  state = {\n    dataSet: data\n  }\n  componentDidMount(){\n    fillData(this.props.username);\n    this.setState({\n      dataSet: data\n    })\n  }\n  \n  render() {\n    const { dataSet} = this.state;\n    const FilterData=()=>{\n      return dataSet.filter(row=>{\n        if(Object.keys(row).length >1){\n          return row;\n        }return null;\n      }).map(row=>row);\n    }\n    return (\n      <div>\n        <ChartComponent workoutNames={workoutName} otherGraph={true} data={FilterData()} />\n      </div>\n    );\n  }\n}","// import React, { Component } from 'react';\n// import { DropdownButton, MenuItem } from 'react-bootstrap';\n\n// export class DropDown extends Component {\n//   state = {\n//     currentSelection: this.props.title,\n//   }\n//   update = (e) => {\n//     this.props.onUpdate(e);\n//     this.setState({currentSelection: e});\n//   }\n//   render() {\n//     let options;\n//       try {\n//         options = this.props.options.map((name) => {\n//           return <MenuItem key={`keyItem_${name}`} eventKey={name} >{name}</MenuItem>;\n//         });\n//       } catch (error) {\n//         console.log(error);\n//         options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n//       }\n//     return (\n//       <DropdownButton\n//         title={this.state.currentSelection}\n//         bsStyle=\"default\"\n//         key={`dropdown_${this.props.title}`}\n//         id={`dropdown_workout`}\n//         onSelect={this.update}\n//       >\n//         {options}\n//       </DropdownButton>\n//     )\n//   }\n// }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\nexport class DropDown extends React.Component {\n  state = {\n    age: '',\n    open: false,\n  };\n\n  handleChange = event => {\n    this.props.onUpdate(event);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n    let options;\n    try {\n      options = this.props.options.map((name) => {\n        return <MenuItem key={`keyItem_${name}`} eventKey={name} >{name}</MenuItem>;\n      });\n    } catch (error) {\n      console.log(error);\n      options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n    }\n\n    return (\n      <form autoComplete=\"off\">\n        <Button className={classes.button} onClick={this.handleOpen}>\n          Open the select\n        </Button>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"demo-controlled-open-select\">Age</InputLabel>\n          <Select\n            open={this.state.open}\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n            value={this.state.age}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'age',\n              id: 'demo-controlled-open-select',\n            }}\n          >\n            {options}\n          </Select>\n        </FormControl>\n      </form>\n    );\n  }\n}\n\nDropDown.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DropDown);\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport class InputComponent extends Component {\n  state = {\n    name: this.props.selName,\n    workout: \"WorkoutName\",\n    set: \" \",\n    weight: 0,\n    date: this.props.selDate,\n  }\n  handleButton() {\n    let { name, workout } = this.state;\n    this.setState({ weight: this.refs.maxWeight.value });\n    this.props.submitted({\n      name: name,\n      workout: workout,\n      weight: this.state.weight,\n      set: this.state.set,\n      date: this.state.date\n    });\n  }\n  handleButtonAddSet() {\n    if (parseFloat(this.refs.maxWeight.value) !== this.state.weight) {\n      this.setState({\n        weight: parseFloat(this.refs.maxWeight.value),\n        set: `${this.refs.reps.value}`\n      })\n    }else {\n      this.setState({\n        set: `${this.state.set}-${this.refs.reps.value}`\n      })\n    }\n  }\n  componentDidMount() {\n    this.setState({\n      name: this.props.selName,\n      workout: this.props.selWorkout,\n      date: this.props.selDate,\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.selName !== prevProps.selName) {\n      this.setState({\n        name: this.props.selName\n      });\n    }\n    if (this.props.selWorkout !== prevProps.selWorkout) {\n      this.setState({\n        workout: this.props.selWorkout\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <input ref=\"maxWeight\" type=\"number\" placeholder=\"Kg\" />\n          <input ref=\"reps\" type=\"number\" placeholder=\"Amount\" />\n          <Button bsStyle=\"primary\" onClick={(e) => { this.handleButtonAddSet(); }}>Add Set</Button>\n          <p>{`Your current Weight: ${this.state.weight} Set: ${this.state.set}`}</p>\n        </div>\n        <Button bsStyle=\"primary\" onClick={(e) => { this.handleButton(); }}>Submit</Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { DropDown } from './Selector';\nimport { workoutName, getCell, getDateTable, getCellIndex, getWeightsFor } from './Store';\nimport { InputComponent } from './Input';\nimport { WriteSingleCell } from './SheetWriter'\n\nexport class WorkoutTab extends Component {\n    state = {\n        username: \"none\",\n        workout: \"none\",\n        date: ''\n    }\n    componentDidMount() {\n        this.setState({\n            username: this.props.username\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.username !== prevProps.username) {\n            this.setState({\n                username: this.props.username\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <DropDown options={workoutName} title='workout' onUpdate={(e) => { this.setState({ workout: e }); }} />\n                    <DropDown options={getDateTable(this.state.workout)} title='date' onUpdate={(e) => { this.setState({ date: e }); }} />\n                </div>\n                <div>\n                    <h4>Last completed weights: </h4>\n                    {getWeightsFor(this.state.workout, this.state.username)}\n                </div>\n                <h4>Enter your workout</h4>\n                <InputComponent selName={this.state.username} selDate={this.state.date} selWorkout={this.state.workout} submitted={(props) => { props.date = this.state.date; bundleWriter(props) }} />\n            </div>\n        );\n    }\n}\n\nconst bundleWriter = (props) => {\n    let date = props.date;\n    date = date.substr(0, (date + \" \").indexOf(\" \"));\n    let writeDate = {\n        value: date,\n        range: `${props.workout}!A${getCellIndex(props.workout, props.date)}`,\n    }\n    let writeWeight = {\n        value: props.weight,\n        range: `${props.workout}!${getCell(props.name)}${getCellIndex(props.workout, props.date)}`,\n    }\n    let writeSet = {\n        value: props.set,\n        range: `${props.workout}!${String.fromCharCode(getCell(props.name).charCodeAt(0) + 3)}${getCellIndex(props.workout, props.date)}`,\n    }\n    WriteSingleCell(writeDate);\n    WriteSingleCell(writeWeight);\n    WriteSingleCell(writeSet);\n}","import React, { Component } from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nconst sizeIcon = 4;\nconst pad = 10;\n\nexport class UserRadio extends Component {\n    onChange = (e) => {\n        this.props.choiceEvent(e);\n    }\n    render() {\n        let RadioOptions = this.props.options.map((option) => {\n            return <RadioButton iconSize={sizeIcon} iconInnerSize={sizeIcon} padding={pad} key={`Option_${option}`} value={option}>{option}</RadioButton>;\n        });\n        return (\n            <RadioGroup onChange={this.onChange} >\n                {RadioOptions.map(name => name)}\n            </RadioGroup>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Checkbox = ({ type = 'checkbox', name, checked = false, onChange }) =>(\n    <input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nCheckbox.prototype = {\n    type: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n}","import React, { Component } from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport class CheckBoxContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state !== prevState) {\n            let returnArray = [];\n            this.state.checkedItems.forEach((value, key) => {\n                if (value === true) {\n                    if (returnArray.length === 0) {\n                        returnArray[0] = key;\n                    } else {\n                        returnArray.push(key);\n                    }\n\n                }\n            })\n            this.props.choiceEvent(returnArray);\n        }\n    }\n\n    render() {\n        const CheckBoxOptions = this.props.options.map(option => {\n            return <label key={`checkBoxOption_${option}`}>\n                {option}\n                <Checkbox name={option} checked={this.state.checkedItems.get(option)} onChange={this.handleChange} />\n            </label>\n        })\n        return (\n            <React.Fragment>\n                {CheckBoxOptions.map(option => option)}\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { versusData, fillVersusData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\nimport { UserRadio } from './UserRadio';\nimport { CheckBoxContainer } from './CheckBoxContainer';\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\n\nexport class VersusTab extends Component {\n    state = {\n        props: {\n            username: this.props.username,\n            versusname: this.props.username,\n            versusworkout: [],\n        },\n        versusData: versusData,\n        otherGraph: false,\n        barGraph: true,\n    }\n    componentDidMount() {\n\n        this.setState({\n            props: {\n                username: this.props.username,\n                versusname: this.props.username,\n                versusworkout: [],\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleNameChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusname: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleWorkoutChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusworkout: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleGraphChoice(e) {\n        switch (e) {\n            case 'Bar Graph':\n            this.setState({\n                barGraph: true,\n                otherGraph: false,\n            });\n                break;\n            case 'Other Graph':\n            this.setState({\n                barGraph: false,\n                otherGraph: true,\n            });\n                break;\n        \n            default:\n                break;\n        }\n        this.setState({\n            graphStyle: e\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.props !== prevState.props) {\n            this.setState({\n                versusData: fillVersusData(this.state.props),\n            });\n        }\n    }\n    render() {\n        const filterNameOptions = () => {\n            return this.props.userNames.filter(name => { if (name !== this.props.username) { return true; } return false; }).map(name => name);\n        }\n        const FilterData = () => {\n            return this.state.versusData.filter(row => {\n                if (Object.keys(row).length > 1) {\n                    return row;\n                } return null;\n            }).map(row => {\n                return row;\n            });\n        }\n        const GetOptionNames = () => {\n            let returnVal = [];\n            workoutName.filter(name => {\n                if ((this.state.props.versusworkout).includes(name)) {\n                    return true;\n                } return false;\n            }).map(option => {\n                returnVal.push(`Your ${option}`);\n                returnVal.push(`${this.state.props.versusname}'s ${option}`);\n                return null;\n            });\n            return returnVal;\n        }\n        return (\n            <div>\n                <div>\n                    <UserRadio choiceEvent={(e) => { this.handleNameChoice(e) }} options={filterNameOptions()} />\n                </div>\n                <ColoredLine color=\"Grey\" />\n                <div>\n                    <CheckBoxContainer choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames} />\n                </div>\n                <ChartComponent workoutNames={GetOptionNames()} otherGraph={this.state.otherGraph} barGraph={this.state.barGraph} data={FilterData()} />\n                <UserRadio choiceEvent={(e) => { this.handleGraphChoice(e) }} options={['Bar Graph', 'Other Graph']} />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport {getStatistics} from './Store';\nimport _ from 'lodash';\n\nexport class StatisticPage extends Component{\n    render(){\n        const getData = () =>{\n            let test = \"\";\n            test = _.map(getStatistics(this.props.username), (val, key)=> {\n                return <p key={`stat_${key}`}>{`${key}: ${val}`}</p>;\n            });\n            return test;\n        }\n        return (\n            <div>\n                <h2>Statistics</h2>\n            {getData()}\n            </div>\n        );\n    }\n}","\nimport React, {Component} from 'react';\nimport { GoogleSheet } from '@lourd/react-google-sheet';\nimport apiKey from './apiKey.json';\nimport { fillOfflineSheet} from './Store';\n\nconst MyData = ({ data, content }) => {\n  fillOfflineSheet(data, content);\n  return null;\n}\n\n// Wraps the GoogleSheet component to provide some basic components\n// for display loading & error states\nconst SimpleGSheet = props => (\n  <GoogleSheet id={props.id} range={props.range}>\n    {({ error, data, loading }) =>\n      loading ? (\n        'Getting data...'\n      ) : error ? (\n        JSON.stringify(error, null, 2)\n      ) : data ? (\n        <MyData data={data} content={props.content}/>\n      ) : null\n    }\n  </GoogleSheet>\n)\n\nclass DataFetcher extends Component {\n  state = {\n    id: JSON.parse(JSON.stringify(apiKey.SheetID)),\n    range: '',\n    submitted: null,\n  }\n\n  componentDidMount(){\n    this.setState({\n        submitted: {\n          id: this.props.sheetId,\n          range: this.props.sheetRange\n        },\n      })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      submitted: {\n        id: this.state.id,\n        range: this.state.range,\n      },\n    })\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <div>\n        {this.state.submitted && (\n          <SimpleGSheet\n            id={this.state.submitted.id}\n            range={this.state.submitted.range}\n            content={this.props.content}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DataFetcher","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Field extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.any,\n    label: PropTypes.string\n  };\n\n  handleChange = event => {\n    this.props.onChange(this.props.name, event.target.value);\n  };\n\n  render() {\n    const label = this.props.label || this.props.name;\n    return (\n      <div>\n        <label htmlFor={this.props.name}>{label}</label>\n        <div>\n          <input\n            id={this.props.name}\n            value={this.props.value}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Field;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Field from './Field'\n\nclass ApiForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  state = {\n    apiKey: this.props.init.apiKey,\n    clientId: this.props.init.clientId,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.onSubmit(this.state)\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Field\n          name=\"apiKey\"\n          label=\"Google Developer API Key\"\n          value={this.state.apiKey}\n          onChange={this.handleChange}\n        />\n        <Field\n          name=\"clientId\"\n          label=\"Application Client ID\"\n          value={this.state.clientId}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default ApiForm","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleSheetsApi } from '@lourd/react-google-sheet';\nimport DataFetcher from './DynamicSpreadsheet';\nimport ApiForm from './ApiForm';\nimport apiKey from './apiKey.json';\nimport { profileChecker } from './Store';\nimport { Button } from 'react-bootstrap';\n\nconst range = \"!A:Q\";\n\n\nconst SheetsDemo = props => (\n    <GoogleSheetsApi clientId={props.clientId} apiKey={props.apiKey} scopes={[\"https://www.googleapis.com/auth/spreadsheets\"]}>\n        {({ authorize, loading: apiLoading, signout, signedIn, error }) => (\n            <div>\n                {apiLoading ? (\n                    <div>Loading...</div>\n                ) : error ? (\n                    JSON.stringify(error, null, 2)\n                ) : signedIn ? (\n                    props.loggedIn ? <Button bsStyle=\"danger\" onClick={signout}>Sign Out</Button> : <Button bsStyle=\"success\" onClick={() => { props.signin(true, getProfile()) }}>Sign In</Button>\n                ) : (\n                                <Button bsStyle=\"primary\" onClick={authorize}>Authorize</Button>\n                            )}\n                {signedIn && <DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" />}\n                {signedIn && <DataFetcher sheetRange={`PowerClean${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"PowerClean\" />}\n                {signedIn && <DataFetcher sheetRange={`Squat${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Squat\" />}\n                {signedIn && <DataFetcher sheetRange={`Press${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Press\" />}\n                {signedIn && <DataFetcher sheetRange={`BenchPress${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"BenchPress\" />}\n                {signedIn && <DataFetcher sheetRange={`Deadlift${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Deadlift\" />}\n                {signedIn && <DataFetcher sheetRange={`Bent-Over Barbell Row${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Bent-Over Barbell Row\" />}\n            </div>\n        )}\n    </GoogleSheetsApi >\n)\nSheetsDemo.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    apiKey: PropTypes.string.isRequired,\n    loggedIn: PropTypes.bool.isRequired,\n}\n\nconst getProfile = () => {\n    let auth = window.gapi.auth2.getAuthInstance();\n    let profile = auth.currentUser.get().getBasicProfile();\n    profileChecker(profile);\n    return profile;\n}\n\nexport class SheetExtractor extends Component {\n    state = {\n        apiKey: apiKey.key,\n        clientId:\n            apiKey['Client-ID'],\n        range: \"\",\n    }\n    componentDidMount() {\n        this.setState({\n            range: this.props.range\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.range !== this.props.range) {\n            this.setState({\n                range: this.props.range\n            })\n            return true;\n        } return false;\n    }\n\n    handleSubmit = state => this.setState(state)\n    render() {\n        return (\n            <div>\n                {this.state.apiKey ? (\n                    <SheetsDemo\n                        apiKey={this.state.apiKey}\n                        clientId={this.state.clientId}\n                        loggedIn={this.props.loggedIn}\n                        signin={(accepted, profile) => { this.props.signedin(accepted, profile) }}\n                    />\n                ) : (\n                        <ApiForm onSubmit={this.handleSubmit} init={this.state} />\n                    )}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Navbar, NavItem, Nav, Image } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport { PersonalSpace } from './PersonalSpace';\nimport { WorkoutTab } from './YourWorkout';\nimport { VersusTab } from './VersusSpace';\nimport { StatisticPage } from './Statistics';\nimport { getNames, workoutName } from './Store';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { SheetExtractor } from './SheetAccess';\n\nconst styles = {\n  thumbnail: {\n    width: 50,\n    height: 50\n  },\n}\n\nclass App extends Component {\n  state = {\n    credentials: \"User\",\n    accepted: false,\n  }\n\n  render() {\n    const Sheet = (props) => {\n      return <SheetExtractor loggedIn={props.loggedIn} signedin={(accepted, user) => { this.setState({ accepted: accepted, credentials: user.getName(), image: user.getImageUrl() }); }} />\n    }\n    if (this.state.accepted === false) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Sheet loggedIn={false} />\n        </div>\n      );\n    } else if (this.state.accepted === true) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Navigation image={this.state.image} credentials={this.state.credentials} logOut={(e) => { this.setState({ accepted: e }); }} />\n          <Sheet loggedIn={true} />\n        </div>\n      );\n    }\n  }\n}\n\nclass Routing extends Component {\n  render() {\n    return (\n      <div>\n        <Route path=\"/Statistics\" render={(props) => <StatisticPage {...props} username={this.props.creds} />} />\n        <Route path=\"/PersonalSpace\" render={(props) => <PersonalSpace {...props} username={this.props.creds} />} />\n        <Route path=\"/YourWorkout\" render={(props) => <WorkoutTab {...props} username={this.props.creds} />} />\n        <Route path=\"/VersusSpace\" render={(props) => <VersusTab {...props} username={this.props.creds} userNames={getNames()} workoutNames={workoutName} />} />\n      </div>\n    );\n  }\n}\n\nconst HeaderComponent = () => {\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1 className=\"App-title\">Fitness Applet</h1>\n    </header>\n  );\n}\n\nconst Navigation = (props) => {\n  return (\n    <div className=\"App container\">\n      <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/Statistics\">Fitness-Applet</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullLeft>\n            <LinkContainer to=\"/PersonalSpace\">\n              <NavItem>Personal-Space</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/YourWorkout\">\n              <NavItem>Your Workout</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/VersusSpace\">\n              <NavItem>Versus-Space</NavItem>\n            </LinkContainer>\n          </Nav>\n          <Navbar.Collapse>\n            <Navbar.Text pullRight>\n              Signed in as: <Navbar.Link href=\"#\">{props.credentials}</Navbar.Link>\n              <label style={styles.thumbnail}>\n                <Image thumbnail circle responsive src={props.image} />\n              </label>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar.Collapse>\n      </Navbar>\n      <Routing creds={props.credentials} />\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter} from 'react-router-dom';\nrequire('babel-polyfill');\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
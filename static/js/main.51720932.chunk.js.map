{"version":3,"sources":["logo.svg","SheetWriter.js","Store.js","Graphs.js","PersonalSpace.js","Selector.js","Input.js","YourWorkout.js","UserRadio.js","Checkbox.js","CheckBoxContainer.js","VersusSpace.js","Statistics.js","DynamicSpreadsheet.js","Field.js","ApiForm.js","SheetAccess.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SheetWriter_WriteSingleCell","props","body","values","value","window","gapi","client","sheets","spreadsheets","update","spreadsheetId","apiKey","SheetID","range","valueInputOption","resource","then","response","result","console","log","concat","updatedCells","userData","getCell","Object","NODE_ENV","PUBLIC_URL","KEY","SHEET_ID","CLIENT_ID","user","scope","map","id","name","sheetScope","Store_workoutName","dateTable","Squat","Deadlift","Press","BenchPress","Bent-Over Barbell Row","PowerClean","dataSheets","getWeightsFor","workout","username","sortable","lodash_default","a","forEach","key","push","sort","b","first","moment_default","second","duration","diff","asDays","lastElem","pop","hasOwnProperty","length","test","weight","set","lastWeight","lastSet","Store_fillWorkoutDates","workoutName","today","tupel","i","keys","lastEntry","format","Store_fillVersusData","versusData","date","time","entry","versusname","versusworkout","includes","entryName","assign","_defineProperty","e","slice","cell","Store_data","styles","outer","paddingTop","paddingBottom","position","height","inner","top","left","width","colors","colorChanger","Graphs_ChartComponent","data","react_default","createElement","style","lib","barGraph","Graphs_BarGraph","workoutNames","otherGraph","Graphs_LineGraph","graphOption","this","option","label","fontSize","dataKey","fill","strokeDasharray","wrapperStyle","bottom","element","react","connectNulls","type","stroke","margin","right","PersonalSpace_PersonalSpace","_Component","PersonalSpace","_getPrototypeOf2","_temp","_this","PersonalSpace_classCallCheck","_len","arguments","args","Array","_key","PersonalSpace_possibleConstructorReturn","PersonalSpace_getPrototypeOf","call","apply","state","dataSet","Store_fillData","setState","filter","row","PersonalSpace_inherits","Selector_DropDown","currentSelection","title","open","handleChange","event","onUpdate","target","handleClose","handleOpen","options","_this$props","classes","MenuItem_default","error","eventKey","FormControl_default","className","formControl","InputLabel_default","htmlFor","Select_default","autoWidth","onClose","onOpen","onChange","inputProps","Component","Selector","core_styles","theme","button","display","marginTop","spacing","unit","minWidth","Input_InputComponent","InputComponent","Input_classCallCheck","Input_possibleConstructorReturn","Input_getPrototypeOf","selName","rep","selDate","_this$state","submitted","selWorkout","prevProps","_this2","TextField_default","InputLabelProps","shrink","placeholder","helperText","prevWeight","prevSet","IconButton_default","mini","color","onClick","handleButtonAddSet","Add_default","handleButtonDeleteSet","Delete_default","Button_default","size","variant","handleButton","Input_inherits","YourWorkout_WorkoutTab","WorkoutTab","YourWorkout_classCallCheck","YourWorkout_possibleConstructorReturn","YourWorkout_getPrototypeOf","YourWorkout_bundleWriter","YourWorkout_inherits","cellIndex","index","getCellIndex","replace","writeDate","substr","indexOf","writeWeight","writeSet","String","fromCharCode","charCodeAt","UserRadio_UserRadio","UserRadio","UserRadio_classCallCheck","UserRadio_possibleConstructorReturn","UserRadio_getPrototypeOf","choiceEvent","RadioOptions","react_radio_buttons_lib","iconSize","iconInnerSize","padding","UserRadio_inherits","Checkbox_Checkbox","_ref","_ref$type","_ref$checked","checked","prototype","prop_types_default","string","isRequired","bool","func","CheckBoxContainer_CheckBoxContainer","CheckBoxContainer","CheckBoxContainer_classCallCheck","CheckBoxContainer_getPrototypeOf","checkedItems","Map","bind","CheckBoxContainer_assertThisInitialized","item","isChecked","prevState","returnArray","CheckBoxOptions","get","Fragment","CheckBoxContainer_inherits","VersusSpace_ColoredLine","backgroundColor","VersusSpace_VersusTab","VersusTab","VersusSpace_classCallCheck","VersusSpace_possibleConstructorReturn","VersusSpace_getPrototypeOf","VersusSpace_objectSpread","graphStyle","returnVal","handleNameChoice","userNames","handleWorkoutChoice","handleGraphChoice","VersusSpace_inherits","Statistics_StatisticPage","StatisticPage","Statistics_classCallCheck","Statistics_possibleConstructorReturn","Statistics_getPrototypeOf","statistic","mapValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","v","err","return","j","val","Statistics_inherits","DynamicSpreadsheet_MyData","tableName","currentDate","workoutObject","_objectSpread","parseFloat","fillOfflineSheet","content","DynamicSpreadsheet_SimpleGSheet","index_es","_ref2","loading","JSON","stringify","DynamicSpreadsheet","parse","handleSubmit","preventDefault","DynamicSpreadsheet_defineProperty","sheetId","sheetRange","src_Field","src_ApiForm","init","clientId","onSubmit","ApiForm_defineProperty","SheetAccess_SheetsDemo","scopes","authorize","apiLoading","signout","signedIn","loggedIn","signin","SheetAccess_getProfile","profile","auth2","getAuthInstance","currentUser","getBasicProfile","newUser","reduce","prevVal","curVal","getId","newUserNumber","getName","writeID","writeName","writeScope","Store_profileChecker","SheetAccess_SheetExtractor","SheetExtractor","SheetAccess_classCallCheck","SheetAccess_possibleConstructorReturn","SheetAccess_getPrototypeOf","snapshot","accepted","signedin","SheetAccess_inherits","App_styles","thumbnail","App_App","credentials","Sheet","image","getImageUrl","App_HeaderComponent","App_Navigation","logOut","App_Routing","_this3","Route","path","render","creds","src","logo_default","alt","es","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","pullLeft","react_router_bootstrap_lib","Text","pullRight","href","circle","responsive","src_App_0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","react_dom_default","BrowserRouter","basename","document","getElementById","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.51720932.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import apiKey from './apiKey.json';\n\nexport const WriteSingleCell = (props) => {\n    let values = [\n        [\n            props.value\n        ],\n    ];\n    let body = {\n        values: values\n    };\n    window.gapi.client.sheets.spreadsheets.values.update({\n        spreadsheetId: apiKey.SheetID,\n        range: props.range,\n        valueInputOption: \"USER_ENTERED\",\n        resource: body\n    }).then((response) => {\n        let result = response.result;\n        console.log(`${result.updatedCells} cells updated.`);\n    });\n}","import moment from 'moment';\nimport { WriteSingleCell } from './SheetWriter';\nimport _ from 'lodash';\n\nconst sheetUserJump = 4;\nexport const userData = {\n};\n\nexport const apiKey = {\n    \"key\": process.env.KEY,\n    \"SheetID\": process.env.SHEET_ID,\n    \"Client-ID\": process.env.CLIENT_ID\n}\n\nexport let getNames = () => {\n    return Object.values(userData).map(user => user.name);\n}\n\nexport let getCell = (user) => {\n    let scope;\n    Object.values(userData).map(id => {\n        if (id.name === user) {\n            scope = id.sheetScope;\n        } return null;\n    })\n    return scope;\n}\nexport let workoutName = [\"Squat\", \"Deadlift\", \"Press\", \"BenchPress\", \"Bent-Over Barbell Row\", \"PowerClean\"];\nlet dateTable = { \"Squat\": [], \"Deadlift\": [], \"Press\": [], \"BenchPress\": [], \"Bent-Over Barbell Row\": [], \"PowerClean\": [], };\nlet dataSheets = {}\n\n\nexport const getDateTable = (workoutName) => {\n    return dateTable[workoutName];\n}\nexport const getCellIndex = (workout, date) => {\n    let index;\n    dateTable[workout].filter((cell, i) => {\n        if (cell === date) {\n            index = i + 3;\n        } return null\n    });\n    return index;\n}\nexport const fillOfflineSheet = (dataSet, tableName) => {\n    if (tableName !== \"UserRegister\") {\n        let currentDate = \"\";\n        dataSet.slice(2).map((row, i) => {\n            row.map((cell, j) => {\n                if (cell !== \"\") {\n                    if (j === 0) {\n                        if (!Object.keys(dataSheets).includes(cell)) {\n                            let workoutObject = {};\n                            for (let i = 0; i < workoutName.length; i++) {\n                                workoutObject = Object.assign({ [workoutName[i]]: {} }, workoutObject);\n                            }\n                            dataSheets[cell] = { ...workoutObject };\n                        }\n                        currentDate = cell;\n                    } else if ((j - 2) % 4 === 0) {\n                        if (userData.hasOwnProperty(j)) {\n                            const weight = parseFloat(cell.replace(/[^\\d,.]/g, \"\").replace(/,/g, \".\"));\n                            dataSheets[currentDate][tableName] = Object.assign({ [userData[j].name]: { weight } }, dataSheets[currentDate][tableName]);\n                        }\n                    }\n                    if (j > 4 && ((j - 1) % 4 === 0)) {\n                        if (userData.hasOwnProperty(j - 3)) {\n                            dataSheets[currentDate][tableName][userData[j - 3].name] = {\n                                ...dataSheets[currentDate][tableName][userData[j - 3].name],\n                                \"set\": cell,\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n            );\n            return null;\n        })\n        fillWorkoutDates(tableName);\n    } else if (tableName === 'UserRegister') {\n        dataSet.slice(1).map((row, i) => {\n            row.map((cell, j) => {\n                switch (j) {\n                    case 0:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"id\": cell,\n                        };\n                        break;\n                    case 1:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"name\": cell,\n                        };\n                        break;\n                    case 2:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"sheetScope\": cell,\n                        };\n                        break;\n\n                    default:\n                        break;\n                }\n                return null;\n            })\n            return null;\n        })\n    }\n    return null;\n}\n\nexport function getWeightsFor(workout, username) {\n    if (workout !== \"none\" && username !== \"none\") {\n        var sortable = [];\n        _.forEach(dataSheets, (value, key) => {\n            sortable.push([key, dataSheets[key]]);\n        })\n        sortable.sort(function (a, b) {\n            let first = moment(a[0], 'DD.MM.YY');\n            let second = moment(b[0], 'DD.MM.YY');\n            let diff = moment.duration(first.diff(second));\n            return diff.asDays();\n        });\n        let lastElem = sortable.pop();\n        while (!lastElem[1][workout].hasOwnProperty(username) && sortable.length !== 0) {\n            lastElem = sortable.pop();\n        }\n        if (lastElem[1][workout].hasOwnProperty(username)) {\n            let test = `Weight: ${lastElem[1][workout][username].weight}, Set: ${lastElem[1][workout][username].set}`;\n            return {\n                \"lastWeight\": lastElem[1][workout][username].weight,\n                \"lastSet\": lastElem[1][workout][username].set\n            };\n        }\n    }\n    return {\n        \"lastWeight\": 0,\n        \"lastSet\": \" \"\n    };;\n}\n\nconst fillWorkoutDates = (workoutName) => {\n    let today = moment();\n    dateTable[workoutName] = [];\n    Object.values(dataSheets).map((tupel, i) => {\n        if (Object.keys(tupel[workoutName]).length > 0) {\n            dateTable[workoutName].push(Object.keys(dataSheets)[i]);\n            return null;\n        }\n        return null;\n    })\n    dateTable[workoutName].sort(function (a, b) {\n        let first = moment(a, 'DD.MM.YY');\n        let second = moment(b, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    let lastEntry = moment(dateTable[workoutName][dateTable[workoutName].length - 1], 'DD.MM.YY');\n    let differ = moment.duration(today.diff(lastEntry)).asDays();\n    if (differ >= 1) {  // >= 1 because hours are irrelevant \n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    } else {\n        dateTable[workoutName].pop();\n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    }\n}\n\nexport const getStatistics = (username) => {\n    let statistic;\n    _.mapValues(dateTable, (value, name) => {\n        statistic = {\n            ...statistic,\n            [name]: 0,\n        };\n        return _.forEach(value, (date) => {\n            date = date.replace(/[^\\d.]/g, \"\");\n            if (!dataSheets.hasOwnProperty(date)) {\n                return 0;\n            } else if (dataSheets[date][name].hasOwnProperty(username)) {\n                let set = dataSheets[date][name][username].set;\n                if (typeof (set) !== 'undefined') {\n                    let index = 0;\n                    let rep = [''];\n                    for (var v of set) {\n                        if (v === '-') {\n                            index++;\n                            rep[index] = '';\n                        } else {\n                            rep[index] = rep[index].concat(v);\n                        }\n                    }\n                    for (let j = 0; j < rep.length; j++) {\n                        statistic[name] += ((dataSheets[date][name][username].weight * 2) + 20) * rep[j];\n                    }\n                }\n            }\n            return value;\n        });\n\n    })\n    return statistic;\n}\n\nexport const fillData = (username) => {\n    data = [];\n    Object.keys(dataSheets).map(date => {\n        data.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                Object.values(dataSheets[data[i].time][entry][username]).map(weight => {\n                    data[i] = Object.assign({ [entry]: weight }, data[i]);\n                    return null;\n                });\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in data) {\n        sortable.push([date, data[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let test = moment.duration(first.diff(second));\n        let testDays = test.asDays();\n        return testDays;\n    });\n    data = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => data[i] = Object.assign(cell, data[i])) });\n    return null;\n}\n\nexport const fillVersusData = (props) => {\n    versusData = [];\n    Object.keys(dataSheets).map(date => {\n        versusData.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                if (props.username !== props.versusname) {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `Your ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                    Object.values(dataSheets[versusData[i].time][entry][props.versusname]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `${props.versusname}'s ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                } else {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        versusData[i] = Object.assign({ [entry]: weight }, versusData[i]);\n                        return null;\n                    });\n                }\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in versusData) {\n        sortable.push([date, versusData[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    versusData = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => versusData[i] = Object.assign(cell, versusData[i])) });\n    return versusData;\n}\n\n\nexport const profileChecker = (profile) => {\n    let newUser = true;\n    if (userData.length) {\n        Object.values(userData).reduce((prevVal, curVal, i) => {\n            let id = profile.getId();\n            if (curVal.id === id) {\n                newUser = false;\n            }\n            return null;\n        })\n        if (newUser) {\n            let newUserNumber = (sheetUserJump * Object.keys(userData).length) + 2;\n            userData[newUserNumber] = {\n                \"id\": profile.getId(),\n                \"name\": profile.getName(),\n                \"sheetScope\": String.fromCharCode((\"A\").charCodeAt(0) + newUserNumber),\n            };\n            let writeID = {\n                value: userData[newUserNumber][\"id\"],\n                range: `UserRegister!A${Object.keys(userData).length + 1}`,\n            }\n            let writeName = {\n                value: userData[newUserNumber][\"name\"],\n                range: `UserRegister!B${Object.keys(userData).length + 1}`,\n            }\n            let writeScope = {\n                value: userData[newUserNumber][\"sheetScope\"],\n                range: `UserRegister!C${Object.keys(userData).length + 1}`,\n            }\n            WriteSingleCell(writeID);\n            WriteSingleCell(writeName);\n            WriteSingleCell(writeScope);\n        }\n    }\n}\n\n\nexport let versusData = [];\nexport let data = [];\n\nexport let workoutData = {\n}","import React, { Component } from 'react';\nimport { Brush, BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, LineChart } from 'recharts/lib';\n\nconst styles = {\n  outer: {\n    paddingTop: '10%',\n    paddingBottom: '10%',\n    position: 'relative',\n    height: 400\n  },\n  inner: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%'\n  }\n}\nconst colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\nconst colorChanger = (i) => {\n  return colors[i % colors.length];\n}\n\n\nexport const ChartComponent = (props) => {\n  let data = props.data;\n  return (\n    <div style={styles.outer} >\n      <div style={styles.inner}>\n        <ResponsiveContainer>\n          {props.barGraph ? <BarGraph workoutNames={props.workoutNames} data={data} /> : props.otherGraph ? <LineGraph workoutNames={props.workoutNames} data={data} /> : <p>Please define a graph type</p>}\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n\nclass BarGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Bar key={`Option_${option}`} label={{ position: 'top', fontSize: 11 }} dataKey={option} fill={colorChanger(i)} />;\n    });\n    return (\n      <ResponsiveContainer>\n        <BarChart data={this.props.data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\n\nclass LineGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Line key={`Option_${option}`} connectNulls={true} label={{ position: 'top', fontSize: 11 }} type=\"monotone\" dataKey={option} stroke={colorChanger(i)} />\n    });\n    return (\n      <ResponsiveContainer>\n        <LineChart data={this.props.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { data, fillData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\n\nexport class PersonalSpace extends Component {\n  state = {\n    dataSet: data\n  }\n  componentDidMount(){\n    fillData(this.props.username);\n    this.setState({\n      dataSet: data\n    })\n  }\n  \n  render() {\n    const { dataSet} = this.state;\n    const FilterData=()=>{\n      return dataSet.filter(row=>{\n        if(Object.keys(row).length >1){\n          return row;\n        }return null;\n      }).map(row=>row);\n    }\n    return (\n      <div>\n        <ChartComponent workoutNames={workoutName} otherGraph={true} data={FilterData()} />\n      </div>\n    );\n  }\n}","// import React, { Component } from 'react';\n// import { DropdownButton, MenuItem } from 'react-bootstrap';\n\n// export class DropDown extends Component {\n//   state = {\n//     currentSelection: this.props.title,\n//   }\n//   update = (e) => {\n//     this.props.onUpdate(e);\n//     this.setState({currentSelection: e});\n//   }\n//   render() {\n//     let options;\n//       try {\n//         options = this.props.options.map((name) => {\n//           return <MenuItem key={`keyItem_${name}`} eventKey={name} >{name}</MenuItem>;\n//         });\n//       } catch (error) {\n//         console.log(error);\n//         options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n//       }\n//     return (\n//       <DropdownButton\n//         title={this.state.currentSelection}\n//         bsStyle=\"default\"\n//         key={`dropdown_${this.props.title}`}\n//         id={`dropdown_workout`}\n//         onSelect={this.update}\n//       >\n//         {options}\n//       </DropdownButton>\n//     )\n//   }\n// }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 200,\n  },\n});\n\nclass DropDown extends React.Component {\n  state = {\n    currentSelection: this.props.title,\n    open: false,\n  };\n\n  handleChange = event => {\n    this.props.onUpdate(event.target.value);\n    this.setState({ currentSelection: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { title, classes } = this.props;\n    let options;\n    try {\n      options = this.props.options.map((name) => {\n        return <MenuItem key={`keyItem_${name}`} value={name} >{name}</MenuItem>;\n      });\n    } catch (error) {\n      console.log(error);\n      options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n    }\n\n    return (\n      // <form autoComplete=\"off\">\n        <FormControl className={this.props.classes.formControl}>\n          <InputLabel htmlFor=\"testSelect_materialUI\">{title}</InputLabel>\n          <Select\n            autoWidth={false}\n            open={this.state.open}\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n            value={this.state.currentSelection}\n            onChange={this.handleChange}\n            inputProps={{\n              name: title,\n              id: 'testSelect_materialUI',\n            }}\n          >\n            {options}\n          </Select>\n        </FormControl>\n      // </form>\n    );\n  }\n}\n\nDropDown.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DropDown);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nexport class InputComponent extends Component {\n  state = {\n    name: this.props.selName,\n    workout: \"WorkoutName\",\n    set: \"\",\n    rep: 0,\n    weight: 0,\n    date: this.props.selDate,\n  }\n  handleButton() {\n    let { name, workout } = this.state;\n    this.props.submitted({\n      name: name,\n      workout: workout,\n      weight: this.state.weight,\n      set: this.state.set,\n      date: this.state.date\n    });\n  }\n  handleButtonAddSet() {\n    if (this.state.set.length) {\n      this.setState({\n        set: `${this.state.set}-${this.state.rep}`\n      })\n    } else {\n      this.setState({\n        set: `${this.state.rep}`\n      })\n    }\n  }\n  handleButtonDeleteSet() {\n    this.setState({\n      set: \"\"\n    })\n  }\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  componentDidMount() {\n    this.setState({\n      name: this.props.selName,\n      workout: this.props.selWorkout,\n      date: this.props.selDate,\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.selName !== prevProps.selName) {\n      this.setState({\n        name: this.props.selName\n      });\n    }\n    if (this.props.selWorkout !== prevProps.selWorkout) {\n      this.setState({\n        workout: this.props.selWorkout\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <TextField\n            id=\"ID_Weight\"\n            label=\"Weight\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            placeholder=\"Kg\"\n            margin=\"normal\"\n            type='number'\n            // value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            helperText={`Last weight was: ${this.props.prevWeight}`}\n          />\n          <TextField\n            id=\"ID_Rep\"\n            label=\"rep\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            placeholder=\"Reps\"\n            margin=\"normal\"\n            type='number'\n            onChange={this.handleChange('rep')}\n            helperText={`Last set was: ${this.props.prevSet}`}\n          />\n          <IconButton mini color=\"primary\" onClick={(e) => { this.handleButtonAddSet(); }}><AddIcon /></IconButton>\n          <IconButton mini color=\"secondary\" onClick={(e) => { this.handleButtonDeleteSet(); }}><DeleteIcon /></IconButton>\n          <p>{`Your current Weight: ${this.state.weight} Set: ${this.state.set}`}</p>\n        </div>\n        <Button size=\"large\" variant=\"raised\" color=\"primary\" onClick={(e) => { this.handleButton(); }}>Submit</Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport DropDown from './Selector';\nimport { workoutName, getCell, getDateTable, getCellIndex, getWeightsFor } from './Store';\nimport { InputComponent } from './Input';\nimport { WriteSingleCell } from './SheetWriter'\n\nexport class WorkoutTab extends Component {\n    state = {\n        username: \"none\",\n        workout: \"none\",\n        date: ''\n    }\n    componentDidMount() {\n        this.setState({\n            username: this.props.username\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.username !== prevProps.username) {\n            this.setState({\n                username: this.props.username\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <DropDown options={workoutName} title='workout' onUpdate={(e) => { this.setState({ workout: e }); }} />\n                    <DropDown options={getDateTable(this.state.workout)} title='date' onUpdate={(e) => { this.setState({ date: e }); }} />\n\n                </div>\n                <InputComponent prevWeight={getWeightsFor(this.state.workout, this.state.username).lastWeight} prevSet={getWeightsFor(this.state.workout, this.state.username).lastSet} selName={this.state.username} selDate={this.state.date} selWorkout={this.state.workout} submitted={(props) => { props.date = this.state.date; bundleWriter(props) }} />\n            </div>\n        );\n    }\n}\n\nconst bundleWriter = (props) => {\n    let {date, workout, name, set, weight} = props;\n    const cellIndex = getCellIndex(workout, date);\n    weight = weight.replace(/[.]/g , \",\");\n    date = date.substr(0, (date + \" \").indexOf(\" \"));\n    let writeDate = {\n        value: date,\n        range: `${workout}!A${cellIndex}`,\n    }\n    let writeWeight = {\n        value: weight,\n        range: `${workout}!${getCell(name)}${cellIndex}`,\n    }\n    let writeSet = {\n        value: set,\n        range: `${workout}!${String.fromCharCode(getCell(name).charCodeAt(0) + 3)}${cellIndex}`,\n    }\n    WriteSingleCell(writeDate);\n    WriteSingleCell(writeWeight);\n    WriteSingleCell(writeSet);\n}","import React, { Component } from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nconst sizeIcon = 4;\nconst pad = 10;\n\nexport class UserRadio extends Component {\n    onChange = (e) => {\n        this.props.choiceEvent(e);\n    }\n    render() {\n        let RadioOptions = this.props.options.map((option) => {\n            return <RadioButton iconSize={sizeIcon} iconInnerSize={sizeIcon} padding={pad} key={`Option_${option}`} value={option}>{option}</RadioButton>;\n        });\n        return (\n            <RadioGroup onChange={this.onChange} >\n                {RadioOptions.map(name => name)}\n            </RadioGroup>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Checkbox = ({ type = 'checkbox', name, checked = false, onChange }) =>(\n    <input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nCheckbox.prototype = {\n    type: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n}","import React, { Component } from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport class CheckBoxContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state !== prevState) {\n            let returnArray = [];\n            this.state.checkedItems.forEach((value, key) => {\n                if (value === true) {\n                    if (returnArray.length === 0) {\n                        returnArray[0] = key;\n                    } else {\n                        returnArray.push(key);\n                    }\n\n                }\n            })\n            this.props.choiceEvent(returnArray);\n        }\n    }\n\n    render() {\n        const CheckBoxOptions = this.props.options.map(option => {\n            return <label key={`checkBoxOption_${option}`}>\n                {option}\n                <Checkbox name={option} checked={this.state.checkedItems.get(option)} onChange={this.handleChange} />\n            </label>\n        })\n        return (\n            <React.Fragment>\n                {CheckBoxOptions.map(option => option)}\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { versusData, fillVersusData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\nimport { UserRadio } from './UserRadio';\nimport { CheckBoxContainer } from './CheckBoxContainer';\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\n\nexport class VersusTab extends Component {\n    state = {\n        props: {\n            username: this.props.username,\n            versusname: this.props.username,\n            versusworkout: [],\n        },\n        versusData: versusData,\n        otherGraph: false,\n        barGraph: true,\n    }\n    componentDidMount() {\n\n        this.setState({\n            props: {\n                username: this.props.username,\n                versusname: this.props.username,\n                versusworkout: [],\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleNameChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusname: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleWorkoutChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusworkout: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleGraphChoice(e) {\n        switch (e) {\n            case 'Bar Graph':\n            this.setState({\n                barGraph: true,\n                otherGraph: false,\n            });\n                break;\n            case 'Other Graph':\n            this.setState({\n                barGraph: false,\n                otherGraph: true,\n            });\n                break;\n        \n            default:\n                break;\n        }\n        this.setState({\n            graphStyle: e\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.props !== prevState.props) {\n            this.setState({\n                versusData: fillVersusData(this.state.props),\n            });\n        }\n    }\n    render() {\n        const filterNameOptions = () => {\n            return this.props.userNames.filter(name => { if (name !== this.props.username) { return true; } return false; }).map(name => name);\n        }\n        const FilterData = () => {\n            return this.state.versusData.filter(row => {\n                if (Object.keys(row).length > 1) {\n                    return row;\n                } return null;\n            }).map(row => {\n                return row;\n            });\n        }\n        const GetOptionNames = () => {\n            let returnVal = [];\n            workoutName.filter(name => {\n                if ((this.state.props.versusworkout).includes(name)) {\n                    return true;\n                } return false;\n            }).map(option => {\n                returnVal.push(`Your ${option}`);\n                returnVal.push(`${this.state.props.versusname}'s ${option}`);\n                return null;\n            });\n            return returnVal;\n        }\n        return (\n            <div>\n                <div>\n                    <UserRadio choiceEvent={(e) => { this.handleNameChoice(e) }} options={filterNameOptions()} />\n                </div>\n                <ColoredLine color=\"Grey\" />\n                <div>\n                    <CheckBoxContainer choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames} />\n                </div>\n                <ChartComponent workoutNames={GetOptionNames()} otherGraph={this.state.otherGraph} barGraph={this.state.barGraph} data={FilterData()} />\n                <UserRadio choiceEvent={(e) => { this.handleGraphChoice(e) }} options={['Bar Graph', 'Other Graph']} />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport {getStatistics} from './Store';\nimport _ from 'lodash';\n\nexport class StatisticPage extends Component{\n    render(){\n        const getData = () =>{\n            let test = \"\";\n            test = _.map(getStatistics(this.props.username), (val, key)=> {\n                return <p key={`stat_${key}`}>{`${key}: ${val}`}</p>;\n            });\n            return test;\n        }\n        return (\n            <div>\n                <h2>Statistics</h2>\n            {getData()}\n            </div>\n        );\n    }\n}","\nimport React, {Component} from 'react';\nimport { GoogleSheet } from '@lourd/react-google-sheet';\nimport apiKey from './apiKey.json';\nimport { fillOfflineSheet} from './Store';\n\nconst MyData = ({ data, content }) => {\n  fillOfflineSheet(data, content);\n  return null;\n}\n\n// Wraps the GoogleSheet component to provide some basic components\n// for display loading & error states\nconst SimpleGSheet = props => (\n  <GoogleSheet id={props.id} range={props.range}>\n    {({ error, data, loading }) =>\n      loading ? (\n        'Getting data...'\n      ) : error ? (\n        JSON.stringify(error, null, 2)\n      ) : data ? (\n        <MyData data={data} content={props.content}/>\n      ) : null\n    }\n  </GoogleSheet>\n)\n\nclass DataFetcher extends Component {\n  state = {\n    id: JSON.parse(JSON.stringify(apiKey.SheetID)),\n    range: '',\n    submitted: null,\n  }\n\n  componentDidMount(){\n    this.setState({\n        submitted: {\n          id: this.props.sheetId,\n          range: this.props.sheetRange\n        },\n      })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      submitted: {\n        id: this.state.id,\n        range: this.state.range,\n      },\n    })\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <div>\n        {this.state.submitted && (\n          <SimpleGSheet\n            id={this.state.submitted.id}\n            range={this.state.submitted.range}\n            content={this.props.content}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DataFetcher","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Field extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.any,\n    label: PropTypes.string\n  };\n\n  handleChange = event => {\n    this.props.onChange(this.props.name, event.target.value);\n  };\n\n  render() {\n    const label = this.props.label || this.props.name;\n    return (\n      <div>\n        <label htmlFor={this.props.name}>{label}</label>\n        <div>\n          <input\n            id={this.props.name}\n            value={this.props.value}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Field;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Field from './Field'\n\nclass ApiForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  state = {\n    apiKey: this.props.init.apiKey,\n    clientId: this.props.init.clientId,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.onSubmit(this.state)\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Field\n          name=\"apiKey\"\n          label=\"Google Developer API Key\"\n          value={this.state.apiKey}\n          onChange={this.handleChange}\n        />\n        <Field\n          name=\"clientId\"\n          label=\"Application Client ID\"\n          value={this.state.clientId}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default ApiForm","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleSheetsApi } from '@lourd/react-google-sheet';\nimport DataFetcher from './DynamicSpreadsheet';\nimport ApiForm from './ApiForm';\nimport apiKey from './apiKey.json';\nimport { profileChecker } from './Store';\nimport Button from '@material-ui/core/Button'\n// import { Button } from 'react-bootstrap';\n\nconst range = \"!A:Q\";\n\n\nconst SheetsDemo = props => (\n    <GoogleSheetsApi clientId={props.clientId} apiKey={props.apiKey} scopes={[\"https://www.googleapis.com/auth/spreadsheets\"]}>\n        {({ authorize, loading: apiLoading, signout, signedIn, error }) => (\n            <div>\n                {apiLoading ? (\n                    <div>Loading...</div>\n                ) : error ? (\n                    JSON.stringify(error, null, 2)\n                ) : signedIn ? (\n                    props.loggedIn ? <Button size=\"large\" variant=\"raised\" color=\"secondary\" onClick={signout}>Sign Out</Button> : <Button size=\"large\" variant=\"raised\" color=\"primary\" onClick={() => { props.signin(true, getProfile()) }}>Sign In</Button>\n                ) : (\n                                <Button size=\"large\" variant=\"raised\" color=\"default\" onClick={authorize}>Authorize</Button>\n                            )}\n                {signedIn && <DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" />}\n                {signedIn && <DataFetcher sheetRange={`PowerClean${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"PowerClean\" />}\n                {signedIn && <DataFetcher sheetRange={`Squat${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Squat\" />}\n                {signedIn && <DataFetcher sheetRange={`Press${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Press\" />}\n                {signedIn && <DataFetcher sheetRange={`BenchPress${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"BenchPress\" />}\n                {signedIn && <DataFetcher sheetRange={`Deadlift${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Deadlift\" />}\n                {signedIn && <DataFetcher sheetRange={`Bent-Over Barbell Row${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Bent-Over Barbell Row\" />}\n            </div>\n        )}\n    </GoogleSheetsApi >\n)\nSheetsDemo.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    apiKey: PropTypes.string.isRequired,\n    loggedIn: PropTypes.bool.isRequired,\n}\n\nconst getProfile = () => {\n    let auth = window.gapi.auth2.getAuthInstance();\n    let profile = auth.currentUser.get().getBasicProfile();\n    profileChecker(profile);\n    return profile;\n}\n\nexport class SheetExtractor extends Component {\n    state = {\n        apiKey: apiKey.key,\n        clientId:\n            apiKey['Client-ID'],\n        range: \"\",\n    }\n    componentDidMount() {\n        this.setState({\n            range: this.props.range\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.range !== this.props.range) {\n            this.setState({\n                range: this.props.range\n            })\n            return true;\n        } return false;\n    }\n\n    handleSubmit = state => this.setState(state)\n    render() {\n        return (\n            <div>\n                {this.state.apiKey ? (\n                    <SheetsDemo\n                        apiKey={this.state.apiKey}\n                        clientId={this.state.clientId}\n                        loggedIn={this.props.loggedIn}\n                        signin={(accepted, profile) => { this.props.signedin(accepted, profile) }}\n                    />\n                ) : (\n                        <ApiForm onSubmit={this.handleSubmit} init={this.state} />\n                    )}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Navbar, NavItem, Nav, Image } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport { PersonalSpace } from './PersonalSpace';\nimport { WorkoutTab } from './YourWorkout';\nimport { VersusTab } from './VersusSpace';\nimport { StatisticPage } from './Statistics';\nimport { getNames, workoutName } from './Store';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { SheetExtractor } from './SheetAccess';\n\nconst styles = {\n  thumbnail: {\n    width: 50,\n    height: 50\n  },\n}\n\nclass App extends Component {\n  state = {\n    credentials: \"User\",\n    accepted: false,\n  }\n\n  render() {\n    const Sheet = (props) => {\n      return <SheetExtractor loggedIn={props.loggedIn} signedin={(accepted, user) => { this.setState({ accepted: accepted, credentials: user.getName(), image: user.getImageUrl() }); }} />\n    }\n    if (this.state.accepted === false) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Sheet loggedIn={false} />\n        </div>\n      );\n    } else if (this.state.accepted === true) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Navigation image={this.state.image} credentials={this.state.credentials} logOut={(e) => { this.setState({ accepted: e }); }} />\n          <Sheet loggedIn={true} />\n        </div>\n      );\n    }\n  }\n}\n\nclass Routing extends Component {\n  render() {\n    return (\n      <div>\n        <Route path=\"/Statistics\" render={(props) => <StatisticPage {...props} username={this.props.creds} />} />\n        <Route path=\"/PersonalSpace\" render={(props) => <PersonalSpace {...props} username={this.props.creds} />} />\n        <Route path=\"/YourWorkout\" render={(props) => <WorkoutTab {...props} username={this.props.creds} />} />\n        <Route path=\"/VersusSpace\" render={(props) => <VersusTab {...props} username={this.props.creds} userNames={getNames()} workoutNames={workoutName} />} />\n      </div>\n    );\n  }\n}\n\nconst HeaderComponent = () => {\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1 className=\"App-title\">Fitness Applet</h1>\n    </header>\n  );\n}\n\nconst Navigation = (props) => {\n  return (\n    <div className=\"App container\">\n      <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/Statistics\">Fitness-Applet</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullLeft>\n            <LinkContainer to=\"/PersonalSpace\">\n              <NavItem>Personal-Space</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/YourWorkout\">\n              <NavItem>Your Workout</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/VersusSpace\">\n              <NavItem>Versus-Space</NavItem>\n            </LinkContainer>\n          </Nav>\n          <Navbar.Collapse>\n            <Navbar.Text pullRight>\n              Signed in as: <Navbar.Link href=\"#\">{props.credentials}</Navbar.Link>\n              <label style={styles.thumbnail}>\n                <Image thumbnail circle responsive src={props.image} />\n              </label>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar.Collapse>\n      </Navbar>\n      <Routing creds={props.credentials} />\n    </div>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'typeface-roboto';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport FullWidthTabs from './TestApp';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter} from 'react-router-dom';\nrequire('babel-polyfill');\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
{"version":3,"sources":["SheetWriter.js","Store.js","Graphs.js","PersonalSpace.js","Selector.js","Progress.js","Input.js","YourWorkout.js","UserRadio.js","CheckBoxContainer.js","VersusSpace.js","Statistics.js","DynamicSpreadsheet.js","Field.js","ApiForm.js","Avatar.js","SheetAccess.js","App.js","registerServiceWorker.js","index.js"],"names":["SheetWriter_WriteSingleCell","props","callback","arguments","length","undefined","body","values","value","window","gapi","client","sheets","spreadsheets","update","spreadsheetId","apiKey","SheetID","range","valueInputOption","resource","then","response","result","console","log","concat","updatedCells","timeStamp","userData","changeFlag","Object","NODE_ENV","PUBLIC_URL","KEY","SHEET_ID","CLIENT_ID","getCell","user","scope","map","id","name","sheetScope","Store_workoutName","dateTable","Squat","Deadlift","Press","BenchPress","Bent-Over Barbell Row","PowerClean","dataSheets","getWeightsFor","workout","username","sortable","lodash_default","a","forEach","key","push","sort","b","first","moment_default","second","duration","diff","asDays","lastElem","pop","hasOwnProperty","lastWeight","weight","lastSet","set","Store_fillWorkoutDates","workoutName","today","tupel","i","keys","lastEntry","format","Store_fillData","Store_data","date","time","entry","assign","_defineProperty","e","slice","cell","Store_fillVersusData","versusData","versusname","versusworkout","includes","entryName","Graphs_styles","outer","paddingTop","paddingBottom","position","inner","top","left","width","height","colors","colorChanger","Graphs_ChartComponent","data","react_default","createElement","style","lib","barGraph","Graphs_BarGraph","workoutNames","otherGraph","Graphs_LineGraph","graphOption","this","option","label","fontSize","dataKey","fill","strokeDasharray","wrapperStyle","bottom","element","react","connectNulls","type","stroke","margin","right","PersonalSpace_PersonalSpace","_Component","PersonalSpace","_getPrototypeOf2","_temp","_this","PersonalSpace_classCallCheck","_len","args","Array","_key","PersonalSpace_possibleConstructorReturn","PersonalSpace_getPrototypeOf","call","apply","state","dataSet","setState","prevProps","prevState","testData","filter","row","PersonalSpace_inherits","Selector_DropDown","currentSelection","title","open","handleChange","event","onUpdate","target","handleClose","handleOpen","options","_this$props","classes","error","eventKey","FormControl_default","className","formControl","InputLabel_default","htmlFor","Select_default","native","autoWidth","onClose","onOpen","onChange","inputProps","Component","Selector","core_styles","theme","button","display","marginTop","spacing","unit","minWidth","Progress_CircularIntegration","timer","loading","success","handleButtonClick","onClick","setTimeout","clearTimeout","changed","buttonClassname","classnames_default","buttonSuccess","root","Button_default","variant","color","Check_default","Save_default","Progress","alignItems","wrapper","backgroundColor","green_default","&:hover","fabProgress","zIndex","buttonProgress","marginLeft","Input_InputComponent","selName","rep","selDate","_this$state","submitted","selWorkout","_this2","TextField_default","InputLabelProps","shrink","placeholder","helperText","prevWeight","prevSet","IconButton_default","mini","handleButtonAddSet","Add_default","handleButtonDeleteSet","Delete_default","handleButton","Input","leftIcon","marginRight","rightIcon","iconSmall","YourWorkout_WorkoutTab","WorkoutTab","YourWorkout_classCallCheck","YourWorkout_possibleConstructorReturn","YourWorkout_getPrototypeOf","reverse","DateOptions","YourWorkout_bundleWriter","YourWorkout_inherits","cellIndex","index","getCellIndex","replace","writeDate","substr","indexOf","writeWeight","writeSet","String","fromCharCode","charCodeAt","UserRadio_UserRadio","UserRadio","UserRadio_classCallCheck","UserRadio_possibleConstructorReturn","UserRadio_getPrototypeOf","choiceEvent","RadioOptions","react_radio_buttons_lib","iconSize","iconInnerSize","padding","UserRadio_inherits","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","CheckBoxContainer_MultipleSelect","multiple","input","Input_default","renderValue","selected","chips","Chip_default","chip","MenuItem_default","fontWeight","typography","fontWeightRegular","fontWeightMedium","CheckBoxContainer","flexWrap","maxWidth","withTheme","VersusSpace_ColoredLine","_ref","VersusSpace_VersusTab","VersusTab","VersusSpace_classCallCheck","VersusSpace_possibleConstructorReturn","VersusSpace_getPrototypeOf","VersusSpace_objectSpread","graphStyle","returnVal","handleNameChoice","userNames","FilterNameOptions","handleWorkoutChoice","handleGraphChoice","VersusSpace_inherits","Statistics_StatisticPage","StatisticPage","Statistics_classCallCheck","Statistics_possibleConstructorReturn","Statistics_getPrototypeOf","statistic","mapValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","v","err","return","j","val","Statistics_inherits","DynamicSpreadsheet_MyData","tableName","currentDate","workoutObject","_objectSpread","parseFloat","stamp","JSON","stringify","fillOfflineSheet","content","DynamicSpreadsheet_SimpleGSheet","index_es","_ref2","DynamicSpreadsheet","parse","handleSubmit","preventDefault","DynamicSpreadsheet_defineProperty","sheetId","sheetRange","src_Field","src_ApiForm","init","clientId","onSubmit","ApiForm_defineProperty","Avatar_MenuAppBar","anchorEl","handleMenu","currentTarget","handleLogout","loggedOut","Boolean","aria-owns","aria-haspopup","Avatar_default","alt","src","image","avatar","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","src_Avatar","SheetAccess_SheetsDemo","scopes","authorize","apiLoading","signout","signedIn","getAuth","auth2","getAuthInstance","size","SheetAccess_getMeta","loadSheets","request","metadataId","auth","developerMetadata","get","SheetAccess_SheetExtractor","SheetExtractor","SheetAccess_classCallCheck","SheetAccess_possibleConstructorReturn","SheetAccess_getPrototypeOf","snapshot","signin","accepted","profile","signedin","SheetAccess_inherits","TabContainer","children","dir","Typography_default","align","component","App_FullWidthTabs","credentials","handleChangeIndex","authHandler","currentUser","getBasicProfile","receivedID","getId","Ab","El","getName","isSignedIn","getImageUrl","Paper_default","font-size","Tabs_default","indicatorColor","textColor","fullWidth","Tab_default","src_App","palette","background","paper","form","layout","breakpoints","up","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","__webpack_require__","react_dom_default","render","document","getElementById","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d81d6228.chunk.js","sourcesContent":["import apiKey from './apiKey.json'; \n\nexport const WriteSingleCell = (props, callback = 0) => {\n    let values = [\n        [\n            props.value\n        ],\n    ];\n    let body = {\n        values: values\n    };\n    window.gapi.client.sheets.spreadsheets.values.update({\n        spreadsheetId: apiKey.SheetID,\n        range: props.range,\n        valueInputOption: \"USER_ENTERED\",\n        resource: body\n    }).then((response) => {\n        let result = response.result;\n        console.log(`${result.updatedCells} cells updated.`);\n        if (callback !== 0) {\n            callback(response);\n        }\n    });\n    // if (!props.range.includes('changedFlag')) {\n    //     WriteChangedFlag({ value: true, range: `changedFlag!A1` });\n    //     WriteChangedFlag({ value: true, range: `changedFlag!A2` });\n    //     WriteChangedFlag({ value: true, range: `changedFlag!A3` });\n    // }\n}\n\n// const WriteChangedFlag = (props) => {\n//     let values = [\n//         [\n//             props.value\n//         ],\n//     ];\n//     let body = {\n//         values: values\n//     };\n//     window.gapi.client.sheets.spreadsheets.values.update({\n//         spreadsheetId: apiKey.SheetID,\n//         range: props.range,\n//         valueInputOption: \"USER_ENTERED\",\n//         resource: body\n//     }).then((response) => {\n//         let result = response.result;\n//         console.log(`${result.updatedCells} flag updated.`);\n//     });\n// }","import moment from 'moment';\nimport { WriteSingleCell } from './SheetWriter';\nimport _ from 'lodash';\n\nconst sheetUserJump = 4;\nexport const userData = {\n};\n\nexport const apiKey = {\n    \"key\": process.env.KEY,\n    \"SheetID\": process.env.SHEET_ID,\n    \"Client-ID\": process.env.CLIENT_ID\n}\nexport let changeFlag = true;                          // Debugging without fetching data from the server\nexport let getNames = () => {\n    return Object.values(userData).map(user => user.name);\n}\nlet timeStamp;\n\nexport let getCell = (user) => {\n    let scope;\n    Object.values(userData).map(id => {\n        if (id.name === user) {\n            scope = id.sheetScope;\n        } return null;\n    })\n    return scope;\n}\nexport let workoutName = [\"Squat\", \"BenchPress\", \"Bent-Over Barbell Row\", \"Deadlift\", \"Press\", \"PowerClean\"];\nlet dateTable = { \"Squat\": [], \"Deadlift\": [], \"Press\": [], \"BenchPress\": [], \"Bent-Over Barbell Row\": [], \"PowerClean\": [], };\nlet dataSheets = {}\n\n\nexport const getDateTable = (workoutName) => {\n    return dateTable[workoutName];\n}\nexport const getCellIndex = (workout, date) => {\n    let index;\n    dateTable[workout].filter((cell, i) => {\n        if (cell === date) {\n            index = i + 3;\n        } return null\n    });\n    return index;\n}\nexport const fillOfflineSheet = (dataSet, tableName) => {\n    if (tableName !== \"UserRegister\" && tableName !== \"changedFlag\") {\n        let currentDate = \"\";\n        dataSet.slice(2).map((row, i) => {\n            row.map((cell, j) => {\n                if (cell !== \"\") {\n                    if (j === 0) {\n                        if (!Object.keys(dataSheets).includes(cell)) {\n                            let workoutObject = {};\n                            for (let i = 0; i < workoutName.length; i++) {\n                                workoutObject = Object.assign({ [workoutName[i]]: {} }, workoutObject);\n                            }\n                            dataSheets[cell] = { ...workoutObject };\n                        }\n                        currentDate = cell;\n                    } else if ((j - 2) % 4 === 0) {\n                        if (userData.hasOwnProperty(j)) {\n                            const weight = parseFloat(cell.replace(/[^\\d,.]/g, \"\").replace(/,/g, \".\"));\n                            dataSheets[currentDate][tableName] = Object.assign({ [userData[j].name]: { weight } }, dataSheets[currentDate][tableName]);\n                        }\n                    }\n                    if (j > 4 && ((j - 1) % 4 === 0)) {\n                        if (userData.hasOwnProperty(j - 3)) {\n                            dataSheets[currentDate][tableName][userData[j - 3].name] = {\n                                ...dataSheets[currentDate][tableName][userData[j - 3].name],\n                                \"set\": cell,\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n            );\n            return null;\n        })\n        fillWorkoutDates(tableName);\n    } else if (tableName === 'UserRegister') {\n        dataSet.slice(1).map((row, i) => {\n            row.map((cell, j) => {\n                switch (j) {\n                    case 0:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"id\": cell,\n                        };\n                        break;\n                    case 1:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"name\": cell,\n                        };\n                        break;\n                    case 2:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"sheetScope\": cell,\n                        };\n                        break;\n\n                    default:\n                        break;\n                }\n                return null;\n            })\n            return null;\n        })\n    }else if(tableName === 'changedFlag'){\n        let stamp = JSON.stringify(dataSet);\n            if(stamp !== timeStamp){\n                changeFlag = true;       // commenting for debugging\n                timeStamp = stamp;\n            }else{\n                changeFlag = false;\n            }\n    }\n    return null;\n}\n\nexport function getWeightsFor(workout, username) {\n    if (workout !== \"none\" && username !== \"none\") {\n        var sortable = [];\n        _.forEach(dataSheets, (value, key) => {\n            sortable.push([key, dataSheets[key]]);\n        })\n        sortable.sort(function (a, b) {\n            let first = moment(a[0], 'DD.MM.YY');\n            let second = moment(b[0], 'DD.MM.YY');\n            let diff = moment.duration(first.diff(second));\n            return diff.asDays();\n        });\n        let lastElem = sortable.pop();\n        while (!lastElem[1][workout].hasOwnProperty(username) && sortable.length !== 0) {\n            lastElem = sortable.pop();\n        }\n        if (lastElem[1][workout].hasOwnProperty(username)) {\n            return {\n                \"lastWeight\": lastElem[1][workout][username].weight,\n                \"lastSet\": lastElem[1][workout][username].set\n            };\n        }\n    }\n    return {\n        \"lastWeight\": 0,\n        \"lastSet\": \" \"\n    };\n}\n\nconst fillWorkoutDates = (workoutName) => {\n    let today = moment();\n    dateTable[workoutName] = [];\n    Object.values(dataSheets).map((tupel, i) => {\n        if (Object.keys(tupel[workoutName]).length > 0) {\n            dateTable[workoutName].push(Object.keys(dataSheets)[i]);\n            return null;\n        }\n        return null;\n    })\n    dateTable[workoutName].sort(function (a, b) {\n        let first = moment(a, 'DD.MM.YY');\n        let second = moment(b, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    let lastEntry = moment(dateTable[workoutName][dateTable[workoutName].length - 1], 'DD.MM.YY');\n    let differ = moment.duration(today.diff(lastEntry)).asDays();\n    if (differ >= 1) {  // >= 1 because hours are irrelevant \n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    } else {\n        dateTable[workoutName].pop();\n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    }\n}\n\nexport const getStatistics = (username) => {\n    let statistic;\n    _.mapValues(dateTable, (value, name) => {\n        statistic = {\n            ...statistic,\n            [name]: 0,\n        };\n        return _.forEach(value, (date) => {\n            date = date.replace(/[^\\d.]/g, \"\");\n            if (!dataSheets.hasOwnProperty(date)) {\n                return 0;\n            } else if (dataSheets[date][name].hasOwnProperty(username)) {\n                let set = dataSheets[date][name][username].set;\n                if (typeof (set) !== 'undefined') {\n                    let index = 0;\n                    let rep = [''];\n                    for (var v of set) {\n                        if (v === '-') {\n                            index++;\n                            rep[index] = '';\n                        } else {\n                            rep[index] = rep[index].concat(v);\n                        }\n                    }\n                    for (let j = 0; j < rep.length; j++) {\n                        statistic[name] += ((dataSheets[date][name][username].weight * 2) + 20) * rep[j];\n                    }\n                }\n            }\n            return value;\n        });\n\n    })\n    return statistic;\n}\n\nexport const fillData = (username) => {\n    data = [];\n    Object.keys(dataSheets).map(date => {\n        data.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                Object.values(dataSheets[data[i].time][entry][username]).map(weight => {\n                    data[i] = Object.assign({ [entry]: weight }, data[i]);\n                    return null;\n                });\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in data) {\n        sortable.push([date, data[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let test = moment.duration(first.diff(second));\n        let testDays = test.asDays();\n        return testDays;\n    });\n    data = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => data[i] = Object.assign(cell, data[i])) });\n    return data;\n}\n\nexport const fillVersusData = (props) => {\n    versusData = [];\n    Object.keys(dataSheets).map(date => {\n        versusData.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                if (props.username !== props.versusname) {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `Your ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                    Object.values(dataSheets[versusData[i].time][entry][props.versusname]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `${props.versusname}'s ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                } else {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        versusData[i] = Object.assign({ [entry]: weight }, versusData[i]);\n                        return null;\n                    });\n                }\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in versusData) {\n        sortable.push([date, versusData[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    versusData = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => versusData[i] = Object.assign(cell, versusData[i])) });\n    return versusData;\n}\n\n\nexport const profileChecker = (profile) => {\n    let newUser = true;\n    if (userData.length) {\n        Object.values(userData).reduce((prevVal, curVal, i) => {\n            let id = profile.getId();\n            if (curVal.id === id) {\n                newUser = false;\n            }\n            return null;\n        })\n        if (newUser) {\n            let newUserNumber = (sheetUserJump * Object.keys(userData).length) + 2;\n            userData[newUserNumber] = {\n                \"id\": profile.getId(),\n                \"name\": profile.getName(),\n                \"sheetScope\": String.fromCharCode((\"A\").charCodeAt(0) + newUserNumber),\n            };\n            let writeID = {\n                value: userData[newUserNumber][\"id\"],\n                range: `UserRegister!A${Object.keys(userData).length + 1}`,\n            }\n            let writeName = {\n                value: userData[newUserNumber][\"name\"],\n                range: `UserRegister!B${Object.keys(userData).length + 1}`,\n            }\n            let writeScope = {\n                value: userData[newUserNumber][\"sheetScope\"],\n                range: `UserRegister!C${Object.keys(userData).length + 1}`,\n            }\n            WriteSingleCell(writeID);\n            WriteSingleCell(writeName);\n            WriteSingleCell(writeScope);\n        }\n    }\n}\n\n\nexport let versusData = [];\nexport let data = [];\n\nexport let workoutData = {\n}","import React, { Component } from 'react';\nimport { Brush, BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, LineChart } from 'recharts/lib';\n\nconst styles = {\n  outer: {\n    paddingTop: '40%',\n    paddingBottom: '0%',\n    position: 'relative',\n  },\n  inner: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%'\n  }\n}\nconst colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\nconst colorChanger = (i) => {\n  return colors[i % colors.length];\n}\n\n\nexport const ChartComponent = (props) => {\n  let data = props.data;\n  return (\n    <div style={styles.outer} >\n      <div style={styles.inner}>\n        <ResponsiveContainer>\n          {props.barGraph ? <BarGraph workoutNames={props.workoutNames} data={data} /> : props.otherGraph ? <LineGraph workoutNames={props.workoutNames} data={data} /> : <p>Please define a graph type</p>}\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n\nclass BarGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Bar key={`Option_${option}`} label={{ position: 'top', fontSize: 11 }} dataKey={option} fill={colorChanger(i)} />;\n    });\n    return (\n      <ResponsiveContainer>\n        <BarChart data={this.props.data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\n\nclass LineGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Line key={`Option_${option}`} connectNulls={true} label={{ position: 'top', fontSize: 11 }} type=\"monotone\" dataKey={option} stroke={colorChanger(i)} />\n    });\n    return (\n      <ResponsiveContainer>\n        <LineChart data={this.props.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { data, fillData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\n\nexport class PersonalSpace extends Component {\n  state = {\n    dataSet: data\n  }\n  componentDidMount(){\n    this.setState({\n      dataSet: fillData(this.props.username)\n    })\n  }\n  componentDidUpdate(prevProps, prevState){\n    let testData = fillData(this.props.username);\n    if(prevState.dataSet.length!==testData.length){\n      this.setState({\n        dataSet: data\n      })\n    }\n  }\n  \n  render() {\n    const { dataSet} = this.state;\n    const FilterData=()=>{\n      return dataSet.filter(row=>{\n        if(Object.keys(row).length >1){\n          return row;\n        }return null;\n      }).map(row=>row);\n    }\n    return (\n      <div>\n        <ChartComponent workoutNames={workoutName} otherGraph={true} data={FilterData()} />\n      </div>\n    );\n  }\n}","// import React, { Component } from 'react';\n// import { DropdownButton, MenuItem } from 'react-bootstrap';\n\n// export class DropDown extends Component {\n//   state = {\n//     currentSelection: this.props.title,\n//   }\n//   update = (e) => {\n//     this.props.onUpdate(e);\n//     this.setState({currentSelection: e});\n//   }\n//   render() {\n//     let options;\n//       try {\n//         options = this.props.options.map((name) => {\n//           return <MenuItem key={`keyItem_${name}`} eventKey={name} >{name}</MenuItem>;\n//         });\n//       } catch (error) {\n//         console.log(error);\n//         options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n//       }\n//     return (\n//       <DropdownButton\n//         title={this.state.currentSelection}\n//         bsStyle=\"default\"\n//         key={`dropdown_${this.props.title}`}\n//         id={`dropdown_workout`}\n//         onSelect={this.update}\n//       >\n//         {options}\n//       </DropdownButton>\n//     )\n//   }\n// }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst styles = theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing.unit * 2,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 200,\n  },\n});\n\nclass DropDown extends React.Component {\n  state = {\n    currentSelection: this.props.title,\n    open: false,\n  };\n\n  handleChange = event => {\n    this.props.onUpdate(event.target.value);\n    this.setState({ currentSelection: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { title, classes } = this.props;\n    let options;\n    try {\n      options = this.props.options.map((name) => {\n        return <option key={`keyItem_${name}`} value={name} >{name}</option>;\n      });\n    } catch (error) {\n      console.log(error);\n      options = <option eventKey={`option_date`} >date</option>;\n    }\n\n    return (\n      // <form autoComplete=\"off\">\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"testSelect_materialUI\">{title}</InputLabel>\n          <Select\n            native\n            autoWidth={false}\n            open={this.state.open}\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n            value={this.state.currentSelection}\n            onChange={this.handleChange}\n            inputProps={{\n              name: title,\n              id: 'testSelect_materialUI',\n            }}\n          >\n            {options}\n          </Select>\n        </FormControl>\n      // </form>\n    );\n  }\n}\n\nDropDown.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DropDown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst styles = theme => ({\n    root: {\n        alignItems: 'center',\n    },\n    wrapper: {\n        margin: theme.spacing.unit,\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n});\n\nclass CircularIntegration extends React.Component {\n    timer = null;\n\n    state = {\n        loading: false,\n        success: false,\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    handleButtonClick = () => {\n        this.props.onClick();\n        if (!this.state.loading) {\n            this.setState(\n                {\n                    success: false,\n                    loading: true,\n                },\n                () => {\n                    this.timer = setTimeout(() => {\n                        this.setState({\n                            loading: false,\n                            success: true,\n                        });\n                    }, 2000);\n                },\n            );\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.changed !== this.props.changed) {\n            this.setState({\n                success: !this.props.changed,\n            })\n        }\n\n    }\n\n    render() {\n        const { success } = this.state;\n        const { classes } = this.props;\n        const buttonClassname = classNames({\n            [classes.buttonSuccess]: success,\n        });\n        return (\n            <div className={classes.root}>\n                <Button\n                    variant=\"fab\"\n                    color=\"primary\"\n                    className={buttonClassname}\n                    onClick={this.handleButtonClick}\n                >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                </Button>\n            </div>\n        );\n    }\n}\n\nCircularIntegration.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIntegration);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularIntegration from './Progress';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n});\n\n\nclass InputComponent extends Component {\n  state = {\n    name: this.props.selName,\n    workout: \"WorkoutName\",\n    set: \"\",\n    rep: 0,\n    weight: 0,\n    date: this.props.selDate,\n  }\n  handleButton() {\n    let { name, workout } = this.state;\n    this.props.submitted({\n      name: name,\n      workout: workout,\n      weight: this.state.weight,\n      set: this.state.set,\n      date: this.state.date,\n    });\n    this.setState({\n      set: \"\",\n    })\n  }\n  handleButtonAddSet() {\n    if (this.state.set.length) {\n      this.setState({\n        set: `${this.state.set}-${this.state.rep}`,\n      })\n    } else {\n      this.setState({\n        set: `${this.state.rep}`,\n      })\n    }\n  }\n  handleButtonDeleteSet() {\n    this.setState({\n      set: \"\"\n    })\n  }\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  componentDidMount() {\n    this.setState({\n      name: this.props.selName,\n      workout: this.props.selWorkout,\n      date: this.props.selDate,\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.selName !== prevProps.selName) {\n      this.setState({\n        name: this.props.selName\n      });\n    }\n    if (this.props.selWorkout !== prevProps.selWorkout) {\n      this.setState({\n        workout: this.props.selWorkout\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <TextField\n            id=\"ID_Weight\"\n            label=\"Weight\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            placeholder=\"Kg\"\n            margin=\"normal\"\n            type='number'\n            // value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            helperText={`Last weight was: ${this.props.prevWeight}`}\n          />\n          <TextField\n            id=\"ID_Rep\"\n            label=\"rep\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            placeholder=\"Reps\"\n            margin=\"normal\"\n            type='number'\n            onChange={this.handleChange('rep')}\n            helperText={`Last set was: ${this.props.prevSet}`}\n          />\n          <IconButton mini=\"true\" color=\"primary\" onClick={(e) => { this.handleButtonAddSet(); }}><AddIcon /></IconButton>\n          <IconButton mini=\"true\" color=\"secondary\" onClick={(e) => { this.handleButtonDeleteSet(); }}><DeleteIcon /></IconButton>\n          <p>{`Your current Weight: ${this.state.weight} Set: ${this.state.set}`}</p>\n        </div>\n        <CircularIntegration changed={this.props.changed} onClick={(e) => { this.handleButton(); }}/>\n      </div>\n    )\n  }\n}\n\nInputComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputComponent);\n\n","import React, { Component } from 'react';\nimport DropDown from './Selector';\nimport { workoutName, getCell, getDateTable, getCellIndex, getWeightsFor } from './Store';\nimport InputComponent from './Input';\nimport { WriteSingleCell } from './SheetWriter';\n\nexport class WorkoutTab extends Component {\n    state = {\n        username: \"none\",\n        workout: \"none\",\n        date: '',\n        changed: true,\n    }\n    DateOptions(){\n        let date = getDateTable(this.state.workout);\n        if(typeof date !== 'undefined'){\n        return date.reverse();\n    }\n    return [];\n    }\n    componentDidMount() {\n        this.setState({\n            username: this.props.username\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.username !== prevProps.username) {\n            this.setState({\n                username: this.props.username\n            })\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <div>\n                    <DropDown options={workoutName} title='workout' onUpdate={(e) => { this.setState({ workout: e, changed: true }); }} />\n                    <DropDown options={this.DateOptions()} title='date' onUpdate={(e) => { this.setState({ date: e, changed: true }); }} />\n\n                </div>\n                <InputComponent changed={this.state.changed} prevWeight={getWeightsFor(this.state.workout, this.state.username).lastWeight} prevSet={getWeightsFor(this.state.workout, this.state.username).lastSet} selName={this.state.username} selDate={this.state.date} selWorkout={this.state.workout} submitted={(props) => { props.date = this.state.date; bundleWriter(props);this.setState({changed: false}) }} />\n\n            </div>\n        );\n    }\n}\n\nconst bundleWriter = (props) => {\n    let { date, workout, name, set, weight } = props;\n    const cellIndex = getCellIndex(workout, date);\n    weight = weight.replace(/[.]/g, \",\");\n    date = date.substr(0, (date + \" \").indexOf(\" \"));\n    let writeDate = {\n        value: date,\n        range: `${workout}!A${cellIndex}`,\n    }\n    let writeWeight = {\n        value: weight,\n        range: `${workout}!${getCell(name)}${cellIndex}`,\n    }\n    let writeSet = {\n        value: set,\n        range: `${workout}!${String.fromCharCode(getCell(name).charCodeAt(0) + 3)}${cellIndex}`,\n    }\n    WriteSingleCell(writeDate);\n    WriteSingleCell(writeWeight);\n    WriteSingleCell(writeSet);\n}","import React, { Component } from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nconst sizeIcon = 4;\nconst pad = 10;\n\nexport class UserRadio extends Component {\n    onChange = (e) => {\n        this.props.choiceEvent(e);\n    }\n    render() {\n        let RadioOptions = this.props.options.map((option) => {\n            return <RadioButton iconSize={sizeIcon} iconInnerSize={sizeIcon} padding={pad} key={`Option_${option}`} value={option}>{option}</RadioButton>;\n        });\n        return (\n            <RadioGroup onChange={this.onChange} >\n                {RadioOptions.map(name => name)}\n            </RadioGroup>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n\nconst styles = theme => ({\n  root: {\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass MultipleSelect extends React.Component {\n  state = {\n    name: [],\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n      componentDidUpdate(prevProps, prevState) {\n        if (this.state !== prevState) {\n            this.props.choiceEvent(this.state.name);\n        }\n    }\n\n  render() {\n    const { classes, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"select-multiple-chip\">Workout</InputLabel>\n          <Select\n            multiple\n            value={this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {this.props.options.map(name => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={{\n                  fontWeight:\n                    this.state.name.indexOf(name) === -1\n                      ? theme.typography.fontWeightRegular\n                      : theme.typography.fontWeightMedium,\n                }}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nMultipleSelect.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(MultipleSelect);\n","import React, { Component } from 'react';\nimport { versusData, fillVersusData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\nimport { UserRadio } from './UserRadio';\n// import { CheckBoxContainer } from './CheckBoxContainer';\nimport MultipleSelect from './CheckBoxContainer';\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\n\nexport class VersusTab extends Component {\n    state = {\n        props: {\n            username: this.props.username,\n            versusname: this.props.username,\n            versusworkout: [],\n        },\n        versusData: versusData,\n        otherGraph: false,\n        barGraph: true,\n    }\n    componentDidMount() {\n\n        this.setState({\n            props: {\n                username: this.props.username,\n                versusname: this.props.username,\n                versusworkout: [],\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleNameChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusname: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleWorkoutChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusworkout: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleGraphChoice(e) {\n        switch (e) {\n            case 'Bar Graph':\n                this.setState({\n                    barGraph: true,\n                    otherGraph: false,\n                });\n                break;\n            case 'Other Graph':\n                this.setState({\n                    barGraph: false,\n                    otherGraph: true,\n                });\n                break;\n\n            default:\n                break;\n        }\n        this.setState({\n            graphStyle: e\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.props !== prevState.props) {\n            this.setState({\n                versusData: fillVersusData(this.state.props),\n            });\n        }\n    }\n    render() {\n            const FilterNameOptions = () => {\n                try {\n                    return this.props.userNames.filter(name => { if (name !== this.props.username) { return true; } return false; }).map(name => name);\n                } catch (e) {\n                    return [];\n                }\n                \n            }\n\n        const FilterData = () => {\n            return this.state.versusData.filter(row => {\n                if (Object.keys(row).length > 1) {\n                    return row;\n                } return null;\n            }).map(row => {\n                return row;\n            });\n        }\n        const GetOptionNames = () => {\n            let returnVal = [];\n            workoutName.filter(name => {\n                if ((this.state.props.versusworkout).includes(name)) {\n                    return true;\n                } return false;\n            }).map(option => {\n                returnVal.push(`Your ${option}`);\n                returnVal.push(`${this.state.props.versusname}'s ${option}`);\n                return null;\n            });\n            return returnVal;\n        }\n        return (\n            <div>\n                <div>\n                    <UserRadio choiceEvent={(e) => { this.handleNameChoice(e) }} options={FilterNameOptions()} />\n                </div>\n                <ColoredLine color=\"Grey\" />\n                <div>\n                    {/* <CheckBoxContainer choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames} /> */}\n                    <MultipleSelect choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames}/>\n                </div>\n                <ChartComponent workoutNames={GetOptionNames()} otherGraph={this.state.otherGraph} barGraph={this.state.barGraph} data={FilterData()} />\n                <UserRadio choiceEvent={(e) => { this.handleGraphChoice(e) }} options={['Bar Graph', 'Other Graph']} />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport {getStatistics} from './Store';\nimport _ from 'lodash';\n\nexport class StatisticPage extends Component{\n    render(){\n        const getData = () =>{\n            let test = \"\";\n            test = _.map(getStatistics(this.props.username), (val, key)=> {\n                return <p key={`stat_${key}`}>{`${key}: ${val}`}</p>;\n            });\n            return test;\n        }\n        return (\n            <div>\n                <h2>Statistics</h2>\n            {getData()}\n            </div>\n        );\n    }\n}","\nimport React, {Component} from 'react';\nimport { GoogleSheet } from '@lourd/react-google-sheet';\nimport apiKey from './apiKey.json';\nimport { fillOfflineSheet} from './Store';\n\nconst MyData = ({ data, content }) => {\n  fillOfflineSheet(data, content);\n  return null;\n}\n\n// Wraps the GoogleSheet component to provide some basic components\n// for display loading & error states\nconst SimpleGSheet = props => (\n  <GoogleSheet id={props.id} range={props.range}>\n    {({ error, data, loading }) =>\n      loading ? (\n        'Getting data...'\n      ) : error ? (\n        JSON.stringify(error, null, 2)\n      ) : data ? (\n        <MyData data={data} content={props.content}/>\n      ) : null\n    }\n  </GoogleSheet>\n)\n\nclass DataFetcher extends Component {\n  state = {\n    id: JSON.parse(JSON.stringify(apiKey.SheetID)),\n    range: '',\n    submitted: null,\n  }\n\n  componentDidMount(){\n    this.setState({\n        submitted: {\n          id: this.props.sheetId,\n          range: this.props.sheetRange\n        },\n      })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      submitted: {\n        id: this.state.id,\n        range: this.state.range,\n      },\n    })\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <div>\n        {this.state.submitted && (\n          <SimpleGSheet\n            id={this.state.submitted.id}\n            range={this.state.submitted.range}\n            content={this.props.content}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DataFetcher","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Field extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.any,\n    label: PropTypes.string\n  };\n\n  handleChange = event => {\n    this.props.onChange(this.props.name, event.target.value);\n  };\n\n  render() {\n    const label = this.props.label || this.props.name;\n    return (\n      <div>\n        <label htmlFor={this.props.name}>{label}</label>\n        <div>\n          <input\n            id={this.props.name}\n            value={this.props.value}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Field;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Field from './Field'\n\nclass ApiForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  state = {\n    apiKey: this.props.init.apiKey,\n    clientId: this.props.init.clientId,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.onSubmit(this.state)\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Field\n          name=\"apiKey\"\n          label=\"Google Developer API Key\"\n          value={this.state.apiKey}\n          onChange={this.handleChange}\n        />\n        <Field\n          name=\"clientId\"\n          label=\"Application Client ID\"\n          value={this.state.clientId}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default ApiForm","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = {\n  root: {\n    // flexGrow: 1,\n  },\n};\n\nclass MenuAppBar extends React.Component {\n  state = {\n    anchorEl: null,\n  };\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleLogout = () => {\n    this.props.loggedOut(true);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.root}>\n            \n              <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : null}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <Avatar alt=\"Remy Sharp\" src={this.props.image} className={classes.avatar} />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.handleLogout}>Logout</MenuItem>\n                </Menu>\n              </div>\n      </div>\n    );\n  }\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MenuAppBar);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleSheetsApi } from '@lourd/react-google-sheet';\nimport DataFetcher from './DynamicSpreadsheet';\nimport ApiForm from './ApiForm';\nimport apiKey from './apiKey.json';\nimport { profileChecker, workoutName } from './Store';\nimport Button from '@material-ui/core/Button'\nimport MenuAppBar from './Avatar';\n\n// import { Button } from 'react-bootstrap';\n\nconst range = \"!A:Q\";\n\nlet fetchOptions = workoutName.map((option, i) => {\n    return <DataFetcher key={`Option_${option}`} sheetRange={`${option}${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content={option} />;\n});\n\nconst SheetsDemo = props => (\n    <GoogleSheetsApi clientId={props.clientId} apiKey={props.apiKey} scopes={[\"https://www.googleapis.com/auth/spreadsheets\"]}>\n        {({ authorize, loading: apiLoading, signout, signedIn, error }) => (\n            <div>\n                {apiLoading ? (\n                    <div>loading...</div>\n                ) : error ? (\n                    JSON.stringify(error, null, 2)\n                ) : signedIn ? (\n                    (<div>\n                        {props.getAuth(window.gapi.auth2.getAuthInstance())}\n                        <Button size=\"large\" variant=\"raised\" color=\"default\" onClick={(e)=>{props.handleLogout(e); signout(e)}}>logOut</Button>\n                    </div>)\n                ) : (\n                                <Button size=\"large\" variant=\"raised\" color=\"default\" onClick={authorize}>Authorize</Button>\n                            )\n                }\n                {signedIn && getMeta()}\n                {signedIn && <DataFetcher sheetRange={`changedFlag!A1`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"changedFlag\" />}\n                {signedIn && props.getAuth(window.gapi.auth2.getAuthInstance())}\n                {props.loadSheets && signedIn && (\n                    <div>\n                        <DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" />\n                        <DataFetcher sheetRange={`PowerClean${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"PowerClean\" />\n                        <DataFetcher sheetRange={`Squat${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Squat\" />\n                        <DataFetcher sheetRange={`Press${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Press\" />\n                        <DataFetcher sheetRange={`BenchPress${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"BenchPress\" />\n                        <DataFetcher sheetRange={`Deadlift${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Deadlift\" />\n                        <DataFetcher sheetRange={`Bent-Over Barbell Row${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Bent-Over Barbell Row\" />\n                    </div>\n                )}\n            </div>\n        )}\n    </GoogleSheetsApi >\n\n)\nSheetsDemo.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    apiKey: PropTypes.string.isRequired,\n}\n\nconst getProfile = () => {\n    let auth = window.gapi.auth2.getAuthInstance();\n    let profile = auth.currentUser.get().getBasicProfile();\n    profileChecker(profile);\n    return { username: profile.getName(), image: profile.getImageUrl() };\n}\n\nconst getMeta = () => {\n    for (let i = 0; i < 1000; i++) {\n        var request = {\n            // The ID of the spreadsheet to retrieve metadata from.\n            spreadsheetId: apiKey.SheetID,  // TODO: Update placeholder value.\n\n            // The ID of the developer metadata to retrieve.\n            metadataId: 0,  // TODO: Update placeholder value.\n\n            auth: window.gapi.auth2.getAuthInstance(),\n        };\n\n        window.gapi.client.sheets.spreadsheets.developerMetadata.get(request, function (err, response) {\n            if (err) {\n                console.error(err);\n                return;\n            }\n\n            // TODO: Change code below to process the `response` object:\n            console.log(JSON.stringify(response, null, 2));\n        });\n    }\n\n}\n\nexport class SheetExtractor extends Component {\n    state = {\n        apiKey: apiKey.key,\n        clientId:\n            apiKey['Client-ID'],\n        range: \"\",\n    }\n    componentDidMount() {\n        this.setState({\n            range: this.props.range\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.range !== this.props.range) {\n            this.setState({\n                range: this.props.range\n            })\n            return true;\n        } return false;\n    }\n\n    handleSubmit = state => this.setState(state)\n    render() {\n        return (\n            <div>\n                {this.state.apiKey ? (\n                    <SheetsDemo\n                        apiKey={this.state.apiKey}\n                        clientId={this.state.clientId}\n                        loadSheets={this.props.loadSheets}\n                        signin={(accepted, profile) => { this.props.signedin(accepted, profile) }}\n                        getAuth={(auth)=>this.props.getAuth(auth)}\n                        handleLogout={(e)=>this.props.handleLogout(e)}\n                    />\n                ) : (\n                        <ApiForm onSubmit={this.handleSubmit} init={this.state} />\n                    )}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { PersonalSpace } from './PersonalSpace';\nimport { WorkoutTab } from './YourWorkout';\nimport { VersusTab } from './VersusSpace';\nimport { StatisticPage } from './Statistics';\nimport { getNames, workoutName, changeFlag } from './Store';\nimport { SheetExtractor } from './SheetAccess';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport MenuAppBar from './Avatar';\nimport Paper from '@material-ui/core/Paper';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography align='center' component=\"div\" dir={dir}>\n            {children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        fontSize: 15,\n    },\n    form: {\n        width: '100%', // Fix IE11 issue.\n        marginTop: theme.spacing.unit * 7,\n    },\n    layout: {\n        width: 'auto',\n        display: 'block', // Fix IE11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n});\n\nclass FullWidthTabs extends React.Component {\n    state = {\n        value: 0,\n        credentials: \"User\",\n        accepted: false,\n        auth: null,\n        image: null,\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({ value: index });\n    };\n    handleLogout(e) {\n        if (this.state.accepted) {\n            this.setState({\n                accepted: false,\n            })\n        }\n    }\n    authHandler = (auth) => {\n        let profile = auth.currentUser.get().getBasicProfile();\n        let receivedID = profile.getId();\n        if (this.state.auth !== null) {\n            let oldID = this.state.auth.currentUser.Ab.El;\n            if (receivedID !== oldID) {\n                this.setState({\n                    credentials: profile.getName(),\n                    auth: auth,\n                    accepted: auth.isSignedIn.Ab,\n                    image: profile.getImageUrl(),\n                })\n            }\n        } else {\n            this.setState({\n                credentials: profile.getName(),\n                auth: auth,\n                accepted: auth.isSignedIn.Ab,\n                image: profile.getImageUrl(),\n            })\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.accepted) {\n            if (!this.state.auth.isSignedIn.Ab) {\n                this.setState({\n                    accepted: false,\n                })\n            }\n        }\n    }\n    render() {\n        const { classes, theme } = this.props;\n        const { value } = this.state;\n        return (\n            <div fontSize=\"2rem\">\n                {this.state.accepted && <div className={classes.root}>\n                    <Paper className={classes.root} style={{'font-size': '18px'}}>\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            fullWidth\n                        >\n                            <Tab label=\"Statistics\" />\n                            <Tab label=\"Personal-Space\" />\n                            <Tab label=\"Your Workout\" />\n                            <Tab label=\"Versus-Space\" />\n                            <MenuAppBar loggedOut={(e) => this.handleLogout(e)} image={this.state.image} />\n                        </Tabs>\n\n                    </Paper>\n\n                    {value === 0 && <TabContainer>\n                        <StatisticPage username={this.state.credentials} />\n                    </TabContainer>}\n                    {value === 1 && <TabContainer>\n                        <PersonalSpace username={this.state.credentials} />\n                    </TabContainer>}\n                    {value === 2 && <TabContainer>\n                        <WorkoutTab username={this.state.credentials} />\n                    </TabContainer>}\n                    {value === 3 && <TabContainer>\n                        <VersusTab username={this.state.credentials} userNames={getNames()} workoutNames={workoutName} />\n                    </TabContainer>}\n\n                    {/* <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={this.state.value}\n                        onChangeIndex={this.handleChangeIndex}\n                        className={classes.form}\n                    >\n                        <TabContainer dir={theme.direction}>\n                            <StatisticPage username={this.state.credentials} />\n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            <PersonalSpace username={this.state.credentials} />\n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            <WorkoutTab username={this.state.credentials} />\n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            <VersusTab username={this.state.credentials} userNames={getNames()} workoutNames={workoutName} />\n                        </TabContainer>\n\n                    </SwipeableViews> */}\n                </div>}\n                <div align=\"center\" >\n                    <SheetExtractor handleLogout={(e) => this.handleLogout(e)} getAuth={(e) => { this.authHandler(e) }} loadSheets={changeFlag} signedin={(accepted, user) => { this.setState({ accepted: accepted, credentials: user.username, image: user.image }); }} />\n                </div>\n            </div>\n        );\n    }\n}\n\nFullWidthTabs.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(FullWidthTabs);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'typeface-roboto';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FullWidthTabs from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter} from 'react-router-dom';\nrequire('babel-polyfill');\n\nReactDOM.render(\n    // <BrowserRouter basename={process.env.PUBLIC_URL} >\n        <FullWidthTabs />\n    // </BrowserRouter>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}
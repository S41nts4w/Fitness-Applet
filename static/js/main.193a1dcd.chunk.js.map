{"version":3,"sources":["logo.svg","SheetWriter.js","Store.js","Graphs.js","PersonalSpace.js","Selector.js","Input.js","YourWorkout.js","UserRadio.js","Checkbox.js","CheckBoxContainer.js","VersusSpace.js","Statistics.js","DynamicSpreadsheet.js","Field.js","ApiForm.js","SheetAccess.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SheetWriter_WriteSingleCell","props","body","values","value","window","gapi","client","sheets","spreadsheets","update","spreadsheetId","apiKey","SheetID","range","valueInputOption","resource","then","response","result","console","log","concat","updatedCells","userData","getCell","user","scope","Object","map","id","name","sheetScope","Store_workoutName","dateTable","Squat","Deadlift","Press","BenchPress","Bent-Over Barbell Row","PowerClean","dataSheets","getCellIndex","workout","date","index","filter","cell","i","Store_fillWorkoutDates","workoutName","today","moment_default","tupel","keys","length","push","sort","a","b","first","second","duration","diff","asDays","lastEntry","format","pop","Store_fillVersusData","versusData","time","entry","username","versusname","weight","versusworkout","includes","entryName","assign","_defineProperty","e","sortable","slice","Store_data","styles","outer","paddingTop","paddingBottom","position","height","inner","top","left","width","colors","colorChanger","Graphs_ChartComponent","data","react_default","createElement","style","lib","barGraph","Graphs_BarGraph","workoutNames","otherGraph","Graphs_LineGraph","graphOption","this","option","key","label","fontSize","dataKey","fill","strokeDasharray","wrapperStyle","bottom","element","react","connectNulls","type","stroke","margin","right","PersonalSpace_PersonalSpace","_Component","PersonalSpace","_getPrototypeOf2","_temp","_this","PersonalSpace_classCallCheck","_len","arguments","args","Array","_key","PersonalSpace_possibleConstructorReturn","PersonalSpace_getPrototypeOf","call","apply","state","dataSet","Store_fillData","setState","row","PersonalSpace_inherits","Selector_DropDown","DropDown","Selector_classCallCheck","Selector_possibleConstructorReturn","Selector_getPrototypeOf","currentSelection","title","onUpdate","options","es","eventKey","error","bsStyle","onSelect","Selector_inherits","Input_InputComponent","InputComponent","Input_classCallCheck","Input_possibleConstructorReturn","Input_getPrototypeOf","selName","set","selDate","_this$state","refs","maxWeight","submitted","parseFloat","reps","selWorkout","prevProps","_this2","ref","placeholder","onClick","handleButtonAddSet","handleButton","Input_inherits","YourWorkout_WorkoutTab","WorkoutTab","YourWorkout_classCallCheck","YourWorkout_possibleConstructorReturn","YourWorkout_getPrototypeOf","lodash_default","forEach","lastElem","hasOwnProperty","test","getWeightsFor","YourWorkout_bundleWriter","YourWorkout_inherits","writeDate","substr","indexOf","writeWeight","writeSet","String","fromCharCode","charCodeAt","UserRadio_UserRadio","UserRadio","UserRadio_classCallCheck","UserRadio_possibleConstructorReturn","UserRadio_getPrototypeOf","onChange","choiceEvent","RadioOptions","react_radio_buttons_lib","iconSize","iconInnerSize","padding","UserRadio_inherits","Checkbox_Checkbox","_ref","_ref$type","_ref$checked","checked","prototype","prop_types_default","string","isRequired","bool","func","CheckBoxContainer_CheckBoxContainer","CheckBoxContainer","CheckBoxContainer_classCallCheck","CheckBoxContainer_getPrototypeOf","checkedItems","Map","handleChange","bind","CheckBoxContainer_assertThisInitialized","item","target","isChecked","prevState","returnArray","CheckBoxOptions","get","Fragment","CheckBoxContainer_inherits","VersusSpace_ColoredLine","color","backgroundColor","VersusSpace_VersusTab","VersusTab","VersusSpace_classCallCheck","VersusSpace_possibleConstructorReturn","VersusSpace_getPrototypeOf","VersusSpace_objectSpread","graphStyle","returnVal","handleNameChoice","userNames","handleWorkoutChoice","handleGraphChoice","VersusSpace_inherits","Statistics_StatisticPage","StatisticPage","Statistics_classCallCheck","Statistics_possibleConstructorReturn","Statistics_getPrototypeOf","statistic","mapValues","replace","rep","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","v","err","return","j","val","Statistics_inherits","DynamicSpreadsheet_MyData","tableName","currentDate","workoutObject","_objectSpread","fillOfflineSheet","content","DynamicSpreadsheet_SimpleGSheet","index_es","_ref2","loading","JSON","stringify","DynamicSpreadsheet","parse","handleSubmit","event","preventDefault","DynamicSpreadsheet_defineProperty","sheetId","sheetRange","src_Field","htmlFor","Component","src_ApiForm","init","clientId","onSubmit","ApiForm_defineProperty","SheetAccess_SheetsDemo","scopes","authorize","apiLoading","signedIn","signout","loggedIn","signin","SheetAccess_getProfile","profile","auth2","getAuthInstance","currentUser","getBasicProfile","newUser","reduce","prevVal","curVal","getId","newUserNumber","getName","writeID","writeName","writeScope","Store_profileChecker","SheetAccess_SheetExtractor","SheetExtractor","SheetAccess_classCallCheck","SheetAccess_possibleConstructorReturn","SheetAccess_getPrototypeOf","snapshot","accepted","signedin","SheetAccess_inherits","App_styles","thumbnail","App_App","credentials","Sheet","image","getImageUrl","className","App_HeaderComponent","App_Navigation","logOut","App_Routing","_this3","Route","path","render","creds","src","logo_default","alt","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","pullLeft","react_router_bootstrap_lib","Text","pullRight","href","circle","responsive","src_App_0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","react_dom_default","BrowserRouter","basename","document","getElementById","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"qSAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mNCE3BC,EAAkB,SAACC,GAC5B,IAKIC,GACAC,SAJIF,EAAMG,SAMdC,OAAOC,KAAKC,OAAOC,OAAOC,aAAaN,OAAOO,QAC1CC,cAAeC,EAAOC,QACtBC,MAAOb,EAAMa,MACbC,iBAAkB,eAClBC,SAAUd,IACXe,KAAK,SAACC,GACL,IAAIC,EAASD,EAASC,OACtBC,QAAQC,IAAR,GAAAC,OAAeH,EAAOI,aAAtB,qeCdR,IACaC,KAOFC,EAAU,SAACC,GAClB,IAAIC,EAMJ,OALAC,OAAOzB,OAAOqB,GAAUK,IAAI,SAAAC,GAGtB,OAFEA,EAAGC,OAASL,IACZC,EAAQG,EAAGE,YACN,OAENL,GAEAM,GAAe,QAAS,WAAY,QAAS,aAAc,wBAAyB,cAC3FC,GAAcC,SAAaC,YAAgBC,SAAaC,cAAkBC,2BAA6BC,eACvGC,KAMSC,EAAe,SAACC,EAASC,GAClC,IAAIC,EAMJ,OALAX,EAAUS,GAASG,OAAO,SAACC,EAAMC,GAG3B,OAFED,IAASH,IACTC,EAAQG,EAAI,GACP,OAENH,GAgGX,IAAMI,EAAmB,SAACC,GACtB,IAAIC,EAAQC,MACZlB,EAAUgB,MACVtB,OAAOzB,OAAOsC,GAAYZ,IAAI,SAACwB,EAAOL,GAClC,OAAIpB,OAAO0B,KAAKD,EAAMH,IAAcK,OAAS,GACzCrB,EAAUgB,GAAaM,KAAK5B,OAAO0B,KAAKb,GAAYO,IAC7C,MAEJ,OAEXd,EAAUgB,GAAaO,KAAK,SAAUC,EAAGC,GACrC,IAAIC,EAAQR,IAAOM,EAAG,YAClBG,EAAST,IAAOO,EAAG,YAEvB,OADWP,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAC1BG,WAEhB,IAAIC,EAAYb,IAAOlB,EAAUgB,GAAahB,EAAUgB,GAAaK,OAAS,GAAI,YACrEH,EAAAM,EAAOI,SAASX,EAAMY,KAAKE,IAAYD,UACtC,EACV9B,EAAUgB,GAAaM,KAAvB,GAAAlC,OAA+B6B,EAAMe,OAAO,YAA5C,cAEAhC,EAAUgB,GAAaiB,MACvBjC,EAAUgB,GAAaM,KAAvB,GAAAlC,OAA+B6B,EAAMe,OAAO,YAA5C,eA6EKE,EAAiB,SAACnE,GAC3BoE,KACAzC,OAAO0B,KAAKb,GAAYZ,IAAI,SAAAe,GAIxB,OAHAyB,EAAWb,MACPc,KAAQ1B,IAEL,OAEXhB,OAAOzB,OAAOsC,GAAYZ,IAAI,SAACc,EAASK,GA8BpC,OA7BApB,OAAO0B,KAAKX,GAASd,IAAI,SAAA0C,GACrB,IACQtE,EAAMuE,WAAavE,EAAMwE,YACzB7C,OAAOzB,OAAOsC,EAAW4B,EAAWrB,GAAGsB,MAAMC,GAAOtE,EAAMuE,WAAW3C,IAAI,SAAA6C,GACrE,GAAIzE,EAAM0E,cAAcC,SAASL,GAAQ,CACrC,IAAIM,iBAAoBN,GAExB,OADAF,EAAWrB,GAAKpB,OAAOkD,OAAPC,KAAiBF,EAAYH,GAAUL,EAAWrB,IAC3D,KAEX,OAAO,OAEXpB,OAAOzB,OAAOsC,EAAW4B,EAAWrB,GAAGsB,MAAMC,GAAOtE,EAAMwE,aAAa5C,IAAI,SAAA6C,GACvE,GAAIzE,EAAM0E,cAAcC,SAASL,GAAQ,CACrC,IAAIM,YAAe5E,EAAMwE,WAArB,OAAAnD,OAAqCiD,GAEzC,OADAF,EAAWrB,GAAKpB,OAAOkD,OAAPC,KAAiBF,EAAYH,GAAUL,EAAWrB,IAC3D,KAEX,OAAO,QAGXpB,OAAOzB,OAAOsC,EAAW4B,EAAWrB,GAAGsB,MAAMC,GAAOtE,EAAMuE,WAAW3C,IAAI,SAAA6C,GAErE,OADAL,EAAWrB,GAAKpB,OAAOkD,OAAPC,KAAiBR,EAAQG,GAAUL,EAAWrB,IACvD,OAGjB,MAAOgC,IAET,OAAO,OAEJ,OAGX,IAAIC,KACJ,IAAK,IAAIrC,KAAQyB,EACbY,EAASzB,MAAMZ,EAAMyB,EAAWzB,KAWpC,OARAqC,EAASxB,KAAK,SAAUC,EAAGC,GACvB,IAAIC,EAAQR,IAAOM,EAAE,GAAGY,KAAM,YAC1BT,EAAST,IAAOO,EAAE,GAAGW,KAAM,YAE/B,OADWlB,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAC1BG,WAEhBK,KACAY,EAASpD,IAAI,SAAC0C,EAAOvB,GAAQ,OAAOuB,EAAMW,MAAM,GAAGrD,IAAI,SAAAkB,GAAA,OAAQsB,EAAWrB,GAAKpB,OAAOkD,OAAO/B,EAAMsB,EAAWrB,QACvGqB,GAuCAA,KACAc,qkCClUX,IAAMC,GACJC,OACEC,WAAY,MACZC,cAAe,MACfC,SAAU,WACVC,OAAQ,KAEVC,OACEF,SAAU,WACVG,IAAK,IACLC,KAAM,IACNC,MAAO,OACPJ,OAAQ,SAGNK,GAAU,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC7GC,EAAe,SAAC/C,GACpB,OAAO8C,EAAO9C,EAAI8C,EAAOvC,SAIdyC,EAAiB,SAAC/F,GAC7B,IAAIgG,EAAOhG,EAAMgG,KACjB,OACEC,EAAAxC,EAAAyC,cAAA,OAAKC,MAAOhB,EAAOC,OACjBa,EAAAxC,EAAAyC,cAAA,OAAKC,MAAOhB,EAAOM,OACjBQ,EAAAxC,EAAAyC,cAACE,EAAA,oBAAD,KACGpG,EAAMqG,SAAWJ,EAAAxC,EAAAyC,cAACI,GAASC,aAAcvG,EAAMuG,aAAcP,KAAMA,IAAWhG,EAAMwG,WAAaP,EAAAxC,EAAAyC,cAACO,GAAUF,aAAcvG,EAAMuG,aAAcP,KAAMA,IAAWC,EAAAxC,EAAAyC,cAAA,2CAOpKI,0HAEF,IAAII,EAAcC,KAAK3G,MAAMuG,aAAa3E,IAAI,SAACgF,EAAQ7D,GACrD,OAAOkD,EAAAxC,EAAAyC,cAACE,EAAA,KAAIS,IAAA,UAAAxF,OAAeuF,GAAUE,OAASvB,SAAU,MAAOwB,SAAU,IAAMC,QAASJ,EAAQK,KAAMnB,EAAa/C,OAErH,OACEkD,EAAAxC,EAAAyC,cAACE,EAAA,oBAAD,KACEH,EAAAxC,EAAAyC,cAACE,EAAA,UAASJ,KAAMW,KAAK3G,MAAMgG,MACzBC,EAAAxC,EAAAyC,cAACE,EAAA,eAAcc,gBAAgB,QAC/BjB,EAAAxC,EAAAyC,cAACE,EAAA,OAAMY,QAAQ,SACff,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAOe,cAAgBC,OAAQ,KAC/BV,EAAY9E,IAAI,SAAAyF,GAAA,OAAWA,IAC5BpB,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,sBAdakB,EAAA,WAsBjBb,0HAEF,IAAIC,EAAcC,KAAK3G,MAAMuG,aAAa3E,IAAI,SAACgF,EAAQ7D,GACrD,OAAOkD,EAAAxC,EAAAyC,cAACE,EAAA,MAAKS,IAAA,UAAAxF,OAAeuF,GAAUW,cAAc,EAAMT,OAASvB,SAAU,MAAOwB,SAAU,IAAMS,KAAK,WAAWR,QAASJ,EAAQa,OAAQ3B,EAAa/C,OAE5J,OACEkD,EAAAxC,EAAAyC,cAACE,EAAA,oBAAD,KACEH,EAAAxC,EAAAyC,cAACE,EAAA,WAAUJ,KAAMW,KAAK3G,MAAMgG,KAC1B0B,QAAUhC,IAAK,EAAGiC,MAAO,GAAIhC,KAAM,GAAIyB,OAAQ,IAC/CnB,EAAAxC,EAAAyC,cAACE,EAAA,eAAcc,gBAAgB,QAC/BjB,EAAAxC,EAAAyC,cAACE,EAAA,OAAMY,QAAQ,SACff,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAD,MACAH,EAAAxC,EAAAyC,cAACE,EAAA,QAAOe,cAAgBC,OAAQ,KAC/BV,EAAY9E,IAAI,SAAAyF,GAAA,OAAWA,IAC5BpB,EAAAxC,EAAAyC,cAACE,EAAA,MAAD,sBAfckB,EAAA,uwBCvDjB,IAAMM,EAAb,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,+FAAAC,CAAAvB,KAAAmB,GAAA,QAAAK,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAC,EAAAP,GAAAD,EAAAC,EAAAO,EAAA7B,MAAAoB,EAAAU,EAAAX,IAAAY,KAAAC,MAAAZ,GAAApB,MAAAtF,OAAAgH,KAAAJ,EACEW,OACEC,QAAS3D,GAFb8C,cAAA,SAAAF,OAAAjB,IAAA,oBAAA1G,MAAA,YF4LwB,SAACoE,GACrBW,KACAvD,OAAO0B,KAAKb,GAAYZ,IAAI,SAAAe,GAIxB,OAHAuC,EAAK3B,MACDc,KAAQ1B,IAEL,OAEXhB,OAAOzB,OAAOsC,GAAYZ,IAAI,SAACc,EAASK,GAWpC,OAVApB,OAAO0B,KAAKX,GAASd,IAAI,SAAA0C,GACrB,IACI3C,OAAOzB,OAAOsC,EAAW0C,EAAKnC,GAAGsB,MAAMC,GAAOC,IAAW3C,IAAI,SAAA6C,GAEzD,OADAS,EAAKnC,GAAKpB,OAAOkD,OAAPC,KAAiBR,EAAQG,GAAUS,EAAKnC,IAC3C,OAEb,MAAOgC,IAET,OAAO,OAEJ,OAGX,IAAIC,KACJ,IAAK,IAAIrC,KAAQuC,EACbF,EAASzB,MAAMZ,EAAMuC,EAAKvC,KAG9BqC,EAASxB,KAAK,SAAUC,EAAGC,GACvB,IAAIC,EAAQR,IAAOM,EAAE,GAAGY,KAAM,YAC1BT,EAAST,IAAOO,EAAE,GAAGW,KAAM,YAG/B,OAFWlB,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAClBG,WAGxBmB,KACAF,EAASpD,IAAI,SAAC0C,EAAOvB,GAAQ,OAAOuB,EAAMW,MAAM,GAAGrD,IAAI,SAAAkB,GAAA,OAAQoC,EAAKnC,GAAKpB,OAAOkD,OAAO/B,EAAMoC,EAAKnC,QE1NlG+F,CAASnC,KAAK3G,MAAMuE,UACpBoC,KAAKoC,UACHF,QAAS3D,OAPf2B,IAAA,SAAA1G,MAAA,WAWW,IACC0I,EAAWlC,KAAKiC,MAAhBC,QAQR,OACE5C,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAACH,GAAeQ,aAAcvE,EAAawE,YAAY,EAAMR,KARxD6C,EAAQhG,OAAO,SAAAmG,GACpB,OAAGrH,OAAO0B,KAAK2F,GAAK1F,OAAQ,EACnB0F,EACD,OACPpH,IAAI,SAAAoH,GAAA,OAAKA,0MAlBlBC,CAAAnB,EAAAD,GAAAC,EAAA,CAAmCR,EAAA,0wBCD5B,IAAM4B,GAAb,SAAArB,GAAA,SAAAsB,IAAA,IAAApB,EAAAC,EAAAC,+FAAAmB,CAAAzC,KAAAwC,GAAA,QAAAhB,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAc,GAAApB,GAAAD,EAAAC,EAAAoB,GAAA1C,MAAAoB,EAAAuB,GAAAH,IAAAT,KAAAC,MAAAZ,GAAApB,MAAAtF,OAAAgH,KAAAJ,EACEW,OACEW,iBAAkBtB,EAAKjI,MAAMwJ,OAFjCvB,EAIExH,OAAS,SAACsE,GACRkD,EAAKjI,MAAMyJ,SAAS1E,GACpBkD,EAAKc,UAAUQ,iBAAkBxE,KANrCiD,cAAA,SAAAmB,OAAAtC,IAAA,SAAA1G,MAAA,WASI,IAAIuJ,EACF,IACEA,EAAU/C,KAAK3G,MAAM0J,QAAQ9H,IAAI,SAACE,GAChC,OAAOmE,EAAAxC,EAAAyC,cAACyD,EAAA,GAAS9C,IAAA,WAAAxF,OAAgBS,GAAQ8H,SAAU9H,GAAQA,KAE7D,MAAO+H,GACP1I,QAAQC,IAAIyI,GACZH,EAAUzD,EAAAxC,EAAAyC,cAACyD,EAAA,GAASC,SAAA,eAAV,QAEd,OACE3D,EAAAxC,EAAAyC,cAACyD,EAAA,GACCH,MAAO7C,KAAKiC,MAAMW,iBAClBO,QAAQ,UACRjD,IAAA,YAAAxF,OAAiBsF,KAAK3G,MAAMwJ,OAC5B3H,GAAA,mBACAkI,SAAUpD,KAAKlG,QAEdiJ,sMA1BTM,CAAAb,EAAAtB,GAAAsB,EAAA,CAA8B7B,EAAA,gxBCAvB,IAAM2C,GAAb,SAAApC,GAAA,SAAAqC,IAAA,IAAAnC,EAAAC,EAAAC,+FAAAkC,CAAAxD,KAAAuD,GAAA,QAAA/B,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAA6B,GAAAnC,GAAAD,EAAAC,EAAAmC,GAAAzD,MAAAoB,EAAAsC,GAAAH,IAAAxB,KAAAC,MAAAZ,GAAApB,MAAAtF,OAAAgH,KAAAJ,EACEW,OACE9G,KAAMmG,EAAKjI,MAAMsK,QACjB5H,QAAS,cACT6H,IAAK,IACL9F,OAAQ,EACR9B,KAAMsF,EAAKjI,MAAMwK,SANrBxC,cAAA,SAAAkC,OAAArD,IAAA,eAAA1G,MAAA,WAQiB,IAAAsK,EACW9D,KAAKiC,MAAvB9G,EADO2I,EACP3I,KAAMY,EADC+H,EACD/H,QACZiE,KAAKoC,UAAWtE,OAAQkC,KAAK+D,KAAKC,UAAUxK,QAC5CwG,KAAK3G,MAAM4K,WACT9I,KAAMA,EACNY,QAASA,EACT+B,OAAQkC,KAAKiC,MAAMnE,OACnB8F,IAAK5D,KAAKiC,MAAM2B,IAChB5H,KAAMgE,KAAKiC,MAAMjG,UAhBvBkE,IAAA,qBAAA1G,MAAA,WAoBQ0K,WAAWlE,KAAK+D,KAAKC,UAAUxK,SAAWwG,KAAKiC,MAAMnE,OACvDkC,KAAKoC,UACHtE,OAAQoG,WAAWlE,KAAK+D,KAAKC,UAAUxK,OACvCoK,cAAQ5D,KAAK+D,KAAKI,KAAK3K,SAGzBwG,KAAKoC,UACHwB,cAAQ5D,KAAKiC,MAAM2B,IAAnB,KAAAlJ,OAA0BsF,KAAK+D,KAAKI,KAAK3K,YA3BjD0G,IAAA,oBAAA1G,MAAA,WAgCIwG,KAAKoC,UACHjH,KAAM6E,KAAK3G,MAAMsK,QACjB5H,QAASiE,KAAK3G,MAAM+K,WACpBpI,KAAMgE,KAAK3G,MAAMwK,aAnCvB3D,IAAA,qBAAA1G,MAAA,SAsCqB6K,GACbrE,KAAK3G,MAAMsK,UAAYU,EAAUV,SACnC3D,KAAKoC,UACHjH,KAAM6E,KAAK3G,MAAMsK,UAGjB3D,KAAK3G,MAAM+K,aAAeC,EAAUD,YACtCpE,KAAKoC,UACHrG,QAASiE,KAAK3G,MAAM+K,gBA9C5BlE,IAAA,SAAA1G,MAAA,WAkDW,IAAA8K,EAAAtE,KACP,OACEV,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,SAAOgF,IAAI,YAAY1D,KAAK,SAAS2D,YAAY,OACjDlF,EAAAxC,EAAAyC,cAAA,SAAOgF,IAAI,OAAO1D,KAAK,SAAS2D,YAAY,WAC5ClF,EAAAxC,EAAAyC,cAACyD,EAAA,GAAOG,QAAQ,UAAUsB,QAAS,SAACrG,GAAQkG,EAAKI,uBAAjD,WACApF,EAAAxC,EAAAyC,cAAA,iCAAA7E,OAA4BsF,KAAKiC,MAAMnE,OAAvC,UAAApD,OAAsDsF,KAAKiC,MAAM2B,OAEnEtE,EAAAxC,EAAAyC,cAACyD,EAAA,GAAOG,QAAQ,UAAUsB,QAAS,SAACrG,GAAQkG,EAAKK,iBAAjD,kNA3DRC,CAAArB,EAAArC,GAAAqC,EAAA,CAAoC5C,EAAA,gxBCG7B,IAAMkE,GAAb,SAAA3D,GAAA,SAAA4D,IAAA,IAAA1D,EAAAC,EAAAC,+FAAAyD,CAAA/E,KAAA8E,GAAA,QAAAtD,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAoD,GAAA1D,GAAAD,EAAAC,EAAA0D,GAAAhF,MAAAoB,EAAA6D,GAAAH,IAAA/C,KAAAC,MAAAZ,GAAApB,MAAAtF,OAAAgH,KAAAJ,EACIW,OACIrE,SAAU,OACV7B,QAAS,OACTC,KAAM,IAJdqF,cAAA,SAAAyD,OAAA5E,IAAA,oBAAA1G,MAAA,WAOQwG,KAAKoC,UACDxE,SAAUoC,KAAK3G,MAAMuE,cARjCsC,IAAA,qBAAA1G,MAAA,SAWuB6K,GACXrE,KAAK3G,MAAMuE,WAAayG,EAAUzG,UAClCoC,KAAKoC,UACDxE,SAAUoC,KAAK3G,MAAMuE,cAdrCsC,IAAA,SAAA1G,MAAA,WAkBa,ILEgB8C,EKFhBgI,EAAAtE,KACL,OACIV,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAACgD,IAASQ,QAAS1H,EAAawH,MAAM,UAAUC,SAAU,SAAC1E,GAAQkG,EAAKlC,UAAWrG,QAASqC,OAC5FkB,EAAAxC,EAAAyC,cAACgD,IAASQ,SLHDzG,EKGuB0D,KAAKiC,MAAMlG,QLFpDT,EAAUgB,IKEoDuG,MAAM,OAAOC,SAAU,SAAC1E,GAAQkG,EAAKlC,UAAWpG,KAAMoC,QAE/GkB,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,sCL4Eb,SAAuBxD,EAAS6B,GACnC,GAAgB,SAAZ7B,GAAmC,SAAb6B,EAAqB,CAC3C,IAAIS,KACJ6G,EAAApI,EAAEqI,QAAQtJ,EAAY,SAACrC,EAAO0G,GAC1B7B,EAASzB,MAAMsD,EAAKrE,EAAWqE,OAEnC7B,EAASxB,KAAK,SAAUC,EAAGC,GACvB,IAAIC,EAAQR,IAAOM,EAAE,GAAI,YACrBG,EAAST,IAAOO,EAAE,GAAI,YAE1B,OADWP,EAAAM,EAAOI,SAASF,EAAMG,KAAKF,IAC1BG,WAGhB,IADA,IAAIgI,EAAW/G,EAASd,OAChB6H,EAAS,GAAGrJ,GAASsJ,eAAezH,IAAiC,IAApBS,EAAS1B,QAC9DyI,EAAW/G,EAASd,MAExB,GAAI6H,EAAS,GAAGrJ,GAASsJ,eAAezH,GAEpC,MADI0H,kBAAkBF,EAAS,GAAGrJ,GAAS6B,GAAUE,OAAjD,WAAApD,OAAiE0K,EAAS,GAAGrJ,GAAS6B,GAAUgG,KAI5G,OAAO,KKhGU2B,CAAcvF,KAAKiC,MAAMlG,QAASiE,KAAKiC,MAAMrE,WAElD0B,EAAAxC,EAAAyC,cAAA,gCACAD,EAAAxC,EAAAyC,cAAC+D,IAAeK,QAAS3D,KAAKiC,MAAMrE,SAAUiG,QAAS7D,KAAKiC,MAAMjG,KAAMoI,WAAYpE,KAAKiC,MAAMlG,QAASkI,UAAW,SAAC5K,GAAYA,EAAM2C,KAAOsI,EAAKrC,MAAMjG,KAAMwJ,GAAanM,8MA9B3LoM,CAAAX,EAAA5D,GAAA4D,EAAA,CAAgCnE,EAAA,WAoC1B6E,GAAe,SAACnM,GAClB,IAAI2C,EAAO3C,EAAM2C,KAEb0J,GACAlM,MAFJwC,EAAOA,EAAK2J,OAAO,GAAI3J,EAAO,KAAK4J,QAAQ,MAGvC1L,gBAAUb,EAAM0C,QAAhB,MAAArB,OAA4BoB,EAAazC,EAAM0C,QAAS1C,EAAM2C,QAE9D6J,GACArM,MAAOH,EAAMyE,OACb5D,gBAAUb,EAAM0C,QAAhB,KAAArB,OAA2BG,EAAQxB,EAAM8B,OAAzCT,OAAiDoB,EAAazC,EAAM0C,QAAS1C,EAAM2C,QAEnF8J,GACAtM,MAAOH,EAAMuK,IACb1J,gBAAUb,EAAM0C,QAAhB,KAAArB,OAA2BqL,OAAOC,aAAanL,EAAQxB,EAAM8B,MAAM8K,WAAW,GAAK,IAAnFvL,OAAwFoB,EAAazC,EAAM0C,QAAS1C,EAAM2C,QAE9H5C,EAAgBsM,GAChBtM,EAAgByM,GAChBzM,EAAgB0M,mxBCzDpB,IAGaI,GAAb,SAAAhF,GAAA,SAAAiF,IAAA,IAAA/E,EAAAC,EAAAC,+FAAA8E,CAAApG,KAAAmG,GAAA,QAAA3E,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAyE,GAAA/E,GAAAD,EAAAC,EAAA+E,GAAArG,MAAAoB,EAAAkF,GAAAH,IAAApE,KAAAC,MAAAZ,GAAApB,MAAAtF,OAAAgH,KAAAJ,EACIiF,SAAW,SAACnI,GACRkD,EAAKjI,MAAMmN,YAAYpI,IAF/BiD,cAAA,SAAA8E,OAAAjG,IAAA,SAAA1G,MAAA,WAKQ,IAAIiN,EAAezG,KAAK3G,MAAM0J,QAAQ9H,IAAI,SAACgF,GACvC,OAAOX,EAAAxC,EAAAyC,cAACmH,GAAA,aAAYC,SATf,EASmCC,cATnC,EAS4DC,QARjE,GAQ+E3G,IAAA,UAAAxF,OAAeuF,GAAUzG,MAAOyG,GAASA,KAE5H,OACIX,EAAAxC,EAAAyC,cAACmH,GAAA,YAAWH,SAAUvG,KAAKuG,UACtBE,EAAaxL,IAAI,SAAAE,GAAA,OAAQA,4MAV1C2L,CAAAX,EAAAjF,GAAAiF,EAAA,CAA+BxF,EAAA,8BCFlBoG,GAAW,SAAAC,GAAA,IAAAC,EAAAD,EAAGnG,YAAH,IAAAoG,EAAU,WAAVA,EAAsB9L,EAAtB6L,EAAsB7L,KAAtB+L,EAAAF,EAA4BG,eAA5B,IAAAD,KAA6CX,EAA7CS,EAA6CT,SAA7C,OACpBjH,EAAAxC,EAAAyC,cAAA,SAAOsB,KAAMA,EAAM1F,KAAMA,EAAMgM,QAASA,EAASZ,SAAUA,osBAG/DQ,GAASK,WACLvG,KAAMwG,GAAAvK,EAAUwK,OAChBnM,KAAMkM,GAAAvK,EAAUwK,OAAOC,WACvBJ,QAASE,GAAAvK,EAAU0K,KACnBjB,SAAUc,GAAAvK,EAAU2K,KAAKF,YCRtB,IAAMG,GAAb,SAAAxG,GACI,SAAAyG,EAAYtO,GAAO,IAAAiI,MAAA,mGAAAsG,CAAA5H,KAAA2H,KACf3H,MAAAsB,MAAAuG,GAAAF,GAAA5F,KAAA/B,KAAM3G,sDAED4I,OACD6F,aAAc,IAAIC,KAGtBzG,EAAK0G,aAAe1G,EAAK0G,aAAaC,KAAlBC,MAAA5G,KAPLA,YADvB,SAAAqG,OAAAzH,IAAA,eAAA1G,MAAA,SAWiB4E,GACT,IAAM+J,EAAO/J,EAAEgK,OAAOjN,KAChBkN,EAAYjK,EAAEgK,OAAOjB,QAC3BnH,KAAKoC,SAAS,SAAAkG,GAAA,OAAgBR,aAAcQ,EAAUR,aAAalE,IAAIuE,EAAME,SAdrFnI,IAAA,qBAAA1G,MAAA,SAgBuB6K,EAAWiE,GAC1B,GAAItI,KAAKiC,QAAUqG,EAAW,CAC1B,IAAIC,KACJvI,KAAKiC,MAAM6F,aAAa3C,QAAQ,SAAC3L,EAAO0G,IACtB,IAAV1G,IAC2B,IAAvB+O,EAAY5L,OACZ4L,EAAY,GAAKrI,EAEjBqI,EAAY3L,KAAKsD,MAK7BF,KAAK3G,MAAMmN,YAAY+B,OA7BnCrI,IAAA,SAAA1G,MAAA,WAiCa,IAAA8K,EAAAtE,KACCwI,EAAkBxI,KAAK3G,MAAM0J,QAAQ9H,IAAI,SAAAgF,GAC3C,OAAOX,EAAAxC,EAAAyC,cAAA,SAAOW,IAAA,kBAAAxF,OAAuBuF,IAChCA,EACDX,EAAAxC,EAAAyC,cAACwH,IAAS5L,KAAM8E,EAAQkH,QAAS7C,EAAKrC,MAAM6F,aAAaW,IAAIxI,GAASsG,SAAUjC,EAAK0D,kBAG7F,OACI1I,EAAAxC,EAAAyC,cAACD,EAAAxC,EAAM4L,SAAP,KACKF,EAAgBvN,IAAI,SAAAgF,GAAA,OAAUA,4MA1C/C0I,CAAAhB,EAAAzG,GAAAyG,EAAA,CAAuChH,EAAA,gtCCGvC,IAAMiI,GAAc,SAAA5B,GAAA,IAAG6B,EAAH7B,EAAG6B,MAAH,OAChBvJ,EAAAxC,EAAAyC,cAAA,MACIC,OACIqJ,MAAOA,EACPC,gBAAiBD,EACjBhK,OAAQ,OAKPkK,GAAb,SAAA7H,GAAA,SAAA8H,IAAA,IAAA5H,EAAAC,EAAAC,+FAAA2H,CAAAjJ,KAAAgJ,GAAA,QAAAxH,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAsH,GAAA5H,GAAAD,EAAAC,EAAA4H,GAAAlJ,MAAAoB,EAAA+H,GAAAH,IAAAjH,KAAAC,MAAAZ,GAAApB,MAAAtF,OAAAgH,KAAAJ,EACIW,OACI5I,OACIuE,SAAU0D,EAAKjI,MAAMuE,SACrBC,WAAYyD,EAAKjI,MAAMuE,SACvBG,kBAEJN,WAAYA,EACZoC,YAAY,EACZH,UAAU,GATlB2B,cAAA,SAAA2H,OAAA9I,IAAA,oBAAA1G,MAAA,WAaQwG,KAAKoC,UACD/I,OACIuE,SAAUoC,KAAK3G,MAAMuE,SACrBC,WAAYmC,KAAK3G,MAAMuE,SACvBG,kBAEJN,WAAYD,EAAewC,KAAKiC,MAAM5I,YAnBlD6G,IAAA,mBAAA1G,MAAA,SAsBqB4E,GACb4B,KAAKoC,UACD/I,MAAM+P,MACCpJ,KAAKiC,MAAM5I,OACdwE,WAAYO,IAEhBX,WAAYD,EAAewC,KAAKiC,MAAM5I,YA5BlD6G,IAAA,sBAAA1G,MAAA,SA+BwB4E,GAChB4B,KAAKoC,UACD/I,MAAM+P,MACCpJ,KAAKiC,MAAM5I,OACd0E,cAAeK,IAEnBX,WAAYD,EAAewC,KAAKiC,MAAM5I,YArClD6G,IAAA,oBAAA1G,MAAA,SAwCsB4E,GACd,OAAQA,GACJ,IAAK,YACL4B,KAAKoC,UACD1C,UAAU,EACVG,YAAY,IAEZ,MACJ,IAAK,cACLG,KAAKoC,UACD1C,UAAU,EACVG,YAAY,IAOpBG,KAAKoC,UACDiH,WAAYjL,OA3DxB8B,IAAA,qBAAA1G,MAAA,SA+DuB6K,EAAWiE,GACtBtI,KAAKiC,MAAM5I,QAAUiP,EAAUjP,OAC/B2G,KAAKoC,UACD3E,WAAYD,EAAewC,KAAKiC,MAAM5I,YAlEtD6G,IAAA,SAAA1G,MAAA,WAsEa,IAcG8P,EAdHhF,EAAAtE,KA0BL,OACIV,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAC2G,IAAUM,YAAa,SAACpI,GAAQkG,EAAKiF,iBAAiBnL,IAAM2E,QA3B9DuB,EAAKjL,MAAMmQ,UAAUtN,OAAO,SAAAf,GAAU,OAAIA,IAASmJ,EAAKjL,MAAMuE,WAA4C3C,IAAI,SAAAE,GAAA,OAAQA,OA6BzHmE,EAAAxC,EAAAyC,cAACqJ,IAAYC,MAAM,SACnBvJ,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAACmI,IAAkBlB,YAAa,SAACpI,GAAQkG,EAAKmF,oBAAoBrL,IAAM2E,QAAS/C,KAAK3G,MAAMuG,gBAEhGN,EAAAxC,EAAAyC,cAACH,GAAeQ,cArBhB0J,KACJjO,EAAYa,OAAO,SAAAf,GACf,QAAKmJ,EAAKrC,MAAM5I,MAAM0E,cAAeC,SAAS7C,KAG/CF,IAAI,SAAAgF,GAGH,OAFAqJ,EAAU1M,KAAV,QAAAlC,OAAuBuF,IACvBqJ,EAAU1M,KAAV,GAAAlC,OAAkB4J,EAAKrC,MAAM5I,MAAMwE,WAAnC,OAAAnD,OAAmDuF,IAC5C,OAEJqJ,GAW6CzJ,WAAYG,KAAKiC,MAAMpC,WAAYH,SAAUM,KAAKiC,MAAMvC,SAAUL,KA9B/GiF,EAAKrC,MAAMxE,WAAWvB,OAAO,SAAAmG,GAChC,OAAIrH,OAAO0B,KAAK2F,GAAK1F,OAAS,EACnB0F,EACF,OACVpH,IAAI,SAAAoH,GACH,OAAOA,MA0BP/C,EAAAxC,EAAAyC,cAAC2G,IAAUM,YAAa,SAACpI,GAAQkG,EAAKoF,kBAAkBtL,IAAM2E,SAAU,YAAa,yNA1GrG4G,CAAAX,EAAA9H,GAAA8H,EAAA,CAA+BrI,EAAA,gxBCZxB,IAAMiJ,GAAb,SAAA1I,GAAA,SAAA2I,IAAA,mGAAAC,CAAA9J,KAAA6J,GAAAE,GAAA/J,KAAAgK,GAAAH,GAAA7H,MAAAhC,KAAAyB,sBAAA,SAAAoI,OAAA3J,IAAA,SAAA1G,MAAA,WACY,IVyJkBoE,EACtBqM,EU1JI3I,EAAAtB,KAQJ,OACIV,EAAAxC,EAAAyC,cAAA,WACID,EAAAxC,EAAAyC,cAAA,wBAPG2F,EAAApI,EAAE7B,KVsJS2C,EUtJS0D,EAAKjI,MAAMuE,SVwJ9CsH,EAAApI,EAAEoN,UAAU5O,EAAW,SAAC9B,EAAO2B,GAK3B,OAJA8O,OACOA,EADP9L,KAEKhD,EAAO,IAEL+J,EAAApI,EAAEqI,QAAQ3L,EAAO,SAACwC,GAErB,GADAA,EAAOA,EAAKmO,QAAQ,UAAW,IAC3BtO,EAAWG,GAAMb,GAAMkK,eAAezH,GAAW,CACjD,IAAIgG,EAAM/H,EAAWG,GAAMb,GAAMyC,GAAUgG,IAC3C,GAAqB,qBAATA,EAAsB,CAC9B,IAAI3H,EAAQ,EACRmO,GAAO,IAFmBC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAG9B,QAAAC,EAAAC,EAAc9G,EAAd+G,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAmB,KAAVU,EAAUN,EAAAjR,MACL,MAANuR,EAEAX,IADAnO,GACa,GAEbmO,EAAInO,GAASmO,EAAInO,GAAOvB,OAAOqQ,IART,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAW9B,IAAK,IAAIW,EAAI,EAAGA,EAAId,EAAIzN,OAAQuO,IAC5BjB,EAAU9O,KAAqD,EAA1CU,EAAWG,GAAMb,GAAMyC,GAAUE,OAAc,IAAMsM,EAAIc,IAI1F,OAAO1R,MAIRyQ,GUrLkD,SAACkB,EAAKjL,GACnD,OAAOZ,EAAAxC,EAAAyC,cAAA,YAAA7E,OAAOwF,EAAP,MAAAxF,OAAeyQ,8MALtCC,CAAAvB,EAAA3I,GAAA2I,EAAA,CAAmClJ,EAAA,oyBCEnC,IAAM0K,GAAS,SAAArE,GAEb,OX8B8B,SAAC9E,EAASoJ,GACtC,GAAkB,iBAAdA,EAA8B,CAC9B,IAAIC,EAAc,GAClBrJ,EAAQ5D,MAAM,GAAGrD,IAAI,SAACoH,EAAKjG,GA8BvB,OA7BAiG,EAAIpH,IAAI,SAACkB,EAAM+O,GACX,GAAa,KAAT/O,EAAa,CACb,GAAU,IAAN+O,EAAS,CACT,IAAKlQ,OAAO0B,KAAKb,GAAYmC,SAAS7B,GAAO,CAEzC,IADA,IAAIqP,KACKpP,EAAI,EAAGA,EAAIf,EAAYsB,OAAQP,IACpCoP,EAAgBxQ,OAAOkD,OAAPC,KAAiB9C,EAAYe,OAAWoP,GAE5D3P,EAAWM,GAAXsP,KAAwBD,GAE5BD,EAAcpP,OACX,IAAK+O,EAAI,GAAK,IAAM,GACnBtQ,EAASyK,eAAe6F,GAAI,CAC5B,IAAMpN,EAASoG,WAAW/H,EAAKgO,QAAQ,WAAY,IAAIA,QAAQ,KAAM,MACrEtO,EAAW0P,GAAaD,GAAatQ,OAAOkD,OAAPC,KAAiBvD,EAASsQ,GAAG/P,MAAS2C,WAAYjC,EAAW0P,GAAaD,IAGnHJ,EAAI,IAAOA,EAAI,GAAK,IAAM,GACtBtQ,EAASyK,eAAe6F,EAAI,KAC5BrP,EAAW0P,GAAaD,GAAW1Q,EAASsQ,EAAI,GAAG/P,MAAnDsQ,KACO5P,EAAW0P,GAAaD,GAAW1Q,EAASsQ,EAAI,GAAG/P,OACtDyI,IAAOzH,KAKvB,OAAO,OAGJ,OAEXE,EAAiBiP,OACI,iBAAdA,GACPpJ,EAAQ5D,MAAM,GAAGrD,IAAI,SAACoH,EAAKjG,GA2BvB,OA1BAiG,EAAIpH,IAAI,SAACkB,EAAM+O,GACX,OAAQA,GACJ,KAAK,EACDtQ,EA3EF,EA2E4BwB,EAAK,GAA/BqP,KACO7Q,EA5ET,EA4EmCwB,EAAK,IAClClB,GAAMiB,IAEV,MACJ,KAAK,EACDvB,EAjFF,EAiF4BwB,EAAK,GAA/BqP,KACO7Q,EAlFT,EAkFmCwB,EAAK,IAClCjB,KAAQgB,IAEZ,MACJ,KAAK,EACDvB,EAvFF,EAuF4BwB,EAAK,GAA/BqP,KACO7Q,EAxFT,EAwFmCwB,EAAK,IAClChB,WAAce,IAO1B,OAAO,OAEJ,OW/FjBuP,CADoC1E,EAApB3H,KAAoB2H,EAAd2E,SAEf,MAKHC,GAAe,SAAAvS,GAAA,OACnBiG,EAAAxC,EAAAyC,cAACsM,GAAA,GAAY3Q,GAAI7B,EAAM6B,GAAIhB,MAAOb,EAAMa,OACrC,SAAA4R,GAAA,IAAG5I,EAAH4I,EAAG5I,MAAO7D,EAAVyM,EAAUzM,KAAV,OAAAyM,EAAgBC,QAEb,kBACE7I,EACF8I,KAAKC,UAAU/I,EAAO,KAAM,GAC1B7D,EACFC,EAAAxC,EAAAyC,cAAC8L,IAAOhM,KAAMA,EAAMsM,QAAStS,EAAMsS,UACjC,QAgDKO,yRA1CbjK,OACE/G,GAAI8Q,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UACrCC,MAAO,GACP+J,UAAW,QAYbmI,aAAe,SAAAC,GACbA,EAAMC,iBACNhL,EAAKc,UACH6B,WACE/I,GAAIoG,EAAKW,MAAM/G,GACfhB,MAAOoH,EAAKW,MAAM/H,YAKxB8N,aAAe,SAAC9H,EAAK1G,GAAN,OAAgB8H,EAAKc,+HAALmK,IAAiBrM,EAAM1G,4EAlBpDwG,KAAKoC,UACD6B,WACE/I,GAAI8E,KAAK3G,MAAMmT,QACftS,MAAO8F,KAAK3G,MAAMoT,+CAkBxB,OACEnN,EAAAxC,EAAAyC,cAAA,WACGS,KAAKiC,MAAMgC,WACV3E,EAAAxC,EAAAyC,cAACqM,IACC1Q,GAAI8E,KAAKiC,MAAMgC,UAAU/I,GACzBhB,MAAO8F,KAAKiC,MAAMgC,UAAU/J,MAC5ByR,QAAS3L,KAAK3G,MAAMsS,2NAnCNhL,EAAA,oxBCKX+L,yRArBb1E,aAAe,SAAAqE,GACb/K,EAAKjI,MAAMkN,SAASjF,EAAKjI,MAAM8B,KAAMkR,EAAMjE,OAAO5O,oEAIlD,IAAM2G,EAAQH,KAAK3G,MAAM8G,OAASH,KAAK3G,MAAM8B,KAC7C,OACEmE,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,SAAOoN,QAAS3M,KAAK3G,MAAM8B,MAAOgF,GAClCb,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAA,SACErE,GAAI8E,KAAK3G,MAAM8B,KACf3B,MAAOwG,KAAK3G,MAAMG,MAClB+M,SAAUvG,KAAKgI,iOArBP1I,EAAAxC,EAAM8P,oxBCuCXC,yRAjCb5K,OACEjI,OAAQsH,EAAKjI,MAAMyT,KAAK9S,OACxB+S,SAAUzL,EAAKjI,MAAMyT,KAAKC,YAG5BX,aAAe,SAAAC,GACbA,EAAMC,iBACNhL,EAAKjI,MAAM2T,SAAS1L,EAAKW,UAG3B+F,aAAe,SAAC9H,EAAK1G,GAAN,OAAgB8H,EAAKc,+HAAL6K,IAAiB/M,EAAM1G,iEAGpD,OACE8F,EAAAxC,EAAAyC,cAAA,QAAMyN,SAAUhN,KAAKoM,cACnB9M,EAAAxC,EAAAyC,cAACmN,IACCvR,KAAK,SACLgF,MAAM,2BACN3G,MAAOwG,KAAKiC,MAAMjI,OAClBuM,SAAUvG,KAAKgI,eAEjB1I,EAAAxC,EAAAyC,cAACmN,IACCvR,KAAK,WACLgF,MAAM,wBACN3G,MAAOwG,KAAKiC,MAAM8K,SAClBxG,SAAUvG,KAAKgI,eAEjB1I,EAAAxC,EAAAyC,cAAA,SAAOsB,KAAK,SAASrH,MAAM,4NAhCb8F,EAAAxC,EAAM8P,gxBCK5B,IAmBMM,GAAa,SAAA7T,GAAA,OACfiG,EAAAxC,EAAAyC,cAACsM,GAAA,GAAgBkB,SAAU1T,EAAM0T,SAAU/S,OAAQX,EAAMW,OAAQmT,QAAS,iDACrE,SAAAnG,GAAA,IAAGoG,EAAHpG,EAAGoG,UAAoBC,EAAvBrG,EAAc+E,QAA8BuB,GAA5CtG,EAAmCuG,QAAnCvG,EAA4CsG,UAAUpK,EAAtD8D,EAAsD9D,MAAtD,OACG5D,EAAAxC,EAAAyC,cAAA,WACK8N,EACG/N,EAAAxC,EAAAyC,cAAA,yBACA2D,EACA8I,KAAKC,UAAU/I,EAAO,KAAM,GAC5BoK,EACAjU,EAAMmU,SAAWlO,EAAAxC,EAAAyC,cAACyD,EAAA,GAAOG,QAAQ,SAASsB,QAAS,WAAQpL,EAAMoU,QAAO,EAAOC,QAA9D,YAAmGpO,EAAAxC,EAAAyC,cAACyD,EAAA,GAAOG,QAAQ,UAAUsB,QAAS,WAAQpL,EAAMoU,QAAO,EAAMC,QAA9D,WAExGpO,EAAAxC,EAAAyC,cAACyD,EAAA,GAAOG,QAAQ,UAAUsB,QAAS2I,GAAnC,YAAuD9N,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,eAA4BD,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,kBAE5K2B,GAAYhO,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,eAA4BD,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,iBAClH2B,GAAYhO,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,aAAA/R,OAjC5B,QAiC8D8R,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,eACxH2B,GAAYhO,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,QAAA/R,OAlC5B,QAkCyD8R,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,UACnH2B,GAAYhO,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,QAAA/R,OAnC5B,QAmCyD8R,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,UACnH2B,GAAYhO,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,aAAA/R,OApC5B,QAoC8D8R,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,eACxH2B,GAAYhO,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,WAAA/R,OArC5B,QAqC4D8R,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,aACtH2B,GAAYhO,EAAAxC,EAAAyC,cAAC2M,IAAYO,WAAA,wBAAA/R,OAtC5B,QAsCyE8R,QAASR,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOC,UAAW0R,QAAQ,8BAW9I+B,GAAa,WACf,IACIC,EADOlU,OAAOC,KAAKkU,MAAMC,kBACVC,YAAYrF,MAAMsF,kBAErC,OdmO0B,SAACJ,GAC3B,IAAIK,GAAU,EAQd,GAPAhT,OAAOzB,OAAOqB,GAAUqT,OAAO,SAACC,EAASC,EAAQ/R,GAC7C,IAAIlB,EAAKyS,EAAQS,QAIjB,OAHID,EAAOjT,KAAOA,IACd8S,GAAU,GAEP,OAEPA,EAAS,CACT,IAAIK,EAvSU,EAuSuBrT,OAAO0B,KAAK9B,GAAU+B,OAAU,EACrE/B,EAASyT,IACLnT,GAAMyS,EAAQS,QACdjT,KAAQwS,EAAQW,UAChBlT,WAAc2K,OAAOC,aAAc,IAAKC,WAAW,GAAKoI,IAE5D,IAAIE,GACA/U,MAAOoB,EAASyT,GAAT,GACPnU,8BAAwBc,OAAO0B,KAAK9B,GAAU+B,OAAS,IAEvD6R,GACAhV,MAAOoB,EAASyT,GAAT,KACPnU,8BAAwBc,OAAO0B,KAAK9B,GAAU+B,OAAS,IAEvD8R,GACAjV,MAAOoB,EAASyT,GAAT,WACPnU,8BAAwBc,OAAO0B,KAAK9B,GAAU+B,OAAS,IAE3DvD,EAAgBmV,GAChBnV,EAAgBoV,GAChBpV,EAAgBqV,IclQpBC,CAAef,GACRA,GAGEgB,GAAb,SAAAzN,GAAA,SAAA0N,IAAA,IAAAxN,EAAAC,EAAAC,+FAAAuN,CAAA7O,KAAA4O,GAAA,QAAApN,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAAkN,GAAAxN,GAAAD,EAAAC,EAAAwN,GAAA9O,MAAAoB,EAAA2N,GAAAH,IAAA7M,KAAAC,MAAAZ,GAAApB,MAAAtF,OAAAgH,KAAAJ,EACIW,OACIjI,OAAQgS,KAAKG,MAAMH,KAAKC,UAAUjS,EAAOkG,MACzC6M,SACIf,KAAKG,MAAMH,KAAKC,UAAUjS,EAAO,eACrCE,MAAO,IALfoH,EAsBI8K,aAAe,SAAAnK,GAAA,OAASX,EAAKc,SAASH,IAtB1CZ,cAAA,SAAAuN,OAAA1O,IAAA,oBAAA1G,MAAA,WAQQwG,KAAKoC,UACDlI,MAAO8F,KAAK3G,MAAMa,WAT9BgG,IAAA,qBAAA1G,MAAA,SAauB6K,EAAWiE,EAAW0G,GACrC,OAAI3K,EAAUnK,QAAU8F,KAAK3G,MAAMa,QAC/B8F,KAAKoC,UACDlI,MAAO8F,KAAK3G,MAAMa,SAEf,MAlBnBgG,IAAA,SAAA1G,MAAA,WAuBa,IAAA8K,EAAAtE,KACL,OACIV,EAAAxC,EAAAyC,cAAA,WACKS,KAAKiC,MAAMjI,OACRsF,EAAAxC,EAAAyC,cAAC2N,IACGlT,OAAQgG,KAAKiC,MAAMjI,OACnB+S,SAAU/M,KAAKiC,MAAM8K,SACrBS,SAAUxN,KAAK3G,MAAMmU,SACrBC,OAAQ,SAACwB,EAAUtB,GAAcrJ,EAAKjL,MAAM6V,SAASD,EAAUtB,MAG/DrO,EAAAxC,EAAAyC,cAACsN,IAAQG,SAAUhN,KAAKoM,aAAcU,KAAM9M,KAAKiC,gNAlCzEkN,CAAAP,EAAA1N,GAAA0N,EAAA,CAAoCjO,EAAA,mlCCpDpC,IAAMyO,IACJC,WACEpQ,MAAO,GACPJ,OAAQ,KAINyQ,8LACJrN,OACEsN,YAAa,OACbN,UAAU,mDAGH,IAAA3K,EAAAtE,KACDwP,EAAQ,SAACnW,GACb,OAAOiG,EAAAxC,EAAAyC,cAACoP,IAAenB,SAAUnU,EAAMmU,SAAU0B,SAAU,SAACD,EAAUnU,GAAWwJ,EAAKlC,UAAW6M,SAAUA,EAAUM,YAAazU,EAAKwT,UAAWmB,MAAO3U,EAAK4U,oBAEhK,OAA4B,IAAxB1P,KAAKiC,MAAMgN,SAEX3P,EAAAxC,EAAAyC,cAAA,OAAKoQ,UAAU,OACbrQ,EAAAxC,EAAAyC,cAACqQ,GAAD,MACAtQ,EAAAxC,EAAAyC,cAACiQ,GAAMhC,UAAU,MAGY,IAAxBxN,KAAKiC,MAAMgN,SAElB3P,EAAAxC,EAAAyC,cAAA,OAAKoQ,UAAU,OACbrQ,EAAAxC,EAAAyC,cAACqQ,GAAD,MACAtQ,EAAAxC,EAAAyC,cAACsQ,IAAWJ,MAAOzP,KAAKiC,MAAMwN,MAAOF,YAAavP,KAAKiC,MAAMsN,YAAaO,OAAQ,SAAC1R,GAAQkG,EAAKlC,UAAW6M,SAAU7Q,OACrHkB,EAAAxC,EAAAyC,cAACiQ,GAAMhC,UAAU,UALhB,iBAjBO7M,EAAA,WA6BZoP,+HACK,IAAAC,EAAAhQ,KACP,OACEV,EAAAxC,EAAAyC,cAAA,WACED,EAAAxC,EAAAyC,cAAC0Q,EAAA,GAAMC,KAAK,cAAcC,OAAQ,SAAC9W,GAAD,OAAWiG,EAAAxC,EAAAyC,cAACqK,GAAD5O,OAAAkD,UAAmB7E,GAAOuE,SAAUoS,EAAK3W,MAAM+W,YAC5F9Q,EAAAxC,EAAAyC,cAAC0Q,EAAA,GAAMC,KAAK,iBAAiBC,OAAQ,SAAC9W,GAAD,OAAWiG,EAAAxC,EAAAyC,cAAC0B,EAADjG,OAAAkD,UAAmB7E,GAAOuE,SAAUoS,EAAK3W,MAAM+W,YAC/F9Q,EAAAxC,EAAAyC,cAAC0Q,EAAA,GAAMC,KAAK,eAAeC,OAAQ,SAAC9W,GAAD,OAAWiG,EAAAxC,EAAAyC,cAACsF,GAAD7J,OAAAkD,UAAgB7E,GAAOuE,SAAUoS,EAAK3W,MAAM+W,YAC1F9Q,EAAAxC,EAAAyC,cAAC0Q,EAAA,GAAMC,KAAK,eAAeC,OAAQ,SAAC9W,GAAD,OAAWiG,EAAAxC,EAAAyC,cAACwJ,GAAD/N,OAAAkD,UAAe7E,GAAOuE,SAAUoS,EAAK3W,MAAM+W,MAAO5G,Uf/C7FxO,OAAOzB,OAAOqB,GAAUK,IAAI,SAAAH,GAAA,OAAQA,EAAKK,Oe+C2EyE,aAAcvE,wBAPvHsF,EAAA,WAahBiP,GAAkB,WACtB,OACEtQ,EAAAxC,EAAAyC,cAAA,UAAQoQ,UAAU,cAChBrQ,EAAAxC,EAAAyC,cAAA,OAAK8Q,IAAKC,EAAAxT,EAAM6S,UAAU,WAAWY,IAAI,SACzCjR,EAAAxC,EAAAyC,cAAA,MAAIoQ,UAAU,aAAd,oBAKAE,GAAa,SAACxW,GAClB,OACEiG,EAAAxC,EAAAyC,cAAA,OAAKoQ,UAAU,iBACbrQ,EAAAxC,EAAAyC,cAACyD,EAAA,GAAOwN,OAAA,EAAMC,kBAAA,GACZnR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAO0N,OAAR,KACEpR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAO2N,MAAR,KACErR,EAAAxC,EAAAyC,cAACqR,EAAA,GAAKC,GAAG,eAAT,mBAEFvR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAO8N,OAAR,OAEFxR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAO+N,SAAR,KACEzR,EAAAxC,EAAAyC,cAACyD,EAAA,GAAIgO,UAAA,GACH1R,EAAAxC,EAAAyC,cAAC0R,GAAA,eAAcJ,GAAG,kBAChBvR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAD,wBAEF1D,EAAAxC,EAAAyC,cAAC0R,GAAA,eAAcJ,GAAG,gBAChBvR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAD,sBAEF1D,EAAAxC,EAAAyC,cAAC0R,GAAA,eAAcJ,GAAG,gBAChBvR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAD,uBAGJ1D,EAAAxC,EAAAyC,cAACyD,EAAA,EAAO+N,SAAR,KACEzR,EAAAxC,EAAAyC,cAACyD,EAAA,EAAOkO,MAAKC,WAAA,GAAb,iBACgB7R,EAAAxC,EAAAyC,cAACyD,EAAA,EAAO4N,MAAKQ,KAAK,KAAK/X,EAAMkW,aAC3CjQ,EAAAxC,EAAAyC,cAAA,SAAOC,MAAO4P,GAAOC,WACnB/P,EAAAxC,EAAAyC,cAACyD,EAAA,GAAMqM,WAAA,EAAUgC,QAAA,EAAOC,YAAA,EAAWjB,IAAKhX,EAAMoW,aAMxDnQ,EAAAxC,EAAAyC,cAACwQ,IAAQK,MAAO/W,EAAMkW,gBAKbgC,GAAA,GClGTC,GAAcC,QACW,cAA7BhY,OAAOiY,SAASC,UAEe,UAA7BlY,OAAOiY,SAASC,UAEhBlY,OAAOiY,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTzX,KAAK,SAAA6X,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnQ,QACf8P,UAAUC,cAAcO,WAK1B/X,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB+X,MAAM,SAAAtP,GACL1I,QAAQ0I,MAAM,4CAA6CA,mBCtEjEuP,EAAA3V,EAASqT,OACL7Q,EAAAxC,EAAAyC,cAACmT,GAAA,GAAcC,SAAU,oBACrBrT,EAAAxC,EAAAyC,cAACgS,GAAD,OAEFqB,SAASC,eAAe,SDOf,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAI,kBAAwBrZ,OAAOiY,UAC3CqB,SAAWtZ,OAAOiY,SAASqB,OAIvC,OAGFtZ,OAAOuZ,iBAAiB,OAAQ,WAC9B,IAAMlB,YAAW,kBAAX,sBAEFN,IAiDV,SAAiCM,GAE/BmB,MAAMnB,GACHzX,KAAK,SAAAC,GAGkB,MAApBA,EAAS4Y,SACuD,IAAhE5Y,EAAS6Y,QAAQ1K,IAAI,gBAAgB7C,QAAQ,cAG7CmM,UAAUC,cAAcoB,MAAM/Y,KAAK,SAAA6X,GACjCA,EAAamB,aAAahZ,KAAK,WAC7BZ,OAAOiY,SAAS4B,aAKpBzB,GAAgBC,KAGnBU,MAAM,WACLhY,QAAQC,IACN,mEArEA8Y,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAM/Y,KAAK,WACjCG,QAAQC,IACN,+GAMJoX,GAAgBC,MClCxBG","file":"static/js/main.193a1dcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import apiKey from './apiKey.json';\n\nexport const WriteSingleCell = (props) => {\n    let values = [\n        [\n            props.value\n        ],\n    ];\n    let body = {\n        values: values\n    };\n    window.gapi.client.sheets.spreadsheets.values.update({\n        spreadsheetId: apiKey.SheetID,\n        range: props.range,\n        valueInputOption: \"USER_ENTERED\",\n        resource: body\n    }).then((response) => {\n        let result = response.result;\n        console.log(`${result.updatedCells} cells updated.`);\n    });\n}","import moment from 'moment';\nimport { WriteSingleCell } from './SheetWriter';\nimport _ from 'lodash';\n\nconst sheetUserJump = 4;\nexport const userData = {\n};\n\nexport let getNames = () => {\n    return Object.values(userData).map(user => user.name);\n}\n\nexport let getCell = (user) => {\n    let scope;\n    Object.values(userData).map(id => {\n        if (id.name === user) {\n            scope = id.sheetScope;\n        } return null;\n    })\n    return scope;\n}\nexport let workoutName = [\"Squat\", \"Deadlift\", \"Press\", \"BenchPress\", \"Bent-Over Barbell Row\", \"PowerClean\"];\nlet dateTable = { \"Squat\": [], \"Deadlift\": [], \"Press\": [], \"BenchPress\": [], \"Bent-Over Barbell Row\": [], \"PowerClean\": [], };\nlet dataSheets = {}\n\n\nexport const getDateTable = (workoutName) => {\n    return dateTable[workoutName];\n}\nexport const getCellIndex = (workout, date) => {\n    let index;\n    dateTable[workout].filter((cell, i) => {\n        if (cell === date) {\n            index = i + 3;\n        } return null\n    });\n    return index;\n}\nexport const fillOfflineSheet = (dataSet, tableName) => {\n    if (tableName !== \"UserRegister\") {\n        let currentDate = \"\";\n        dataSet.slice(2).map((row, i) => {\n            row.map((cell, j) => {\n                if (cell !== \"\") {\n                    if (j === 0) {\n                        if (!Object.keys(dataSheets).includes(cell)) {\n                            let workoutObject = {};\n                            for (let i = 0; i < workoutName.length; i++) {\n                                workoutObject = Object.assign({ [workoutName[i]]: {} }, workoutObject);\n                            }\n                            dataSheets[cell] = { ...workoutObject };\n                        }\n                        currentDate = cell;\n                    } else if ((j - 2) % 4 === 0) {\n                        if (userData.hasOwnProperty(j)) {\n                            const weight = parseFloat(cell.replace(/[^\\d,.]/g, \"\").replace(/,/g, \".\"));\n                            dataSheets[currentDate][tableName] = Object.assign({ [userData[j].name]: { weight } }, dataSheets[currentDate][tableName]);\n                        }\n                    }\n                    if (j > 4 && ((j - 1) % 4 === 0)) {\n                        if (userData.hasOwnProperty(j - 3)) {\n                            dataSheets[currentDate][tableName][userData[j - 3].name] = {\n                                ...dataSheets[currentDate][tableName][userData[j - 3].name],\n                                \"set\": cell,\n                            };\n                        }\n                    }\n                }\n                return null;\n            }\n            );\n            return null;\n        })\n        fillWorkoutDates(tableName);\n    } else if (tableName === 'UserRegister') {\n        dataSet.slice(1).map((row, i) => {\n            row.map((cell, j) => {\n                switch (j) {\n                    case 0:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"id\": cell,\n                        };\n                        break;\n                    case 1:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"name\": cell,\n                        };\n                        break;\n                    case 2:\n                        userData[(sheetUserJump * i) + 2] = {\n                            ...userData[(sheetUserJump * i) + 2],\n                            \"sheetScope\": cell,\n                        };\n                        break;\n\n                    default:\n                        break;\n                }\n                return null;\n            })\n            return null;\n        })\n    }\n    return null;\n}\n\nexport function getWeightsFor(workout, username) {\n    if (workout !== \"none\" && username !== \"none\") {\n        var sortable = [];\n        _.forEach(dataSheets, (value, key) => {\n            sortable.push([key, dataSheets[key]]);\n        })\n        sortable.sort(function (a, b) {\n            let first = moment(a[0], 'DD.MM.YY');\n            let second = moment(b[0], 'DD.MM.YY');\n            let diff = moment.duration(first.diff(second));\n            return diff.asDays();\n        });\n        let lastElem = sortable.pop();\n        while (!lastElem[1][workout].hasOwnProperty(username) && sortable.length !== 0) {\n            lastElem = sortable.pop();\n        }\n        if (lastElem[1][workout].hasOwnProperty(username)) {\n            let test = `Weight: ${lastElem[1][workout][username].weight}, Set: ${lastElem[1][workout][username].set}`;\n            return test;\n        }\n    }\n    return null;\n}\n\nconst fillWorkoutDates = (workoutName) => {\n    let today = moment();\n    dateTable[workoutName] = [];\n    Object.values(dataSheets).map((tupel, i) => {\n        if (Object.keys(tupel[workoutName]).length > 0) {\n            dateTable[workoutName].push(Object.keys(dataSheets)[i]);\n            return null;\n        }\n        return null;\n    })\n    dateTable[workoutName].sort(function (a, b) {\n        let first = moment(a, 'DD.MM.YY');\n        let second = moment(b, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    let lastEntry = moment(dateTable[workoutName][dateTable[workoutName].length - 1], 'DD.MM.YY');\n    let differ = moment.duration(today.diff(lastEntry)).asDays();\n    if (differ >= 1) {  // >= 1 because hours are irrelevant \n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    } else {\n        dateTable[workoutName].pop();\n        dateTable[workoutName].push(`${today.format('DD.MM.YY')} (today)`);\n    }\n}\n\nexport const getStatistics = (username) => {\n    let statistic;\n    _.mapValues(dateTable, (value, name) => {\n        statistic = {\n            ...statistic,\n            [name]: 0,\n        };\n        return _.forEach(value, (date) => {\n            date = date.replace(/[^\\d.]/g, \"\");\n            if (dataSheets[date][name].hasOwnProperty(username)) {\n                let set = dataSheets[date][name][username].set;\n                if (typeof (set) !== 'undefined') {\n                    let index = 0;\n                    let rep = [''];\n                    for (var v of set) {\n                        if (v === '-') {\n                            index++;\n                            rep[index] = '';\n                        } else {\n                            rep[index] = rep[index].concat(v);\n                        }\n                    }\n                    for (let j = 0; j < rep.length; j++) {\n                        statistic[name] += ((dataSheets[date][name][username].weight * 2) + 20) * rep[j];\n                    }\n                }\n            }\n            return value;\n        });\n        \n    })\n    return statistic;\n}\n\nexport const fillData = (username) => {\n    data = [];\n    Object.keys(dataSheets).map(date => {\n        data.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                Object.values(dataSheets[data[i].time][entry][username]).map(weight => {\n                    data[i] = Object.assign({ [entry]: weight }, data[i]);\n                    return null;\n                });\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in data) {\n        sortable.push([date, data[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let test = moment.duration(first.diff(second));\n        let testDays = test.asDays();\n        return testDays;\n    });\n    data = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => data[i] = Object.assign(cell, data[i])) });\n    return null;\n}\n\nexport const fillVersusData = (props) => {\n    versusData = [];\n    Object.keys(dataSheets).map(date => {\n        versusData.push({\n            \"time\": date,\n        });\n        return null;\n    });\n    Object.values(dataSheets).map((workout, i) => {\n        Object.keys(workout).map(entry => {\n            try {\n                if (props.username !== props.versusname) {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `Your ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                    Object.values(dataSheets[versusData[i].time][entry][props.versusname]).map(weight => {\n                        if (props.versusworkout.includes(entry)) {\n                            let entryName = `${props.versusname}'s ${entry}`;\n                            versusData[i] = Object.assign({ [entryName]: weight }, versusData[i]);\n                            return null;\n                        }\n                        return null;\n                    });\n                } else {\n                    Object.values(dataSheets[versusData[i].time][entry][props.username]).map(weight => {\n                        versusData[i] = Object.assign({ [entry]: weight }, versusData[i]);\n                        return null;\n                    });\n                }\n            } catch (e) {\n            }\n            return null;\n        });\n        return null;\n    });\n\n    var sortable = [];\n    for (var date in versusData) {\n        sortable.push([date, versusData[date]]);\n    }\n\n    sortable.sort(function (a, b) {\n        let first = moment(a[1].time, 'DD.MM.YY');\n        let second = moment(b[1].time, 'DD.MM.YY');\n        let diff = moment.duration(first.diff(second));\n        return diff.asDays();\n    });\n    versusData = [];\n    sortable.map((entry, i) => { return entry.slice(1).map(cell => versusData[i] = Object.assign(cell, versusData[i])) });\n    return versusData;\n}\n\n\nexport const profileChecker = (profile) => {\n    let newUser = true;\n    Object.values(userData).reduce((prevVal, curVal, i) => {\n        let id = profile.getId();\n        if (curVal.id === id) {\n            newUser = false;\n        }\n        return null;\n    })\n    if (newUser) {\n        let newUserNumber = (sheetUserJump * Object.keys(userData).length) + 2;\n        userData[newUserNumber] = {\n            \"id\": profile.getId(),\n            \"name\": profile.getName(),\n            \"sheetScope\": String.fromCharCode((\"A\").charCodeAt(0) + newUserNumber),\n        };\n        let writeID = {\n            value: userData[newUserNumber][\"id\"],\n            range: `UserRegister!A${Object.keys(userData).length + 1}`,\n        }\n        let writeName = {\n            value: userData[newUserNumber][\"name\"],\n            range: `UserRegister!B${Object.keys(userData).length + 1}`,\n        }\n        let writeScope = {\n            value: userData[newUserNumber][\"sheetScope\"],\n            range: `UserRegister!C${Object.keys(userData).length + 1}`,\n        }\n        WriteSingleCell(writeID);\n        WriteSingleCell(writeName);\n        WriteSingleCell(writeScope);\n    }\n}\n\n\nexport let versusData = [];\nexport let data = [];\n\nexport let workoutData = {\n}","import React, { Component } from 'react';\nimport { Brush, BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, LineChart } from 'recharts/lib';\n\nconst styles = {\n  outer: {\n    paddingTop: '10%',\n    paddingBottom: '10%',\n    position: 'relative',\n    height: 400\n  },\n  inner: {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100%',\n    height: '100%'\n  }\n}\nconst colors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"];\nconst colorChanger = (i) => {\n  return colors[i % colors.length];\n}\n\n\nexport const ChartComponent = (props) => {\n  let data = props.data;\n  return (\n    <div style={styles.outer} >\n      <div style={styles.inner}>\n        <ResponsiveContainer>\n          {props.barGraph ? <BarGraph workoutNames={props.workoutNames} data={data} /> : props.otherGraph ? <LineGraph workoutNames={props.workoutNames} data={data} /> : <p>Please define a graph type</p>}\n        </ResponsiveContainer>\n      </div>\n    </div>\n  )\n}\n\nclass BarGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Bar key={`Option_${option}`} label={{ position: 'top', fontSize: 11 }} dataKey={option} fill={colorChanger(i)} />;\n    });\n    return (\n      <ResponsiveContainer>\n        <BarChart data={this.props.data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </BarChart>\n      </ResponsiveContainer>\n    )\n  }\n}\n\n\nclass LineGraph extends Component {\n  render() {\n    let graphOption = this.props.workoutNames.map((option, i) => {\n      return <Line key={`Option_${option}`} connectNulls={true} label={{ position: 'top', fontSize: 11 }} type=\"monotone\" dataKey={option} stroke={colorChanger(i)} />\n    });\n    return (\n      <ResponsiveContainer>\n        <LineChart data={this.props.data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"time\" />\n          <YAxis />\n          <Tooltip />\n          <Legend wrapperStyle={{ bottom: 0 }} />\n          {graphOption.map(element => element)}\n          <Brush />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { data, fillData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\n\nexport class PersonalSpace extends Component {\n  state = {\n    dataSet: data\n  }\n  componentDidMount(){\n    fillData(this.props.username);\n    this.setState({\n      dataSet: data\n    })\n  }\n  \n  render() {\n    const { dataSet} = this.state;\n    const FilterData=()=>{\n      return dataSet.filter(row=>{\n        if(Object.keys(row).length >1){\n          return row;\n        }return null;\n      }).map(row=>row);\n    }\n    return (\n      <div>\n        <ChartComponent workoutNames={workoutName} otherGraph={true} data={FilterData()} />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\n\nexport class DropDown extends Component {\n  state = {\n    currentSelection: this.props.title,\n  }\n  update = (e) => {\n    this.props.onUpdate(e);\n    this.setState({currentSelection: e});\n  }\n  render() {\n    let options;\n      try {\n        options = this.props.options.map((name) => {\n          return <MenuItem key={`keyItem_${name}`} eventKey={name} >{name}</MenuItem>;\n        });\n      } catch (error) {\n        console.log(error);\n        options = <MenuItem eventKey={`option_date`} >date</MenuItem>;\n      }\n    return (\n      <DropdownButton\n        title={this.state.currentSelection}\n        bsStyle=\"default\"\n        key={`dropdown_${this.props.title}`}\n        id={`dropdown_workout`}\n        onSelect={this.update}\n      >\n        {options}\n      </DropdownButton>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport class InputComponent extends Component {\n  state = {\n    name: this.props.selName,\n    workout: \"WorkoutName\",\n    set: \" \",\n    weight: 0,\n    date: this.props.selDate,\n  }\n  handleButton() {\n    let { name, workout } = this.state;\n    this.setState({ weight: this.refs.maxWeight.value });\n    this.props.submitted({\n      name: name,\n      workout: workout,\n      weight: this.state.weight,\n      set: this.state.set,\n      date: this.state.date\n    });\n  }\n  handleButtonAddSet() {\n    if (parseFloat(this.refs.maxWeight.value) !== this.state.weight) {\n      this.setState({\n        weight: parseFloat(this.refs.maxWeight.value),\n        set: `${this.refs.reps.value}`\n      })\n    }else {\n      this.setState({\n        set: `${this.state.set}-${this.refs.reps.value}`\n      })\n    }\n  }\n  componentDidMount() {\n    this.setState({\n      name: this.props.selName,\n      workout: this.props.selWorkout,\n      date: this.props.selDate,\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.selName !== prevProps.selName) {\n      this.setState({\n        name: this.props.selName\n      });\n    }\n    if (this.props.selWorkout !== prevProps.selWorkout) {\n      this.setState({\n        workout: this.props.selWorkout\n      });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <input ref=\"maxWeight\" type=\"number\" placeholder=\"Kg\" />\n          <input ref=\"reps\" type=\"number\" placeholder=\"Amount\" />\n          <Button bsStyle=\"primary\" onClick={(e) => { this.handleButtonAddSet(); }}>Add Set</Button>\n          <p>{`Your current Weight: ${this.state.weight} Set: ${this.state.set}`}</p>\n        </div>\n        <Button bsStyle=\"primary\" onClick={(e) => { this.handleButton(); }}>Submit</Button>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { DropDown } from './Selector';\nimport { workoutName, getCell, getDateTable, getCellIndex, getWeightsFor } from './Store';\nimport { InputComponent } from './Input';\nimport { WriteSingleCell } from './SheetWriter'\n\nexport class WorkoutTab extends Component {\n    state = {\n        username: \"none\",\n        workout: \"none\",\n        date: ''\n    }\n    componentDidMount() {\n        this.setState({\n            username: this.props.username\n        })\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.username !== prevProps.username) {\n            this.setState({\n                username: this.props.username\n            })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <div>\n                    <DropDown options={workoutName} title='workout' onUpdate={(e) => { this.setState({ workout: e }); }} />\n                    <DropDown options={getDateTable(this.state.workout)} title='date' onUpdate={(e) => { this.setState({ date: e }); }} />\n                </div>\n                <div>\n                    <h4>Last completed weights: </h4>\n                    {getWeightsFor(this.state.workout, this.state.username)}\n                </div>\n                <h4>Enter your workout</h4>\n                <InputComponent selName={this.state.username} selDate={this.state.date} selWorkout={this.state.workout} submitted={(props) => { props.date = this.state.date; bundleWriter(props) }} />\n            </div>\n        );\n    }\n}\n\nconst bundleWriter = (props) => {\n    let date = props.date;\n    date = date.substr(0, (date + \" \").indexOf(\" \"));\n    let writeDate = {\n        value: date,\n        range: `${props.workout}!A${getCellIndex(props.workout, props.date)}`,\n    }\n    let writeWeight = {\n        value: props.weight,\n        range: `${props.workout}!${getCell(props.name)}${getCellIndex(props.workout, props.date)}`,\n    }\n    let writeSet = {\n        value: props.set,\n        range: `${props.workout}!${String.fromCharCode(getCell(props.name).charCodeAt(0) + 3)}${getCellIndex(props.workout, props.date)}`,\n    }\n    WriteSingleCell(writeDate);\n    WriteSingleCell(writeWeight);\n    WriteSingleCell(writeSet);\n}","import React, { Component } from 'react';\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\nconst sizeIcon = 4;\nconst pad = 10;\n\nexport class UserRadio extends Component {\n    onChange = (e) => {\n        this.props.choiceEvent(e);\n    }\n    render() {\n        let RadioOptions = this.props.options.map((option) => {\n            return <RadioButton iconSize={sizeIcon} iconInnerSize={sizeIcon} padding={pad} key={`Option_${option}`} value={option}>{option}</RadioButton>;\n        });\n        return (\n            <RadioGroup onChange={this.onChange} >\n                {RadioOptions.map(name => name)}\n            </RadioGroup>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Checkbox = ({ type = 'checkbox', name, checked = false, onChange }) =>(\n    <input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nCheckbox.prototype = {\n    type: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n}","import React, { Component } from 'react';\nimport { Checkbox } from './Checkbox';\n\nexport class CheckBoxContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checkedItems: new Map(),\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n        this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state !== prevState) {\n            let returnArray = [];\n            this.state.checkedItems.forEach((value, key) => {\n                if (value === true) {\n                    if (returnArray.length === 0) {\n                        returnArray[0] = key;\n                    } else {\n                        returnArray.push(key);\n                    }\n\n                }\n            })\n            this.props.choiceEvent(returnArray);\n        }\n    }\n\n    render() {\n        const CheckBoxOptions = this.props.options.map(option => {\n            return <label key={`checkBoxOption_${option}`}>\n                {option}\n                <Checkbox name={option} checked={this.state.checkedItems.get(option)} onChange={this.handleChange} />\n            </label>\n        })\n        return (\n            <React.Fragment>\n                {CheckBoxOptions.map(option => option)}\n            </React.Fragment>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { versusData, fillVersusData, workoutName } from './Store';\nimport { ChartComponent } from './Graphs';\nimport { UserRadio } from './UserRadio';\nimport { CheckBoxContainer } from './CheckBoxContainer';\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\n\nexport class VersusTab extends Component {\n    state = {\n        props: {\n            username: this.props.username,\n            versusname: this.props.username,\n            versusworkout: [],\n        },\n        versusData: versusData,\n        otherGraph: false,\n        barGraph: true,\n    }\n    componentDidMount() {\n\n        this.setState({\n            props: {\n                username: this.props.username,\n                versusname: this.props.username,\n                versusworkout: [],\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleNameChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusname: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleWorkoutChoice(e) {\n        this.setState({\n            props: {\n                ...this.state.props,\n                versusworkout: e,\n            },\n            versusData: fillVersusData(this.state.props),\n        });\n    }\n    handleGraphChoice(e) {\n        switch (e) {\n            case 'Bar Graph':\n            this.setState({\n                barGraph: true,\n                otherGraph: false,\n            });\n                break;\n            case 'Other Graph':\n            this.setState({\n                barGraph: false,\n                otherGraph: true,\n            });\n                break;\n        \n            default:\n                break;\n        }\n        this.setState({\n            graphStyle: e\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.props !== prevState.props) {\n            this.setState({\n                versusData: fillVersusData(this.state.props),\n            });\n        }\n    }\n    render() {\n        const filterNameOptions = () => {\n            return this.props.userNames.filter(name => { if (name !== this.props.username) { return true; } return false; }).map(name => name);\n        }\n        const FilterData = () => {\n            return this.state.versusData.filter(row => {\n                if (Object.keys(row).length > 1) {\n                    return row;\n                } return null;\n            }).map(row => {\n                return row;\n            });\n        }\n        const GetOptionNames = () => {\n            let returnVal = [];\n            workoutName.filter(name => {\n                if ((this.state.props.versusworkout).includes(name)) {\n                    return true;\n                } return false;\n            }).map(option => {\n                returnVal.push(`Your ${option}`);\n                returnVal.push(`${this.state.props.versusname}'s ${option}`);\n                return null;\n            });\n            return returnVal;\n        }\n        return (\n            <div>\n                <div>\n                    <UserRadio choiceEvent={(e) => { this.handleNameChoice(e) }} options={filterNameOptions()} />\n                </div>\n                <ColoredLine color=\"Grey\" />\n                <div>\n                    <CheckBoxContainer choiceEvent={(e) => { this.handleWorkoutChoice(e) }} options={this.props.workoutNames} />\n                </div>\n                <ChartComponent workoutNames={GetOptionNames()} otherGraph={this.state.otherGraph} barGraph={this.state.barGraph} data={FilterData()} />\n                <UserRadio choiceEvent={(e) => { this.handleGraphChoice(e) }} options={['Bar Graph', 'Other Graph']} />\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport {getStatistics} from './Store';\nimport _ from 'lodash';\n\nexport class StatisticPage extends Component{\n    render(){\n        const getData = () =>{\n            let test = \"\";\n            test = _.map(getStatistics(this.props.username), (val, key)=> {\n                return <p>{`${key}: ${val}`}</p>;\n            });\n            return test;\n        }\n        return (\n            <div>\n                <h2>Statistics</h2>\n            {getData()}\n            </div>\n        );\n    }\n}","\nimport React, {Component} from 'react';\nimport { GoogleSheet } from '@lourd/react-google-sheet';\nimport apiKey from './apiKey.json';\nimport {fillOfflineSheet} from './Store';\n\nconst MyData = ({ data, content }) => {\n  fillOfflineSheet(data, content);\n  return null;\n}\n\n// Wraps the GoogleSheet component to provide some basic components\n// for display loading & error states\nconst SimpleGSheet = props => (\n  <GoogleSheet id={props.id} range={props.range}>\n    {({ error, data, loading }) =>\n      loading ? (\n        'Getting data...'\n      ) : error ? (\n        JSON.stringify(error, null, 2)\n      ) : data ? (\n        <MyData data={data} content={props.content}/>\n      ) : null\n    }\n  </GoogleSheet>\n)\n\nclass DataFetcher extends Component {\n  state = {\n    id: JSON.parse(JSON.stringify(apiKey.SheetID)),\n    range: '',\n    submitted: null,\n  }\n\n  componentDidMount(){\n    this.setState({\n        submitted: {\n          id: this.props.sheetId,\n          range: this.props.sheetRange\n        },\n      })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.setState({\n      submitted: {\n        id: this.state.id,\n        range: this.state.range,\n      },\n    })\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <div>\n        {this.state.submitted && (\n          <SimpleGSheet\n            id={this.state.submitted.id}\n            range={this.state.submitted.range}\n            content={this.props.content}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DataFetcher","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Field extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.any,\n    label: PropTypes.string\n  };\n\n  handleChange = event => {\n    this.props.onChange(this.props.name, event.target.value);\n  };\n\n  render() {\n    const label = this.props.label || this.props.name;\n    return (\n      <div>\n        <label htmlFor={this.props.name}>{label}</label>\n        <div>\n          <input\n            id={this.props.name}\n            value={this.props.value}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Field;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Field from './Field'\n\nclass ApiForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  state = {\n    apiKey: this.props.init.apiKey,\n    clientId: this.props.init.clientId,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.onSubmit(this.state)\n  }\n\n  handleChange = (key, value) => this.setState({ [key]: value })\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Field\n          name=\"apiKey\"\n          label=\"Google Developer API Key\"\n          value={this.state.apiKey}\n          onChange={this.handleChange}\n        />\n        <Field\n          name=\"clientId\"\n          label=\"Application Client ID\"\n          value={this.state.clientId}\n          onChange={this.handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default ApiForm","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleSheetsApi } from '@lourd/react-google-sheet';\nimport DataFetcher from './DynamicSpreadsheet';\nimport ApiForm from './ApiForm';\nimport apiKey from './apiKey.json';\nimport { profileChecker } from './Store';\nimport { Button } from 'react-bootstrap';\n\nconst range = \"!A:Q\";\n\n// const sheets = (signedIn) => {\n//     if (signedIn) {\n//         return (\n//             <div>\n//                 <DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" />\n//                 <DataFetcher sheetRange={`Squat${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Squat\" />\n//                 <DataFetcher sheetRange={`Press${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Press\" />\n//                 <DataFetcher sheetRange={`BenchPress${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"BenchPress\" />\n//                 <DataFetcher sheetRange={`Deadlift${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Deadlift\" />\n//                 <DataFetcher sheetRange={`Bent-Over Barbell Row${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Bent-Over Barbell Row\" />\n//             </div>\n//         )\n//     } else {\n//         return null;\n//     }\n// }\n\nconst SheetsDemo = props => (\n    <GoogleSheetsApi clientId={props.clientId} apiKey={props.apiKey} scopes={[\"https://www.googleapis.com/auth/spreadsheets\"]}>\n        {({ authorize, loading: apiLoading, signout, signedIn, error }) => (\n            <div>\n                {apiLoading ? (\n                    <div>Loading...</div>\n                ) : error ? (\n                    JSON.stringify(error, null, 2)\n                ) : signedIn ? (\n                    props.loggedIn ? <Button bsStyle=\"danger\" onClick={() => { props.signin(false, getProfile()) }}>Sign Out</Button> : <Button bsStyle=\"success\" onClick={() => { props.signin(true, getProfile()) }}>Sign In</Button>\n                ) : (\n                                <Button bsStyle=\"primary\" onClick={authorize}>Authorize<DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" /></Button>\n                            )}\n                {signedIn && <DataFetcher sheetRange={`UserRegister`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"UserRegister\" />}\n                {signedIn && <DataFetcher sheetRange={`PowerClean${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"PowerClean\" />}\n                {signedIn && <DataFetcher sheetRange={`Squat${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Squat\" />}\n                {signedIn && <DataFetcher sheetRange={`Press${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Press\" />}\n                {signedIn && <DataFetcher sheetRange={`BenchPress${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"BenchPress\" />}\n                {signedIn && <DataFetcher sheetRange={`Deadlift${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Deadlift\" />}\n                {signedIn && <DataFetcher sheetRange={`Bent-Over Barbell Row${range}`} sheetId={JSON.parse(JSON.stringify(apiKey.SheetID))} content=\"Bent-Over Barbell Row\" />}\n            </div>\n        )}\n    </GoogleSheetsApi >\n)\nSheetsDemo.propTypes = {\n    clientId: PropTypes.string.isRequired,\n    apiKey: PropTypes.string.isRequired,\n    loggedIn: PropTypes.bool.isRequired,\n}\n\nconst getProfile = () => {\n    let auth = window.gapi.auth2.getAuthInstance();\n    let profile = auth.currentUser.get().getBasicProfile();\n    profileChecker(profile);\n    return profile;\n}\n\nexport class SheetExtractor extends Component {\n    state = {\n        apiKey: JSON.parse(JSON.stringify(apiKey.key)),\n        clientId:\n            JSON.parse(JSON.stringify(apiKey['Client-ID'])),\n        range: \"\",\n    }\n    componentDidMount() {\n        this.setState({\n            range: this.props.range\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.range !== this.props.range) {\n            this.setState({\n                range: this.props.range\n            })\n            return true;\n        } return false;\n    }\n\n    handleSubmit = state => this.setState(state)\n    render() {\n        return (\n            <div>\n                {this.state.apiKey ? (\n                    <SheetsDemo\n                        apiKey={this.state.apiKey}\n                        clientId={this.state.clientId}\n                        loggedIn={this.props.loggedIn}\n                        signin={(accepted, profile) => { this.props.signedin(accepted, profile) }}\n                    />\n                ) : (\n                        <ApiForm onSubmit={this.handleSubmit} init={this.state} />\n                    )}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Navbar, NavItem, Nav, Image } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Link } from 'react-router-dom';\nimport { PersonalSpace } from './PersonalSpace';\nimport { WorkoutTab } from './YourWorkout';\nimport { VersusTab } from './VersusSpace';\nimport { StatisticPage } from './Statistics';\nimport { getNames, workoutName } from './Store';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { SheetExtractor } from './SheetAccess';\n\nconst styles = {\n  thumbnail: {\n    width: 50,\n    height: 50\n  },\n}\n\nclass App extends Component {\n  state = {\n    credentials: \"User\",\n    accepted: false,\n  }\n\n  render() {\n    const Sheet = (props) => {\n      return <SheetExtractor loggedIn={props.loggedIn} signedin={(accepted, user) => { this.setState({ accepted: accepted, credentials: user.getName(), image: user.getImageUrl() }); }} />\n    }\n    if (this.state.accepted === false) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Sheet loggedIn={false} />\n        </div>\n      );\n    } else if (this.state.accepted === true) {\n      return (\n        <div className=\"App\">\n          <HeaderComponent />\n          <Navigation image={this.state.image} credentials={this.state.credentials} logOut={(e) => { this.setState({ accepted: e }); }} />\n          <Sheet loggedIn={true} />\n        </div>\n      );\n    }\n  }\n}\n\nclass Routing extends Component {\n  render() {\n    return (\n      <div>\n        <Route path=\"/Statistics\" render={(props) => <StatisticPage {...props} username={this.props.creds} />} />\n        <Route path=\"/PersonalSpace\" render={(props) => <PersonalSpace {...props} username={this.props.creds} />} />\n        <Route path=\"/YourWorkout\" render={(props) => <WorkoutTab {...props} username={this.props.creds} />} />\n        <Route path=\"/VersusSpace\" render={(props) => <VersusTab {...props} username={this.props.creds} userNames={getNames()} workoutNames={workoutName} />} />\n      </div>\n    );\n  }\n}\n\nconst HeaderComponent = () => {\n  return (\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1 className=\"App-title\">Fitness Applet</h1>\n    </header>\n  );\n}\n\nconst Navigation = (props) => {\n  return (\n    <div className=\"App container\">\n      <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/Statistics\">Fitness-Applet</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullLeft>\n            <LinkContainer to=\"/PersonalSpace\">\n              <NavItem>Personal-Space</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/YourWorkout\">\n              <NavItem>Your Workout</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/VersusSpace\">\n              <NavItem>Versus-Space</NavItem>\n            </LinkContainer>\n          </Nav>\n          <Navbar.Collapse>\n            <Navbar.Text pullRight>\n              Signed in as: <Navbar.Link href=\"#\">{props.credentials}</Navbar.Link>\n              <label style={styles.thumbnail}>\n                <Image thumbnail circle responsive src={props.image} />\n              </label>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar.Collapse>\n      </Navbar>\n      <Routing creds={props.credentials} />\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL + '/'}>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}